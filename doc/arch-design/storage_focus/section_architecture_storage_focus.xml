<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!ENTITY % openstack SYSTEM "../../common/entities/openstack.ent">
%openstack;
]>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="architecture-storage-hardware">
    <title>Architecture</title>
    <para>There are three areas to consider when selecting storage hardware:</para>
    <itemizedlist>
        <listitem>
            <para>Cost</para>
        </listitem>
        <listitem>
            <para>Performance</para>
        </listitem>
        <listitem>
            <para>Reliability</para>
        </listitem>
    </itemizedlist>
    <para>Storage-focused OpenStack clouds must reflect that the workloads are storage
        intensive. These workloads are not compute intensive, nor are
        they consistently network intensive. The network may be
        heavily utilized to transfer storage, but they are not
        otherwise network intensive.</para>
    <para>For a storage-focused OpenStack design architecture, the
        selection of storage hardware determines the overall
        performance and scalability of the design architecture. Several factors
        impact the design process:</para>
    <variablelist>
      <varlistentry>
        <term>Cost</term>
        <listitem>
            <para>The cost of components affects which storage
                architecture and hardware you choose.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Performance</term>
        <listitem>
            <para>The latency of storage I/O requests indicates performance.
                Performance requirements affect which solution you choose.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Scalability</term>
        <listitem>
            <para>Scalability refers to how the storage solution performs
                as it expands to its maximum size. Storage solutions
                that perform well in small configurations but have
                degraded performance in large configurations are not scalable.
                A solution that performs well at maximum expansion is
                scalable. Large deployments require a storage solution
                that performs well as it expands.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Expandability</term>
        <listitem>
            <para>Expandability is the overall ability of the solution
                to grow. A storage solution that expands to 50 PB is
                more expandable than a solution that only scales to 10 PB.</para>
              <note>
                <para>This metric is related to scalability.
                </para>
              </note>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>Latency is a key consideration in a
        storage-focused OpenStack cloud. Using solid-state disks
        (SSDs) to minimize latency for instance storage, and to reduce
        CPU delays caused by waiting for the storage, increases
        performance. We recommend evaluating the
        gains from using RAID controller cards in compute hosts to
        improve the performance of the underlying disk
        subsystem.</para>
    <para>The selection of storage architecture determines if a scale-out
        solution should be used or if a single, highly expandable and
        scalable centralized storage array would be a better choice.
        If a centralized storage array is the right fit for the requirements
        then the array vendor determines the hardware selection. It is possible
        to build a storage array using commodity hardware with Open Source
        software, but requires people with expertise to build such a system.</para>
    <para>On the other hand, a scale-out storage solution that
        uses direct-attached storage (DAS) in the servers may be an
        appropriate choice. This requires configuration of the server
        hardware to support the storage solution.</para>
    <para>Considerations affecting storage architecture (and corresponding
        storage hardware) of a Storage-focused OpenStack cloud:</para>
    <variablelist>
      <varlistentry>
        <term>Connectivity</term>
        <listitem>
            <para>Based on the selected storage solution, ensure the
                connectivity matches the storage solution requirements.
                If selecting centralized storage array, determine how the
                hypervisors connect to the storage array.
                Connectivity can affect latency and thus performance.
                We recommended confirming that the network
                characteristics minimize latency to boost the
                overall performance of the design.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Latency</term>
        <listitem>
            <para>Determine if the use case has
                consistent or highly variable latency.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Throughput</term>
        <listitem>
            <para>Ensure that the storage solution
                throughput is optimized based on application
                requirements.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Server hardware</term>
        <listitem>
            <para>Use of DAS impacts the server
                hardware choice and affects host density, instance
                density, power density, OS-hypervisor, and management
                tools.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section xml:id="compute-server-hardware-selection">
        <title>Compute (server) hardware selection</title>
    <para>Evaluate Compute (server) hardware four
        opposing dimensions:</para>
    <variablelist>
      <varlistentry>
        <term>Server density</term>
        <listitem>
            <para>A measure of how many servers can
                fit into a given measure of physical space, such as a
                rack unit [U].</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Resource capacity</term>
        <listitem>
            <para>The number of CPU cores, how much
                RAM, or how much storage a given server delivers.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Expandability</term>
        <listitem>
            <para>The number of additional resources you can add to a server
                before it reaches capacity.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Cost</term>
        <listitem>
            <para>The relative of the hardware weighted against
                the level of design effort needed to build the
                system.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>You must weigh the dimensions against each other to
        determine the best design for the desired purpose. For
        example, increasing server density can mean sacrificing
        resource capacity or expandability. Increasing resource
        capacity and expandability can increase cost but decrease
        server density. Decreasing cost often means decreasing
        supportability, server density, resource capacity, and
        expandability.</para>
    <para>Compute capacity (CPU cores and RAM capacity) is a secondary
        consideration for selecting server hardware. As
        a result, the required server hardware must supply adequate
        CPU sockets, additional CPU cores, and more RAM; network
        connectivity and storage capacity are not as critical. The
        hardware needs to provide enough network connectivity and
        storage capacity to meet the user requirements, however they
        are not the primary consideration.</para>
    <para>Some server hardware form factors are better
        suited to storage-focused designs than others. The following is
        a list of these form factors:</para>
    <itemizedlist>
        <listitem>
            <para>Most blade servers typically support dual-socket
                multi-core CPUs. Choose either full width or full height
                blades to avoid the limit. High density blade servers
                support up to 16 servers in only 10
                rack units using half height or half width blades.</para>
              <warning>
                <para>This decreases density by 50% (only 8 servers
                in 10 U) if a full width or full height option is used.
                </para>
              </warning>
        </listitem>
        <listitem>
            <para>1U rack-mounted servers have the ability to offer greater
               server density than a blade server solution, but are often
               limited to dual-socket, multi-core CPU configurations.</para>
              <note>
                <para>As of the Icehouse release, neither HP, IBM,
                nor Dell offered 1U rack servers with more than 2 CPU
                sockets.
                </para>
              </note>
            <para>To obtain greater than dual-socket support in
                a 1U rack-mount form factor, customers need to buy
                their systems from Original Design Manufacturers
                (ODMs) or second-tier manufacturers.</para>
              <warning>
                <para>This may cause issues for organizations that have
                preferred vendor policies or concerns with support and hardware
                warranties of non-tier 1 vendors.
                </para>
              </warning>
        </listitem>
        <listitem>
            <para>2U rack-mounted servers provide quad-socket,
                multi-core CPU support but with a corresponding
                decrease in server density (half the density offered
                by 1U rack-mounted servers).</para>
        </listitem>
        <listitem>
            <para>Larger rack-mounted servers, such as 4U servers,
                often provide even greater CPU capacity. Commonly
                supporting four or even eight CPU sockets. These
                servers have greater expandability but such
                servers have much lower server density and usually
                greater hardware cost.</para>
        </listitem>
        <listitem>
            <para>Rack-mounted servers
                that support multiple independent servers in a single
                2U or 3U enclosure, "sled servers", deliver increased density as
                compared to a typical 1U-2U rack-mounted servers.</para>
            <para>For example, many sled servers offer four independent
                dual-socket nodes in 2U for a total of 8 CPU sockets
                in 2U. However, the dual-socket limitation on
                individual nodes may not be sufficient to offset their
                additional cost and configuration complexity.</para>
        </listitem>
    </itemizedlist>
    <para>Other factors strongly influence server hardware
        selection for a storage-focused OpenStack design
        architecture. The following is a list of these factors:</para>
    <variablelist>
      <varlistentry>
        <term>Instance density</term>
        <listitem>
            <para>In this architecture, instance
                density and CPU-RAM oversubscription are lower. You
                require more hosts to support the anticipated
                scale, especially if the design uses dual-socket
                hardware designs.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Host density</term>
        <listitem>
            <para>Another option to address the higher
                host count is to use a quad socket platform. Taking
                this approach decreases host density which also
                increases rack count. This configuration affects the
                number of power connections and also impacts network
                and cooling requirements.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Power and cooling density</term>
        <listitem>
            <para>The power and cooling
                density requirements might be lower than with blade,
                sled, or 1U server designs due to lower host density
                (by using 2U, 3U or even 4U server designs). For data
                centers with older infrastructure, this might be a
                desirable feature.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>Storage-focused OpenStack design architecture server
        hardware selection should focus on a "scale up" versus "scale
        out" solution. The determination of which is the best
        solution, a smaller number of larger hosts or a larger number of
        smaller hosts, depends on a combination of factors
        including cost, power, cooling, physical rack and floor space,
        support-warranty, and manageability.</para>
    </section>

    <section xml:id="networking-hardware-selections">
        <title>Networking hardware selection</title>
    <para>Key considerations for the selection of networking hardware include:</para>
    <variablelist>
      <varlistentry>
        <term>Port count</term>
        <listitem>
            <para>The user requires networking
                hardware that has the requisite port count.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Port density</term>
        <listitem>
            <para>The physical space required to provide the
                requisite port count affects the network design.
                A switch that provides 48 10&nbsp;GbE
                ports in 1U has a much higher port density than a
                switch that provides 24 10&nbsp;GbE ports in 2U. On a
                general scale, a higher port density leaves more rack
                space for compute or storage components which is
                preferred. It is also important to consider fault
                domains and power density. Finally, higher density
                switches are more expensive, therefore it is important
                not to over design the network.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Port speed</term>
        <listitem>
            <para>The networking hardware must support the
                proposed network speed, for example: 1&nbsp;GbE, 10&nbsp;GbE, or
                40&nbsp;GbE (or even 100&nbsp;GbE).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Redundancy</term>
        <listitem>
            <para>User requirements for high availability and cost
                considerations influence the required level of network
                hardware redundancy. Achieve network redundancy by adding
                redundant power supplies or paired switches.</para>
              <note>
                <para>If this is a requirement,
                the hardware must support this configuration.
                User requirements determine if a completely
                redundant network infrastructure is required.</para>
              </note>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Power requirements</term>
        <listitem>
            <para>Ensure that the physical data
                center provides the necessary power for the selected
                network hardware. This is not typically an issue for
                top of rack (ToR) switches, but may be an issue for
                spine switches in a leaf and spine fabric, or end of
                row (EoR) switches.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Protocol support</term>
        <listitem>
            <para>It is possible to gain more
                performance out of a single storage system by using
                specialized network technologies such as RDMA, SRP,
                iSER and SCST. The specifics for using these
                technologies is beyond the scope of this book.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    </section>

    <section xml:id="software-selection-arch-storage">
      <title>Software selection</title>
    <para>Selecting software for a storage-focused
        OpenStack architecture design includes three areas:</para>
    <itemizedlist>
        <listitem>
            <para>Operating system (OS) and hypervisor</para>
        </listitem>
        <listitem>
            <para>OpenStack components</para>
        </listitem>
        <listitem>
            <para>Supplemental software</para>
        </listitem>
    </itemizedlist>
    <para>Design decisions made in each of these areas impacts the
        rest of the OpenStack architecture design.</para>
    </section>

    <section xml:id="operating-system-and-hypervisor-arch-storage">
        <title>Operating system and hypervisor</title>
    <para>Selecting the OS and hypervisor has a significant impact
        on the overall design and also affects server hardware
        selection. Ensure that the selected operating system and
        hypervisor combination support the storage hardware and work
        with the networking hardware selection and topology.
        For example, Link Aggregation Control Protocol (LACP) requires
        support from both the OS and hypervisor.</para>
    <para>OS and hypervisor selection affect the following areas:</para>
    <variablelist>
      <varlistentry>
        <term>Cost</term>
        <listitem>
            <para>Selection of a commercially supported
                hypervisor, such as Microsoft Hyper-V, results in
                a different cost model than a
                community-supported open source hypervisor like
                Kinstance or Xen. Similarly, choosing Ubuntu over Red
                Hat (or vice versa) impacts cost due to
                support contracts. However, business or application
                requirements might dictate a specific or commercially
                supported hypervisor.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Supportability</term>
        <listitem>
            <para>Staff must have training with the chosen hypervisor.
                Consider the cost of training when choosing
                a solution. The support of a commercial product
                such as Red Hat, SUSE, or Windows, is the
                responsibility of the OS vendor. If an open source
                platform is chosen, the support comes from in-house
                resources.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Management tools</term>
        <listitem>
            <para>Ubuntu and Kinstance use different management tools
                than VMware vSphere. Although both OS and hypervisor
                combinations are supported by OpenStack, there are
                varying impacts to the rest of the
                design as a result of the selection of one combination
                versus the other.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Scale and performance</term>
        <listitem>
            <para>Ensure that the selected OS
                and hypervisor combination meet the appropriate scale
                and performance requirements needed for this storage
                focused OpenStack cloud. The chosen architecture must
                meet the targeted instance-host ratios with
                the selected OS-hypervisor combination.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Security</term>
        <listitem>
            <para>Ensure that the design can accommodate
                the regular periodic installation of application
                security patches while maintaining the required
                workloads. The frequency of security patches for the
                proposed OS-hypervisor combination impacts
                performance and the patch installation process
                could affect maintenance windows.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Supported features</term>
        <listitem>
            <para>Determine the required features of
                OpenStack. This often determines the
                selection of the OS-hypervisor combination. Certain
                features are only available with specific OSes or
                hypervisors. For example, if certain features are not
                available, you might need to modify the design to
                meet user requirements.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Interoperability</term>
        <listitem>
            <para>Any chosen OS/hypervisor combination should be chosen
                based on the interoperability with one another, and other
                OS-hyervisor combinations. Operational and troubleshooting
                tools for one OS-hypervisor combination may differ
                from the tools used for another OS-hypervisor
                combination. As a result, the design must
                address if the two sets of tools need to interoperate.
           </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

    <section xml:id="openstack-components-arch-storage">
      <title>OpenStack components</title>
    <para>Which OpenStack components you choose can have a significant
        impact on the overall design. While there are certain
        components that are always present, Compute and Image Service, for
        example, there are other services that may not need to be
        present. As an example, a certain design may not require
        the Orchestration module. Omitting Orchestration would not typically have a
        significant impact on the overall design, however, if the
        architecture uses a replacement for OpenStack Object Storage for its
        storage component, this could potentially have significant
        impacts on the rest of the design.</para>
    <para>A storage-focused design might require the ability to use
        Orchestration to launch instances with Block Storage volumes to perform
        storage-intensive processing.</para>
    <para>A storage-focused OpenStack design architecture typically uses the
        following components:</para>
    <itemizedlist>
        <listitem>
            <para>OpenStack Identity (keystone)</para>
        </listitem>
        <listitem>
            <para>OpenStack dashboard (horizon)</para>
        </listitem>
        <listitem>
            <para>OpenStack Compute (nova) (including the use of multiple hypervisor
                drivers)</para>
        </listitem>
        <listitem>
            <para>OpenStack Object Storage (swift) (or another object storage solution)</para>
        </listitem>
        <listitem>
            <para>OpenStack Block Storage (cinder)</para>
        </listitem>
        <listitem>
            <para>OpenStack Image Service (glance)</para>
        </listitem>
        <listitem>
            <para>OpenStack Networking (neutron) or legacy networking (nova-network)</para>
        </listitem>
    </itemizedlist>
    <para>Excluding certain OpenStack components may limit or
        constrain the functionality of other components. If a design
        opts to include Orchestration but exclude Telemetry, then the design
        cannot take advantage of Orchestration's auto scaling
        functionality (which relies on information from Telemetry).
        Due to the fact that you can use Orchestration to spin up a large
        number of instances to perform the compute-intensive
        processing, we strongly recommend including Orchestration in a
        compute-focused architecture design.</para>
    </section>

    <section xml:id="supplemental-software-arch-storage">
      <title>Supplemental software</title>
    <para>While OpenStack is a fairly complete collection of software
        projects for building a platform for cloud services, you may need
        to add other pieces of software.</para>
    </section>

    <section xml:id="networking-software-arch-storage">
      <title>Networking software</title>
    <para>OpenStack Networking (neutron) provides a wide variety of networking
        services for instances. There are many additional networking
        software packages that may be useful to manage the OpenStack
        components themselves. Some examples include HAProxy,
        keepalived, and various routing daemons (like Quagga). The
        <citetitle>OpenStack High Availability Guide</citetitle> describes
        some of these software packages, HAProxy in particular. See the <link
        xlink:href="http://docs.openstack.org/high-availability-guide/content/ch-network.html">Network
        controller cluster stack chapter</link> of the OpenStack High
        Availability Guide.</para>
    </section>

    <section xml:id="management-software-arch-storage">
      <title>Management software</title>
    <para>Management software includes software for providing:</para>
      <itemizedlist>
        <listitem>
          <para>
            Clustering
          </para>
        </listitem>
        <listitem>
          <para>
            Logging
          </para>
        </listitem>
        <listitem>
          <para>
            Monitoring
          </para>
        </listitem>
        <listitem>
          <para>
            Alerting
          </para>
        </listitem>
      </itemizedlist>
      <important>
        <para>The factors for determining which
        software packages in this category to select is
        outside the scope of this design guide.</para>
      </important>
    <para>The availability design requirements determine the selection of
        Clustering Software, such as Corosync or Pacemaker.
        The availability of the cloud infrastructure and the complexity
        of supporting the configuration after deployment determines
        the impact of including these software packages. The
        <citetitle>OpenStack High Availability Guide</citetitle> provides
        more details on the installation and configuration of Corosync
        and Pacemaker.</para>
    <para>Operational considerations determine the requirements for
        logging, monitoring, and alerting. Each of these
        sub-categories includes options. For
        example, in the logging sub-category you could select
        Logstash, Splunk, Log Insight, or another log
        aggregation-consolidation tool. Store logs in a
        centralized location to facilitate performing analytics
        against the data. Log data analytics engines can also provide
        automation and issue notification, by providing a mechanism to
        both alert and automatically attempt to remediate some of the
        more commonly known issues.</para>
    <para>If you require any of these software packages, the
        design must account for the additional resource consumption
        (CPU, RAM, storage, and network bandwidth for a log
        aggregation solution, for example). Some other potential
        design impacts include:</para>
    <itemizedlist>
        <listitem>
            <para>OS-Hypervisor combination: Ensure that the
                selected logging, monitoring, or alerting tools
                support the proposed OS-hypervisor combination.</para>
        </listitem>
        <listitem>
            <para>Network hardware: The network hardware selection
                needs to be supported by the logging, monitoring, and
                alerting software.</para>
        </listitem>
    </itemizedlist>
    </section>

    <section xml:id="database-software-arch-storage">
      <title>Database software</title>
    <para>Most OpenStack components require access to
        back-end database services to store state and configuration
        information. Choose an appropriate back-end database which
        satisfies the availability and fault tolerance requirements
        of the OpenStack services.</para>
    <para>MySQL is the default database for OpenStack, but other
        compatible databases are available.</para>
      <note>
        <para>
          Telemetry uses MongoDB.
        </para>
      </note>
    <para>The chosen high availability database solution changes
        according to the selected database. MySQL, for example, provides
        several options. Use a replication technology such as Galera
        for active-active clustering. For active-passive use some form of
        shared storage. Each of these potential solutions has an
        impact on the design:</para>
    <itemizedlist>
        <listitem>
            <para>Solutions that employ Galera/MariaDB require at
                least three MySQL nodes.</para>
        </listitem>
        <listitem>
            <para>MongoDB has its own design considerations for high
                availability.</para>
        </listitem>
        <listitem>
            <para>OpenStack design, generally, does not include shared
                storage. However, for some high availability designs,
                certain components might require it depending on the specific
                implementation.</para>
        </listitem>
    </itemizedlist>
  </section>
</section>
