<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="saharaclient_commands">

    <!-- This file is automatically generated, do not edit -->

    <?dbhtml stop-chunking?>

    <title>Data processing command-line client</title>

    <para>The <command>sahara</command> client is the command-line
        interface (CLI) for the Data processing API and its extensions.

       This chapter documents <command>sahara</command> version
        <literal>0.11.1</literal>.
    </para>

    <para>For help on a specific <command>sahara</command>
       command, enter:
    </para>
    <screen><prompt>$</prompt> <userinput><command>sahara</command> <option>help</option> <replaceable>COMMAND</replaceable></userinput></screen>

    <section xml:id="saharaclient_command_usage">
       <title>sahara usage</title>
        <screen><computeroutput>usage: sahara [--version] [--debug] [--os-cache] [--region-name &lt;region-name&gt;]
              [--service-type &lt;service-type&gt;]
              [--endpoint-type &lt;endpoint-type&gt;]
              [--sahara-api-version &lt;sahara-api-ver&gt;]
              [--bypass-url &lt;bypass-url&gt;] [--os-tenant-name OS_TENANT_NAME]
              [--os-tenant-id OS_TENANT_ID] [--os-auth-system OS_AUTH_SYSTEM]
              [--os-auth-token OS_AUTH_TOKEN] [--insecure]
              [--os-cacert &lt;ca-certificate&gt;] [--os-cert &lt;certificate&gt;]
              [--os-key &lt;key&gt;] [--timeout &lt;seconds&gt;]
              [--os-auth-url OS_AUTH_URL] [--os-domain-id OS_DOMAIN_ID]
              [--os-domain-name OS_DOMAIN_NAME]
              [--os-project-id OS_PROJECT_ID]
              [--os-project-name OS_PROJECT_NAME]
              [--os-project-domain-id OS_PROJECT_DOMAIN_ID]
              [--os-project-domain-name OS_PROJECT_DOMAIN_NAME]
              [--os-trust-id OS_TRUST_ID] [--os-user-id OS_USER_ID]
              [--os-user-name OS_USERNAME]
              [--os-user-domain-id OS_USER_DOMAIN_ID]
              [--os-user-domain-name OS_USER_DOMAIN_NAME]
              [--os-password OS_PASSWORD]
              &lt;subcommand&gt; ...</computeroutput></screen>
  <variablelist wordsize="10">
    <title>Subcommands</title>
  <varlistentry>
    <term><command>cluster-create</command></term>
    <listitem>
      <para>
        Create a cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-delete</command></term>
    <listitem>
      <para>
        Delete a cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-list</command></term>
    <listitem>
      <para>
        Print a list of available clusters.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-scale</command></term>
    <listitem>
      <para>
        Scale a cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-show</command></term>
    <listitem>
      <para>
        Show details of a cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-template-create</command></term>
    <listitem>
      <para>
      Create a cluster template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-template-delete</command></term>
    <listitem>
      <para>
      Delete a cluster template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-template-list</command></term>
    <listitem>
      <para>
      Print a list of available cluster templates.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-template-show</command></term>
    <listitem>
      <para>
      Show details of a cluster template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-template-update</command></term>
    <listitem>
      <para>
      Update a cluster template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>data-source-create</command></term>
    <listitem>
      <para>
        Create a data source that provides job input or
      receives job output.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>data-source-delete</command></term>
    <listitem>
      <para>
        Delete a data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>data-source-list</command></term>
    <listitem>
      <para>
        Print a list of available data sources.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>data-source-show</command></term>
    <listitem>
      <para>
        Show details of a data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>data-source-update</command></term>
    <listitem>
      <para>
        Update a data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-add-tag</command></term>
    <listitem>
      <para>
        Add a tag to an image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-list</command></term>
    <listitem>
      <para>
        Print a list of available images.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-register</command></term>
    <listitem>
      <para>
        Register an image from the Image index.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-remove-tag</command></term>
    <listitem>
      <para>
        Remove a tag from an image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-show</command></term>
    <listitem>
      <para>
        Show details of an image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-unregister</command></term>
    <listitem>
      <para>
        Unregister an image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-binary-create</command></term>
    <listitem>
      <para>
        Record a job binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-binary-data-create</command></term>
    <listitem>
      <para>
      Store data in the internal DB. Use 'swift upload'
      instead of this command. Use this command only if
      Swift is not available.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-binary-data-delete</command></term>
    <listitem>
      <para>
      Delete an internally stored job binary data.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-binary-data-list</command></term>
    <listitem>
      <para>
      Print a list of internally stored job binary data.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-binary-delete</command></term>
    <listitem>
      <para>
        Delete a job binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-binary-list</command></term>
    <listitem>
      <para>
        Print a list of job binaries.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-binary-show</command></term>
    <listitem>
      <para>
        Show details of a job binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-binary-update</command></term>
    <listitem>
      <para>
        Update a job binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-create</command></term>
    <listitem>
      <para>
        Create a job.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-delete</command></term>
    <listitem>
      <para>
        Delete a job.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-list</command></term>
    <listitem>
      <para>
        Print a list of jobs.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-show</command></term>
    <listitem>
      <para>
        Show details of a job.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-template-create</command></term>
    <listitem>
      <para>
      Create a job template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-template-delete</command></term>
    <listitem>
      <para>
      Delete a job template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-template-list</command></term>
    <listitem>
      <para>
        Print a list of job templates.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-template-show</command></term>
    <listitem>
      <para>
        Show details of a job template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>job-type-list</command></term>
    <listitem>
      <para>
        Show supported job types.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-group-template-create</command></term>
    <listitem>
      <para>
      Create a node group template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-group-template-delete</command></term>
    <listitem>
      <para>
      Delete a node group template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-group-template-list</command></term>
    <listitem>
      <para>
      Print a list of available node group templates.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-group-template-show</command></term>
    <listitem>
      <para>
      Show details of a node group template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-group-template-update</command></term>
    <listitem>
      <para>
      Update a node group template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>plugin-list</command></term>
    <listitem>
      <para>
        Print a list of available plugins.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>plugin-show</command></term>
    <listitem>
      <para>
        Show details of a plugin.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>bash-completion</command></term>
    <listitem>
      <para>
        Prints arguments for bash-completion. Prints all of
      the commands and options to stdout so that the
      sahara.bash_completion script doesn't have to hard
      code them.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>help</command></term>
    <listitem>
      <para>
        Display help about this program or one of its
      subcommands.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_command_optional">
        <title>sahara optional arguments</title>
  <variablelist wordsize="10">
  <varlistentry>
    <term><command>--version</command></term>
    <listitem>
      <para>
        show program's version number and exit
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--debug</command></term>
    <listitem>
      <para>
        Print debugging output.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cache</command></term>
    <listitem>
      <para>
        Use the auth token cache. Defaults to False if
      <code>env[OS_CACHE]</code> is not set.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--region-name &lt;region-name&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_REGION_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--service-type &lt;service-type&gt;</command></term>
    <listitem>
      <para>
      Defaults to data-processing for all actions.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--endpoint-type &lt;endpoint-type&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[SAHARA_ENDPOINT_TYPE]</code> or
      <code>env[OS_ENDPOINT_TYPE]</code> or publicURL.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--sahara-api-version &lt;sahara-api-ver&gt;</command></term>
    <listitem>
      <para>
      Accepts "api", defaults to <code>env[SAHARA_API_VERSION]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--bypass-url &lt;bypass-url&gt;</command></term>
    <listitem>
      <para>
      Use this API endpoint instead of the Service Catalog.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-name OS_TENANT_NAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-id OS_TENANT_ID</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-system OS_AUTH_SYSTEM</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_AUTH_SYSTEM]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-token OS_AUTH_TOKEN</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_AUTH_TOKEN]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insecure</command></term>
    <listitem>
      <para>
        Explicitly allow client to perform "insecure" TLS
      (https) requests. The server's certificate will not be
      verified against any certificate authorities. This
      option should be used with caution.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cacert &lt;ca-certificate&gt;</command></term>
    <listitem>
      <para>
      Specify a CA bundle file to use in verifying a TLS
      (https) server certificate. Defaults to
      <code>env[OS_CACERT]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cert &lt;certificate&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_CERT]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-key &lt;key&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_KEY]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--timeout &lt;seconds&gt;</command></term>
    <listitem>
      <para>
        Set request timeout (in seconds).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-url OS_AUTH_URL</command></term>
    <listitem>
      <para>
      Authentication URL
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-domain-id OS_DOMAIN_ID</command></term>
    <listitem>
      <para>
      Domain ID to scope to
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-domain-name OS_DOMAIN_NAME</command></term>
    <listitem>
      <para>
      Domain name to scope to
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-id OS_PROJECT_ID</command></term>
    <listitem>
      <para>
      Project ID to scope to
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-name OS_PROJECT_NAME</command></term>
    <listitem>
      <para>
      Project name to scope to
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-domain-id OS_PROJECT_DOMAIN_ID</command></term>
    <listitem>
      <para>
      Domain ID containing project
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-domain-name OS_PROJECT_DOMAIN_NAME</command></term>
    <listitem>
      <para>
      Domain name containing project
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-trust-id OS_TRUST_ID</command></term>
    <listitem>
      <para>
      Trust ID
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-id OS_USER_ID</command></term>
    <listitem>
      <para>
      User ID
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-name OS_USERNAME, --os-username OS_USERNAME</command></term>
    <listitem>
      <para>
      Username
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-domain-id OS_USER_DOMAIN_ID</command></term>
    <listitem>
      <para>
      User's domain id
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-domain-name OS_USER_DOMAIN_NAME</command></term>
    <listitem>
      <para>
      User's domain name
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-password OS_PASSWORD</command></term>
    <listitem>
      <para>
      User's password
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_cluster-create">
        <title>sahara cluster-create</title>
        <screen><computeroutput>usage: sahara cluster-create [--json JSON] [--count COUNT]</computeroutput></screen>
        <para>
Create a cluster.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--json JSON</command></term>
    <listitem>
      <para>
        JSON representation of cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--count COUNT</command></term>
    <listitem>
      <para>
        Number of clusters to create.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_cluster-delete">
        <title>sahara cluster-delete</title>
        <screen><computeroutput>usage: sahara cluster-delete [--name NAME] [--id &lt;cluster_id&gt;]</computeroutput></screen>
        <para>
Delete a cluster.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;cluster_id&gt;</command></term>
    <listitem>
      <para>
        ID of the cluster to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_cluster-list">
        <title>sahara cluster-list</title>
        <screen><computeroutput>usage: sahara cluster-list</computeroutput></screen>
        <para>
Print a list of available clusters.
        </para>
    </section>
    <section xml:id="saharaclient_subcommand_cluster-scale">
        <title>sahara cluster-scale</title>
        <screen><computeroutput>usage: sahara cluster-scale [--name NAME] [--id &lt;cluster_id&gt;] [--json JSON]</computeroutput></screen>
        <para>
Scale a cluster.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;cluster_id&gt;</command></term>
    <listitem>
      <para>
        ID of the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--json JSON</command></term>
    <listitem>
      <para>
        JSON representation of cluster scale.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_cluster-show">
        <title>sahara cluster-show</title>
        <screen><computeroutput>usage: sahara cluster-show [--name NAME] [--id &lt;cluster_id&gt;]
                           [--show-progress SHOW_PROGRESS] [--json]</computeroutput></screen>
        <para>
Show details of a cluster.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;cluster_id&gt;</command></term>
    <listitem>
      <para>
        ID of the cluster to show.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--show-progress SHOW_PROGRESS</command></term>
    <listitem>
      <para>
      Show provision progress events of the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--json</command></term>
    <listitem>
      <para>
        Print JSON representation of the cluster.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_cluster-template-create">
        <title>sahara cluster-template-create</title>
        <screen><computeroutput>usage: sahara cluster-template-create [--json JSON]</computeroutput></screen>
        <para>
Create a cluster template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--json JSON</command></term>
    <listitem>
      <para>
        JSON representation of cluster template.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_cluster-template-delete">
        <title>sahara cluster-template-delete</title>
        <screen><computeroutput>usage: sahara cluster-template-delete [--name NAME] [--id &lt;template_id&gt;]</computeroutput></screen>
        <para>
Delete a cluster template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the cluster template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;template_id&gt;</command></term>
    <listitem>
      <para>
        ID of the cluster template to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_cluster-template-list">
        <title>sahara cluster-template-list</title>
        <screen><computeroutput>usage: sahara cluster-template-list</computeroutput></screen>
        <para>
Print a list of available cluster templates.
        </para>
    </section>
    <section xml:id="saharaclient_subcommand_cluster-template-show">
        <title>sahara cluster-template-show</title>
        <screen><computeroutput>usage: sahara cluster-template-show [--name NAME] [--id &lt;template_id&gt;]
                                    [--json]</computeroutput></screen>
        <para>
Show details of a cluster template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the cluster template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;template_id&gt;</command></term>
    <listitem>
      <para>
        ID of the cluster template to show.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--json</command></term>
    <listitem>
      <para>
        Print JSON representation of cluster template.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_cluster-template-update">
        <title>sahara cluster-template-update</title>
        <screen><computeroutput>usage: sahara cluster-template-update [--name NAME] [--id &lt;template_id&gt;]
                                      [--json JSON]</computeroutput></screen>
        <para>
Update a cluster template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the cluster template to update.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;template_id&gt;</command></term>
    <listitem>
      <para>
        ID of the cluster template to update.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--json JSON</command></term>
    <listitem>
      <para>
        JSON representation of cluster template update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_data-source-create">
        <title>sahara data-source-create</title>
        <screen><computeroutput>usage: sahara data-source-create --name NAME --type TYPE --url URL
                                 [--description DESCRIPTION] [--user USER]
                                 [--password PASSWORD]</computeroutput></screen>
        <para>
Create a data source that provides job input or receives job output.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--type TYPE</command></term>
    <listitem>
      <para>
        Type of the data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--url URL</command></term>
    <listitem>
      <para>
        URL for the data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description DESCRIPTION</command></term>
    <listitem>
      <para>
      Description of the data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user USER</command></term>
    <listitem>
      <para>
        Username for accessing the data source URL.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--password PASSWORD</command></term>
    <listitem>
      <para>
        Password for accessing the data source URL.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_data-source-delete">
        <title>sahara data-source-delete</title>
        <screen><computeroutput>usage: sahara data-source-delete [--name NAME] [--id ID]</computeroutput></screen>
        <para>
Delete a data source.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id ID</command></term>
    <listitem>
      <para>
        ID of data source to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_data-source-list">
        <title>sahara data-source-list</title>
        <screen><computeroutput>usage: sahara data-source-list</computeroutput></screen>
        <para>
Print a list of available data sources.
        </para>
    </section>
    <section xml:id="saharaclient_subcommand_data-source-show">
        <title>sahara data-source-show</title>
        <screen><computeroutput>usage: sahara data-source-show [--name NAME] [--id ID]</computeroutput></screen>
        <para>
Show details of a data source.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id ID</command></term>
    <listitem>
      <para>
        ID of the data source.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_data-source-update">
        <title>sahara data-source-update</title>
        <screen><computeroutput>usage: sahara data-source-update [--name NAME] [--id ID] [--json JSON]</computeroutput></screen>
        <para>
Update a data source.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the data source to update.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id ID</command></term>
    <listitem>
      <para>
        ID of the data source to update.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--json JSON</command></term>
    <listitem>
      <para>
        JSON containing the data source fields to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_image-add-tag">
        <title>sahara image-add-tag</title>
        <screen><computeroutput>usage: sahara image-add-tag [--name NAME] [--id &lt;image_id&gt;] --tag &lt;tag&gt;</computeroutput></screen>
        <para>
Add a tag to an image.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;image_id&gt;</command></term>
    <listitem>
      <para>
        ID of image to tag.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--tag &lt;tag&gt;</command></term>
    <listitem>
      <para>
        Tag to add.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_image-list">
        <title>sahara image-list</title>
        <screen><computeroutput>usage: sahara image-list</computeroutput></screen>
        <para>
Print a list of available images.
        </para>
    </section>
    <section xml:id="saharaclient_subcommand_image-register">
        <title>sahara image-register</title>
        <screen><computeroutput>usage: sahara image-register --id &lt;image_id&gt; [--username &lt;name&gt;]
                             [--description &lt;desc&gt;]</computeroutput></screen>
        <para>
Register an image from the Image index.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--id &lt;image_id&gt;</command></term>
    <listitem>
      <para>
        ID of image, run "glance image-list" to see all IDs.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--username &lt;name&gt;</command></term>
    <listitem>
      <para>
        Username of privileged user in the image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;desc&gt;</command></term>
    <listitem>
      <para>
        Description of the image.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_image-remove-tag">
        <title>sahara image-remove-tag</title>
        <screen><computeroutput>usage: sahara image-remove-tag [--name NAME] [--id &lt;image_id&gt;] --tag &lt;tag&gt;</computeroutput></screen>
        <para>
Remove a tag from an image.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;image_id&gt;</command></term>
    <listitem>
      <para>
        Image to tag.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--tag &lt;tag&gt;</command></term>
    <listitem>
      <para>
        Tag to remove.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_image-show">
        <title>sahara image-show</title>
        <screen><computeroutput>usage: sahara image-show [--name NAME] [--id &lt;image_id&gt;]</computeroutput></screen>
        <para>
Show details of an image.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;image_id&gt;</command></term>
    <listitem>
      <para>
        ID of the image.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_image-unregister">
        <title>sahara image-unregister</title>
        <screen><computeroutput>usage: sahara image-unregister [--name NAME] [--id &lt;image_id&gt;]</computeroutput></screen>
        <para>
Unregister an image.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;image_id&gt;</command></term>
    <listitem>
      <para>
        ID of image to unregister.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-binary-create">
        <title>sahara job-binary-create</title>
        <screen><computeroutput>usage: sahara job-binary-create --name NAME --url URL
                                [--description DESCRIPTION] [--user USER]
                                [--password PASSWORD]</computeroutput></screen>
        <para>
Record a job binary.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the job binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--url URL</command></term>
    <listitem>
      <para>
        URL for the job binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description DESCRIPTION</command></term>
    <listitem>
      <para>
      Description of the job binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user USER</command></term>
    <listitem>
      <para>
        Username for accessing the job binary URL.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--password PASSWORD</command></term>
    <listitem>
      <para>
        Password for accessing the job binary URL.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-binary-data-create">
        <title>sahara job-binary-data-create</title>
        <screen><computeroutput>usage: sahara job-binary-data-create [--file FILE] [--name NAME]</computeroutput></screen>
        <para>
Store data in the internal DB. Use 'swift upload' instead of this command. Use
this command only if Swift is not available.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--file FILE</command></term>
    <listitem>
      <para>
        Data to store.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the job binary internal.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-binary-data-delete">
        <title>sahara job-binary-data-delete</title>
        <screen><computeroutput>usage: sahara job-binary-data-delete --id ID</computeroutput></screen>
        <para>
Delete an internally stored job binary data.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--id ID</command></term>
    <listitem>
      <para>
        ID of internally stored job binary data.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-binary-data-list">
        <title>sahara job-binary-data-list</title>
        <screen><computeroutput>usage: sahara job-binary-data-list</computeroutput></screen>
        <para>
Print a list of internally stored job binary data.
        </para>
    </section>
    <section xml:id="saharaclient_subcommand_job-binary-delete">
        <title>sahara job-binary-delete</title>
        <screen><computeroutput>usage: sahara job-binary-delete [--name NAME] [--id ID]</computeroutput></screen>
        <para>
Delete a job binary.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the job binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id ID</command></term>
    <listitem>
      <para>
        ID of the job binary to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-binary-list">
        <title>sahara job-binary-list</title>
        <screen><computeroutput>usage: sahara job-binary-list</computeroutput></screen>
        <para>
Print a list of job binaries.
        </para>
    </section>
    <section xml:id="saharaclient_subcommand_job-binary-show">
        <title>sahara job-binary-show</title>
        <screen><computeroutput>usage: sahara job-binary-show [--name NAME] [--id ID]</computeroutput></screen>
        <para>
Show details of a job binary.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the job binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id ID</command></term>
    <listitem>
      <para>
        ID of the job binary.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-binary-update">
        <title>sahara job-binary-update</title>
        <screen><computeroutput>usage: sahara job-binary-update [--name NAME] [--id &lt;job_binary_id&gt;]
                                [--json JSON]</computeroutput></screen>
        <para>
Update a job binary.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the job binary to update.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;job_binary_id&gt;</command></term>
    <listitem>
      <para>
        ID of the job binary to update.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--json JSON</command></term>
    <listitem>
      <para>
        JSON representation of job binary update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-create">
        <title>sahara job-create</title>
        <screen><computeroutput>usage: sahara job-create --job-template JOB_TEMPLATE [--cluster CLUSTER]
                         [--input-data INPUT_DATA] [--output-data OUTPUT_DATA]
                         [--param name=value] [--arg ARG]
                         [--config name=value] [--json JSON]</computeroutput></screen>
        <para>
Create a job.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--job-template JOB_TEMPLATE</command></term>
    <listitem>
      <para>
      ID of the job template to run.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--cluster CLUSTER</command></term>
    <listitem>
      <para>
        ID of the cluster to run the job in.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--input-data INPUT_DATA</command></term>
    <listitem>
      <para>
      ID of the input data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--output-data OUTPUT_DATA</command></term>
    <listitem>
      <para>
      ID of the output data source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--param</command></term>
    <listitem>
      <para>
        name=value    Parameters to add to the job, repeatable.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--arg ARG</command></term>
    <listitem>
      <para>
        Arguments to add to the job, repeatable.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--config</command></term>
    <listitem>
      <para>
        name=value   Config parameters to add to the job, repeatable.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--json JSON</command></term>
    <listitem>
      <para>
        JSON representation of the job.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-delete">
        <title>sahara job-delete</title>
        <screen><computeroutput>usage: sahara job-delete --id ID</computeroutput></screen>
        <para>
Delete a job.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--id ID</command></term>
    <listitem>
      <para>
        ID of a job.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-list">
        <title>sahara job-list</title>
        <screen><computeroutput>usage: sahara job-list</computeroutput></screen>
        <para>
Print a list of jobs.
        </para>
    </section>
    <section xml:id="saharaclient_subcommand_job-show">
        <title>sahara job-show</title>
        <screen><computeroutput>usage: sahara job-show --id ID</computeroutput></screen>
        <para>
Show details of a job.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--id ID</command></term>
    <listitem>
      <para>
        ID of the job.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-template-create">
        <title>sahara job-template-create</title>
        <screen><computeroutput>usage: sahara job-template-create [--name NAME] [--type TYPE] [--main MAIN]
                                  [--lib LIB] [--description DESCRIPTION]
                                  [--json JSON]</computeroutput></screen>
        <para>
Create a job template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the job template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--type TYPE</command></term>
    <listitem>
      <para>
        Type of the job template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--main MAIN</command></term>
    <listitem>
      <para>
        ID for job's main job-binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--lib LIB</command></term>
    <listitem>
      <para>
        ID of job's lib job-binary, repeatable.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description DESCRIPTION</command></term>
    <listitem>
      <para>
      Description of the job template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--json JSON</command></term>
    <listitem>
      <para>
        JSON representation of job template.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-template-delete">
        <title>sahara job-template-delete</title>
        <screen><computeroutput>usage: sahara job-template-delete [--name NAME] [--id ID]</computeroutput></screen>
        <para>
Delete a job template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the job template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id ID</command></term>
    <listitem>
      <para>
        ID of the job template.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-template-list">
        <title>sahara job-template-list</title>
        <screen><computeroutput>usage: sahara job-template-list</computeroutput></screen>
        <para>
Print a list of job templates.
        </para>
    </section>
    <section xml:id="saharaclient_subcommand_job-template-show">
        <title>sahara job-template-show</title>
        <screen><computeroutput>usage: sahara job-template-show [--name NAME] [--id ID]</computeroutput></screen>
        <para>
Show details of a job template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the job template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id ID</command></term>
    <listitem>
      <para>
        ID of the job template.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_job-type-list">
        <title>sahara job-type-list</title>
        <screen><computeroutput>usage: sahara job-type-list [--type &lt;job_type&gt;] [--plugin &lt;plugin&gt;]
                            [--plugin-version &lt;plugin_version&gt;]</computeroutput></screen>
        <para>
Show supported job types.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--type &lt;job_type&gt;</command></term>
    <listitem>
      <para>
        Report only on this job type.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--plugin &lt;plugin&gt;</command></term>
    <listitem>
      <para>
        Report only job types supported by this plugin.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--plugin-version &lt;plugin_version&gt;</command></term>
    <listitem>
      <para>
      Report only on job types supported by this version of
      a specified plugin. Only valid with --plugin.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_node-group-template-create">
        <title>sahara node-group-template-create</title>
        <screen><computeroutput>usage: sahara node-group-template-create [--json JSON]</computeroutput></screen>
        <para>
Create a node group template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--json JSON</command></term>
    <listitem>
      <para>
        JSON representation of node group template.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_node-group-template-delete">
        <title>sahara node-group-template-delete</title>
        <screen><computeroutput>usage: sahara node-group-template-delete [--name NAME] [--id &lt;template_id&gt;]</computeroutput></screen>
        <para>
Delete a node group template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the node group template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;template_id&gt;</command></term>
    <listitem>
      <para>
        ID of the node group template to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_node-group-template-list">
        <title>sahara node-group-template-list</title>
        <screen><computeroutput>usage: sahara node-group-template-list</computeroutput></screen>
        <para>
Print a list of available node group templates.
        </para>
    </section>
    <section xml:id="saharaclient_subcommand_node-group-template-show">
        <title>sahara node-group-template-show</title>
        <screen><computeroutput>usage: sahara node-group-template-show [--name NAME] [--id &lt;template_id&gt;]
                                       [--json]</computeroutput></screen>
        <para>
Show details of a node group template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the node group template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;template_id&gt;</command></term>
    <listitem>
      <para>
        ID of the node group template to show.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--json</command></term>
    <listitem>
      <para>
        Print JSON representation of node group template.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_node-group-template-update">
        <title>sahara node-group-template-update</title>
        <screen><computeroutput>usage: sahara node-group-template-update [--name NAME] [--id &lt;template_id&gt;]
                                         [--json JSON]</computeroutput></screen>
        <para>
Update a node group template.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        Name of the node group template to update.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--id &lt;template_id&gt;</command></term>
    <listitem>
      <para>
        ID of the node group template to update.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--json JSON</command></term>
    <listitem>
      <para>
        JSON representation of the node group template update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="saharaclient_subcommand_plugin-list">
        <title>sahara plugin-list</title>
        <screen><computeroutput>usage: sahara plugin-list</computeroutput></screen>
        <para>
Print a list of available plugins.
        </para>
    </section>
    <section xml:id="saharaclient_subcommand_plugin-show">
        <title>sahara plugin-show</title>
        <screen><computeroutput>usage: sahara plugin-show --name &lt;plugin&gt;</computeroutput></screen>
        <para>
Show details of a plugin.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;plugin&gt;</command></term>
    <listitem>
      <para>
        Name of the plugin.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
</chapter>
