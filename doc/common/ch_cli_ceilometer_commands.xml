<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="ceilometerclient_commands">

    <!-- This file is automatically generated, do not edit -->

    <?dbhtml stop-chunking?>

    <title>Telemetry command-line client</title>
    <para>The <command>ceilometer</command> client is the command-line interface
         (CLI) for the Telemetry API and its extensions. This chapter documents
         <command>ceilometer</command> version 1.0.9.
    </para>
    <para>For help on a specific <command>ceilometer</command>
       command, enter:
    </para>
    <screen><prompt>$</prompt> <userinput><command>ceilometer</command> <option>help</option> <replaceable>COMMAND</replaceable></userinput></screen>

    <section xml:id="ceilometerclient_command_usage">
       <title>ceilometer usage</title>
        <screen><computeroutput>usage: ceilometer [--version] [-d] [-v] [-k] [--cert-file CERT_FILE]
                  [--key-file KEY_FILE] [--os-cacert &lt;ca-certificate-file&gt;]
                  [--ca-file OS_CACERT] [--timeout TIMEOUT]
                  [--os-username OS_USERNAME] [--os-password OS_PASSWORD]
                  [--os-tenant-id OS_TENANT_ID]
                  [--os-tenant-name OS_TENANT_NAME]
                  [--os-auth-url OS_AUTH_URL]
                  [--os-region-name OS_REGION_NAME]
                  [--os-auth-token OS_AUTH_TOKEN]
                  [--ceilometer-url CEILOMETER_URL]
                  [--ceilometer-api-version CEILOMETER_API_VERSION]
                  [--os-service-type OS_SERVICE_TYPE]
                  [--os-endpoint-type OS_ENDPOINT_TYPE]
                  &lt;subcommand&gt; ...
</computeroutput></screen>
  <variablelist wordsize="10">
    <title>Subcommands</title>
  <varlistentry>
    <term><command>alarm-combination-create</command></term>
    <listitem>
      <para>
      Create a new alarm based on state of other alarms.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-combination-update</command></term>
    <listitem>
      <para>
      Update an existing alarm based on state of other
      alarms.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-create</command></term>
    <listitem>
      <para>
        Create a new alarm (Deprecated).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-delete</command></term>
    <listitem>
      <para>
        Delete an alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-history</command></term>
    <listitem>
      <para>
        Display the change history of an alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-list</command></term>
    <listitem>
      <para>
        List the user's alarms.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-show</command></term>
    <listitem>
      <para>
        Show an alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-state-get</command></term>
    <listitem>
      <para>
        Get the state of an alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-state-set</command></term>
    <listitem>
      <para>
        Set the state of an alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-threshold-create</command></term>
    <listitem>
      <para>
      Create a new alarm based on computed statistics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-threshold-update</command></term>
    <listitem>
      <para>
      Update an existing alarm based on computed statistics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-update</command></term>
    <listitem>
      <para>
        Update an existing alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event-list</command></term>
    <listitem>
      <para>
        List events.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event-show</command></term>
    <listitem>
      <para>
        Show a particular event.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event-type-list</command></term>
    <listitem>
      <para>
        List event types.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>meter-list</command></term>
    <listitem>
      <para>
        List the user's meters.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource-list</command></term>
    <listitem>
      <para>
        List the resources.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource-show</command></term>
    <listitem>
      <para>
        Show the resource.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>sample-create</command></term>
    <listitem>
      <para>
        Create a sample.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>sample-list</command></term>
    <listitem>
      <para>
        List the samples for a meter.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>statistics</command></term>
    <listitem>
      <para>
        List the statistics for a meter.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>trait-description-list</command></term>
    <listitem>
      <para>
      List trait info for an event type.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>trait-list</command></term>
    <listitem>
      <para>
        List trait all traits with name &lt;trait_name&gt; for Event
      Type
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>bash-completion</command></term>
    <listitem>
      <para>
        Prints all of the commands and options to stdout.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>help</command></term>
    <listitem>
      <para>
        Display help about this program or one of its
      subcommands.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_command_optional">
        <title>ceilometer optional arguments</title>
  <variablelist wordsize="10">
  <varlistentry>
    <term><command>--version</command></term>
    <listitem>
      <para>
        show program's version number and exit
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-d, --debug</command></term>
    <listitem>
      <para>
        Defaults to <code>env[CEILOMETERCLIENT_DEBUG]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-v, --verbose</command></term>
    <listitem>
      <para>
        Print more verbose output
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-k, --insecure</command></term>
    <listitem>
      <para>
        Explicitly allow ceilometerclient to perform
      "insecure" SSL (https) requests. The server's
      certificate will not be verified against any
      certificate authorities. This option should be used
      with caution.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--cert-file CERT_FILE</command></term>
    <listitem>
      <para>
      Path of certificate file to use in SSL connection.
      This file can optionally be prepended with the private
      key.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--key-file KEY_FILE</command></term>
    <listitem>
      <para>
        Path of client key to use in SSL connection. This
      option is not necessary if your key is prepended to
      your cert file.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cacert &lt;ca-certificate-file&gt;</command></term>
    <listitem>
      <para>
      Path of CA TLS certificate(s) used to verifythe remote
      server's certificate. Without this option ceilometer
      looks for the default system CA certificates.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ca-file OS_CACERT</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use --os-cacert.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--timeout TIMEOUT</command></term>
    <listitem>
      <para>
        Number of seconds to wait for a response
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-username OS_USERNAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_USERNAME]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-password OS_PASSWORD</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_PASSWORD]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-id OS_TENANT_ID</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_ID]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-name OS_TENANT_NAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_NAME]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-url OS_AUTH_URL</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_AUTH_URL]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-region-name OS_REGION_NAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_REGION_NAME]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-token OS_AUTH_TOKEN</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_AUTH_TOKEN]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ceilometer-url CEILOMETER_URL</command></term>
    <listitem>
      <para>
      Defaults to <code>env[CEILOMETER_URL]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ceilometer-api-version CEILOMETER_API_VERSION</command></term>
    <listitem>
      <para>
      Defaults to <code>env[CEILOMETER_API_VERSION]</code> or 2
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-service-type OS_SERVICE_TYPE</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_SERVICE_TYPE]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-endpoint-type OS_ENDPOINT_TYPE</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_ENDPOINT_TYPE]</code>
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-combination-create">
        <title>ceilometer alarm-combination-create command</title>
        <screen><computeroutput>usage: ceilometer alarm-combination-create --name &lt;NAME&gt;
                                           [--project-id &lt;PROJECT_ID&gt;]
                                           [--user-id &lt;USER_ID&gt;]
                                           [--description &lt;DESCRIPTION&gt;]
                                           [--state &lt;STATE&gt;]
                                           [--enabled {True|False}]
                                           [--alarm-action &lt;Webhook URL&gt;]
                                           [--ok-action &lt;Webhook URL&gt;]
                                           [--insufficient-data-action &lt;Webhook URL&gt;]
                                           --alarm_ids &lt;ALARM IDS&gt;
                                           [--operator &lt;OPERATOR&gt;]
                                           [--repeat-actions {True|False}]
        </computeroutput></screen>
        <para>
Create a new alarm based on state of other alarms.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant)
      Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
      Free text description of the alarm
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient_data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
      True if alarm evaluation/actioning is enabled
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to alarm. May be
      used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to OK. May be
      used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient_data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm_ids &lt;ALARM IDS&gt;</command></term>
    <listitem>
      <para>
      List of alarm id Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['and', 'or']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified while
      alarm remains in target state Defaults to False.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-combination-update">
        <title>ceilometer alarm-combination-update command</title>
        <screen><computeroutput>usage: ceilometer alarm-combination-update -a &lt;ALARM_ID&gt; [--name &lt;NAME&gt;]
                                           [--project-id &lt;PROJECT_ID&gt;]
                                           [--user-id &lt;USER_ID&gt;]
                                           [--description &lt;DESCRIPTION&gt;]
                                           [--state &lt;STATE&gt;]
                                           [--enabled {True|False}]
                                           [--alarm-action &lt;Webhook URL&gt;]
                                           [--ok-action &lt;Webhook URL&gt;]
                                           [--insufficient-data-action &lt;Webhook URL&gt;]
                                           [--alarm_ids &lt;ALARM IDS&gt;]
                                           [--operator &lt;OPERATOR&gt;]
                                           [--repeat-actions {True|False}]
        </computeroutput></screen>
        <para>
Update an existing alarm based on state of other alarms.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-a &lt;ALARM_ID&gt;, --alarm_id &lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the alarm to update. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
      Free text description of the alarm
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient_data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
      True if alarm evaluation/actioning is enabled
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to alarm. May be
      used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to OK. May be
      used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient_data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm_ids &lt;ALARM IDS&gt;</command></term>
    <listitem>
      <para>
      List of alarm id
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['and', 'or']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified while
      alarm remains in target state
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-delete">
        <title>ceilometer alarm-delete command</title>
        <screen><computeroutput>usage: ceilometer alarm-delete -a &lt;ALARM_ID&gt;
        </computeroutput></screen>
        <para>
Delete an alarm.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-a &lt;ALARM_ID&gt;, --alarm_id &lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the alarm to delete. Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-history">
        <title>ceilometer alarm-history command</title>
        <screen><computeroutput>usage: ceilometer alarm-history -a &lt;ALARM_ID&gt; [-q &lt;QUERY&gt;]
        </computeroutput></screen>
        <para>
Display the change history of an alarm.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-a &lt;ALARM_ID&gt;, --alarm_id &lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the alarm for which history is shown. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
      key[op]data_type::value; list. data_type is optional,
      but if supplied must be string, integer, float, or
      boolean
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-list">
        <title>ceilometer alarm-list command</title>
        <screen><computeroutput>usage: ceilometer alarm-list [-q &lt;QUERY&gt;]
        </computeroutput></screen>
        <para>
List the user's alarms.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
      key[op]data_type::value; list. data_type is optional,
      but if supplied must be string, integer, float, or
      boolean
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-show">
        <title>ceilometer alarm-show command</title>
        <screen><computeroutput>usage: ceilometer alarm-show -a &lt;ALARM_ID&gt;
        </computeroutput></screen>
        <para>
Show an alarm.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-a &lt;ALARM_ID&gt;, --alarm_id &lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the alarm to show. Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-state-get">
        <title>ceilometer alarm-state-get command</title>
        <screen><computeroutput>usage: ceilometer alarm-state-get -a &lt;ALARM_ID&gt;
        </computeroutput></screen>
        <para>
Get the state of an alarm.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-a &lt;ALARM_ID&gt;, --alarm_id &lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the alarm state to show. Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-state-set">
        <title>ceilometer alarm-state-set command</title>
        <screen><computeroutput>usage: ceilometer alarm-state-set -a &lt;ALARM_ID&gt; --state &lt;STATE&gt;
        </computeroutput></screen>
        <para>
Set the state of an alarm.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-a &lt;ALARM_ID&gt;, --alarm_id &lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the alarm state to set. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient_data'] Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-threshold-create">
        <title>ceilometer alarm-threshold-create command</title>
        <screen><computeroutput>usage: ceilometer alarm-threshold-create --name &lt;NAME&gt;
                                         [--project-id &lt;PROJECT_ID&gt;]
                                         [--user-id &lt;USER_ID&gt;]
                                         [--description &lt;DESCRIPTION&gt;]
                                         [--state &lt;STATE&gt;]
                                         [--enabled {True|False}]
                                         [--alarm-action &lt;Webhook URL&gt;]
                                         [--ok-action &lt;Webhook URL&gt;]
                                         [--insufficient-data-action &lt;Webhook URL&gt;]
                                         -m &lt;METRIC&gt; [--period &lt;PERIOD&gt;]
                                         [--evaluation-periods &lt;COUNT&gt;]
                                         [--statistic &lt;STATISTIC&gt;]
                                         [--comparison-operator &lt;OPERATOR&gt;]
                                         --threshold &lt;THRESHOLD&gt; [-q &lt;QUERY&gt;]
                                         [--repeat-actions {True|False}]
        </computeroutput></screen>
        <para>
Create a new alarm based on computed statistics.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant)
      Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
      Free text description of the alarm
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient_data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
      True if alarm evaluation/actioning is enabled
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to alarm. May be
      used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to OK. May be
      used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient_data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRIC&gt;, --meter-name &lt;METRIC&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--period &lt;PERIOD&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate over
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
      Number of periods to evaluate over
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--statistic &lt;STATISTIC&gt;</command></term>
    <listitem>
      <para>
      Statistic to evaluate, one of: ['max', 'min', 'avg',
      'sum', 'count']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le', 'eq',
      'ne', 'ge', 'gt']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
      Threshold to evaluate against Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
      key[op]data_type::value; list. data_type is optional,
      but if supplied must be string, integer, float, or
      boolean
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified while
      alarm remains in target state Defaults to False.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-threshold-update">
        <title>ceilometer alarm-threshold-update command</title>
        <screen><computeroutput>usage: ceilometer alarm-threshold-update -a &lt;ALARM_ID&gt; [--name &lt;NAME&gt;]
                                         [--project-id &lt;PROJECT_ID&gt;]
                                         [--user-id &lt;USER_ID&gt;]
                                         [--description &lt;DESCRIPTION&gt;]
                                         [--state &lt;STATE&gt;]
                                         [--enabled {True|False}]
                                         [--alarm-action &lt;Webhook URL&gt;]
                                         [--ok-action &lt;Webhook URL&gt;]
                                         [--insufficient-data-action &lt;Webhook URL&gt;]
                                         [-m &lt;METRIC&gt;] [--period &lt;PERIOD&gt;]
                                         [--evaluation-periods &lt;COUNT&gt;]
                                         [--statistic &lt;STATISTIC&gt;]
                                         [--comparison-operator &lt;OPERATOR&gt;]
                                         [--threshold &lt;THRESHOLD&gt;]
                                         [-q &lt;QUERY&gt;]
                                         [--repeat-actions {True|False}]
        </computeroutput></screen>
        <para>
Update an existing alarm based on computed statistics.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-a &lt;ALARM_ID&gt;, --alarm_id &lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the alarm to update. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
      Free text description of the alarm
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient_data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
      True if alarm evaluation/actioning is enabled
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to alarm. May be
      used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to OK. May be
      used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient_data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRIC&gt;, --meter-name &lt;METRIC&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--period &lt;PERIOD&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate over
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
      Number of periods to evaluate over
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--statistic &lt;STATISTIC&gt;</command></term>
    <listitem>
      <para>
      Statistic to evaluate, one of: ['max', 'min', 'avg',
      'sum', 'count']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le', 'eq',
      'ne', 'ge', 'gt']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
      Threshold to evaluate against
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
      key[op]data_type::value; list. data_type is optional,
      but if supplied must be string, integer, float, or
      boolean
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified while
      alarm remains in target state
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-update">
        <title>ceilometer alarm-update command</title>
        <screen><computeroutput>usage: ceilometer alarm-update -a &lt;ALARM_ID&gt; [--name &lt;NAME&gt;]
                               [--project-id &lt;PROJECT_ID&gt;]
                               [--user-id &lt;USER_ID&gt;]
                               [--description &lt;DESCRIPTION&gt;] [--state &lt;STATE&gt;]
                               [--enabled {True|False}]
                               [--alarm-action &lt;Webhook URL&gt;]
                               [--ok-action &lt;Webhook URL&gt;]
                               [--insufficient-data-action &lt;Webhook URL&gt;]
                               [--period &lt;PERIOD&gt;]
                               [--evaluation-periods &lt;COUNT&gt;] [-m &lt;METRIC&gt;]
                               [--statistic &lt;STATISTIC&gt;]
                               [--comparison-operator &lt;OPERATOR&gt;]
                               [--threshold &lt;THRESHOLD&gt;]
                               [--matching-metadata &lt;Matching Metadata&gt;]
                               [--repeat-actions {True|False}]
        </computeroutput></screen>
        <para>
Update an existing alarm.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-a &lt;ALARM_ID&gt;, --alarm_id &lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the alarm to update. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
      Free text description of the alarm
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient_data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
      True if alarm evaluation/actioning is enabled
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to alarm. May be
      used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to OK. May be
      used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient_data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--period &lt;PERIOD&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate over
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
      Number of periods to evaluate over
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRIC&gt;, --meter-name &lt;METRIC&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--statistic &lt;STATISTIC&gt;</command></term>
    <listitem>
      <para>
      Statistic to evaluate, one of: ['max', 'min', 'avg',
      'sum', 'count']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le', 'eq',
      'ne', 'ge', 'gt']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
      Threshold to evaluate against
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--matching-metadata &lt;Matching Metadata&gt;</command></term>
    <listitem>
      <para>
      A meter should match this resource metadata
      (key=value) additionally to the meter_name Defaults to
      None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified while
      alarm remains in target state
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_event-list">
        <title>ceilometer event-list command</title>
        <screen><computeroutput>usage: ceilometer event-list [-q &lt;QUERY&gt;]
        </computeroutput></screen>
        <para>
List events.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
      key[op]data_type::value; list. data_type is optional,
      but if supplied must be string, integer, floator
      datetime.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_event-show">
        <title>ceilometer event-show command</title>
        <screen><computeroutput>usage: ceilometer event-show -m &lt;message_id&gt;
        </computeroutput></screen>
        <para>
Show a particular event.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-m &lt;message_id&gt;, --message_id &lt;message_id&gt;</command></term>
    <listitem>
      <para>
      The id of the event. Should be a UUID Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_event-type-list">
        <title>ceilometer event-type-list command</title>
        <screen><computeroutput>usage: ceilometer event-type-list
        </computeroutput></screen>
        <para>
List event types.
        </para>    </section>
    <section xml:id="ceilometerclient_subcommand_meter-list">
        <title>ceilometer meter-list command</title>
        <screen><computeroutput>usage: ceilometer meter-list [-q &lt;QUERY&gt;]
        </computeroutput></screen>
        <para>
List the user's meters.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
      key[op]data_type::value; list. data_type is optional,
      but if supplied must be string, integer, float, or
      boolean
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_resource-list">
        <title>ceilometer resource-list command</title>
        <screen><computeroutput>usage: ceilometer resource-list [-q &lt;QUERY&gt;]
        </computeroutput></screen>
        <para>
List the resources.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
      key[op]data_type::value; list. data_type is optional,
      but if supplied must be string, integer, float, or
      boolean.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_resource-show">
        <title>ceilometer resource-show command</title>
        <screen><computeroutput>usage: ceilometer resource-show -r &lt;RESOURCE_ID&gt;
        </computeroutput></screen>
        <para>
Show the resource.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-r &lt;RESOURCE_ID&gt;, --resource_id &lt;RESOURCE_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the resource to show. Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_sample-create">
        <title>ceilometer sample-create command</title>
        <screen><computeroutput>usage: ceilometer sample-create [--project-id &lt;PROJECT_ID&gt;]
                                [--user-id &lt;USER_ID&gt;] -r &lt;RESOURCE_ID&gt; -m
                                &lt;METER_NAME&gt; --meter-type &lt;METER_TYPE&gt;
                                --meter-unit &lt;METER_UNIT&gt; --sample-volume
                                &lt;SAMPLE_VOLUME&gt;
                                [--resource-metadata &lt;RESOURCE_METADATA&gt;]
                                [--timestamp &lt;TIMESTAMP&gt;]
        </computeroutput></screen>
        <para>
Create a sample.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--project-id &lt;PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with sample (only settable by
      admin users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with sample (only settable by admin
      users)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-r &lt;RESOURCE_ID&gt;, --resource-id &lt;RESOURCE_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the resource. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METER_NAME&gt;, --meter-name &lt;METER_NAME&gt;</command></term>
    <listitem>
      <para>
      the meter name Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--meter-type &lt;METER_TYPE&gt;</command></term>
    <listitem>
      <para>
      the meter type Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--meter-unit &lt;METER_UNIT&gt;</command></term>
    <listitem>
      <para>
      the meter unit Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--sample-volume &lt;SAMPLE_VOLUME&gt;</command></term>
    <listitem>
      <para>
      The sample volume Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--resource-metadata &lt;RESOURCE_METADATA&gt;</command></term>
    <listitem>
      <para>
      resource metadata
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--timestamp &lt;TIMESTAMP&gt;</command></term>
    <listitem>
      <para>
      the sample timestamp
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_sample-list">
        <title>ceilometer sample-list command</title>
        <screen><computeroutput>usage: ceilometer sample-list [-q &lt;QUERY&gt;] -m &lt;NAME&gt; [-l &lt;NUMBER&gt;]
        </computeroutput></screen>
        <para>
List the samples for a meter.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
      key[op]data_type::value; list. data_type is optional,
      but if supplied must be string, integer, float, or
      boolean
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;NAME&gt;, --meter &lt;NAME&gt;</command></term>
    <listitem>
      <para>
      Name of meter to show samples for. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;NUMBER&gt;, --limit &lt;NUMBER&gt;</command></term>
    <listitem>
      <para>
      Maximum number of samples to return.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_statistics">
        <title>ceilometer statistics command</title>
        <screen><computeroutput>usage: ceilometer statistics [-q &lt;QUERY&gt;] -m &lt;NAME&gt; [-p &lt;PERIOD&gt;] [-g &lt;FIELD&gt;]
        </computeroutput></screen>
        <para>
List the statistics for a meter.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
      key[op]data_type::value; list. data_type is optional,
      but if supplied must be string, integer, float, or
      boolean
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;NAME&gt;, --meter &lt;NAME&gt;</command></term>
    <listitem>
      <para>
      Name of meter to show samples for. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-p &lt;PERIOD&gt;, --period &lt;PERIOD&gt;</command></term>
    <listitem>
      <para>
      Period in seconds over which to group samples.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-g &lt;FIELD&gt;, --groupby &lt;FIELD&gt;</command></term>
    <listitem>
      <para>
      Field for group aggregation.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_trait-description-list">
        <title>ceilometer trait-description-list command</title>
        <screen><computeroutput>usage: ceilometer trait-description-list -e &lt;EVENT_TYPE&gt;
        </computeroutput></screen>
        <para>
List trait info for an event type.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-e &lt;EVENT_TYPE&gt;, --event_type &lt;EVENT_TYPE&gt;</command></term>
    <listitem>
      <para>
      Type of the event for which traits will be shown
      Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_trait-list">
        <title>ceilometer trait-list command</title>
        <screen><computeroutput>usage: ceilometer trait-list -e &lt;EVENT_TYPE&gt; -t &lt;TRAIT_NAME&gt;
        </computeroutput></screen>
        <para>
List trait all traits with name &lt;trait_name&gt; for Event Type &lt;event_type&gt;.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-e &lt;EVENT_TYPE&gt;, --event_type &lt;EVENT_TYPE&gt;</command></term>
    <listitem>
      <para>
      Type of the event for which traits will listed
      Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-t &lt;TRAIT_NAME&gt;, --trait_name &lt;TRAIT_NAME&gt;</command></term>
    <listitem>
      <para>
      The name of the trait to list Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
</chapter>
