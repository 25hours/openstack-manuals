<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="heatclient_commands">

    <!-- This file is automatically generated, do not edit -->

    <?dbhtml stop-chunking?>

    <title>heat commands</title>
    <para>The heat client is the command-line interface (CLI) for the
         OpenStack Orchestration API and its extensions.</para>
    <para>For help on a specific <command>heat</command>
       command, enter:
    </para>
    <screen><prompt>$</prompt> <userinput><command>heat</command> <option>help</option> <replaceable>COMMAND</replaceable></userinput></screen>

    <section xml:id="heatclient_command_usage">
       <title>heat usage</title>
        <screen><computeroutput>            [--key-file KEY_FILE] [--ca-file CA_FILE] [--timeout TIMEOUT]
            [--os-username OS_USERNAME] [--os-password OS_PASSWORD]
            [--os-tenant-id OS_TENANT_ID] [--os-tenant-name OS_TENANT_NAME]
            [--os-auth-url OS_AUTH_URL] [--os-region-name OS_REGION_NAME]
            [--os-auth-token OS_AUTH_TOKEN] [--os-no-client-auth]
            [--heat-url HEAT_URL] [--heat-api-version HEAT_API_VERSION]
            [--os-service-type OS_SERVICE_TYPE]
            [--os-endpoint-type OS_ENDPOINT_TYPE] [--include-password]
            &lt;subcommand&gt; ...
</computeroutput></screen>
  <variablelist wordsize="10">
    <title>Subcommands</title>
  <varlistentry>
    <term><command>action-resume</command></term>
    <listitem>
      <para>
        Resume the stack.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>action-suspend</command></term>
    <listitem>
      <para>
        Suspend the stack.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>create</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use stack-create instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>delete</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use stack-delete instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>describe</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use stack-show instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use event-show instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event-list</command></term>
    <listitem>
      <para>
        List events for a stack.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event-show</command></term>
    <listitem>
      <para>
        Describe the event.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>gettemplate</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use template-show instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>list</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use stack-list instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use resource-show instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource-list</command></term>
    <listitem>
      <para>
        Show list of resources belonging to a stack.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource-metadata</command></term>
    <listitem>
      <para>
        List resource metadata.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource-show</command></term>
    <listitem>
      <para>
        Describe the resource.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource-template</command></term>
    <listitem>
      <para>
        Generate a template based on a resource.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource-type-list</command></term>
    <listitem>
      <para>
        List the available resource types.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource-type-show</command></term>
    <listitem>
      <para>
        Show the resource type.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>stack-create</command></term>
    <listitem>
      <para>
        Create the stack.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>stack-delete</command></term>
    <listitem>
      <para>
        Delete the stack(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>stack-list</command></term>
    <listitem>
      <para>
        List the user's stacks.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>stack-show</command></term>
    <listitem>
      <para>
        Describe the stack.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>stack-update</command></term>
    <listitem>
      <para>
        Update the stack.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>template-show</command></term>
    <listitem>
      <para>
        Get the template for the specified stack.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>template-validate</command></term>
    <listitem>
      <para>
        Validate a template with parameters.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>update</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use stack-update instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>validate</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use template-validate instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>bash-completion</command></term>
    <listitem>
      <para>
        Prints all of the commands and options to stdout.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>help</command></term>
    <listitem>
      <para>
        Display help about this program or one of its
      subcommands.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_command_optional">
        <title>heat optional arguments</title>
  <variablelist wordsize="10">
  <varlistentry>
    <term><command>--version</command></term>
    <listitem>
      <para>
        Shows the client version and exits
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-d, --debug</command></term>
    <listitem>
      <para>
        Defaults to <code>env[HEATCLIENT_DEBUG]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-v, --verbose</command></term>
    <listitem>
      <para>
        Print more verbose output
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-k, --insecure</command></term>
    <listitem>
      <para>
        Explicitly allow the client to perform"insecure" SSL
      (https) requests. The server's certificate will not be
      verified against any certificate authorities. This
      option should be used with caution.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--cert-file CERT_FILE</command></term>
    <listitem>
      <para>
      Path of certificate file to use in SSL connection.
      This file can optionally be prependedwith the private
      key.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--key-file KEY_FILE</command></term>
    <listitem>
      <para>
        Path of client key to use in SSL connection.This
      option is not necessary if your key is prepended to
      your cert file.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ca-file CA_FILE</command></term>
    <listitem>
      <para>
        Path of CA SSL certificate(s) used to verify the
      remote server's certificate. Without this option the
      client looks for the default system CA certificates.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--timeout TIMEOUT</command></term>
    <listitem>
      <para>
        Number of seconds to wait for a response
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-username OS_USERNAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_USERNAME]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-password OS_PASSWORD</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_PASSWORD]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-id OS_TENANT_ID</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_ID]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-name OS_TENANT_NAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_NAME]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-url OS_AUTH_URL</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_AUTH_URL]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-region-name OS_REGION_NAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_REGION_NAME]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-token OS_AUTH_TOKEN</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_AUTH_TOKEN]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-no-client-auth</command></term>
    <listitem>
      <para>
        Do not contact keystone for a token. Defaults to
      <code>env[OS_NO_CLIENT_AUTH]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--heat-url HEAT_URL</command></term>
    <listitem>
      <para>
        Defaults to <code>env[HEAT_URL]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--heat-api-version HEAT_API_VERSION</command></term>
    <listitem>
      <para>
      Defaults to <code>env[HEAT_API_VERSION]</code> or 1
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-service-type OS_SERVICE_TYPE</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_SERVICE_TYPE]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-endpoint-type OS_ENDPOINT_TYPE</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_ENDPOINT_TYPE]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--include-password</command></term>
    <listitem>
      <para>
        Send os-username and os-password to heat
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_action-resume">
        <title>heat action-resume command</title>
        <screen><computeroutput>usage: heat action-resume &lt;NAME or ID&gt;
        </computeroutput></screen>
        <para>
Resume the stack.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack to resume.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_action-suspend">
        <title>heat action-suspend command</title>
        <screen><computeroutput>usage: heat action-suspend &lt;NAME or ID&gt;
        </computeroutput></screen>
        <para>
Suspend the stack.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack to suspend.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_event-list">
        <title>heat event-list command</title>
        <screen><computeroutput>usage: heat event-list [-r &lt;RESOURCE&gt;] &lt;NAME or ID&gt;
        </computeroutput></screen>
        <para>
List events for a stack.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack to show the events for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-r &lt;RESOURCE&gt;, --resource &lt;RESOURCE&gt;</command></term>
    <listitem>
      <para>
      Name of the resource to filter events by
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_event-show">
        <title>heat event-show command</title>
        <screen><computeroutput>usage: heat event-show &lt;NAME or ID&gt; &lt;RESOURCE&gt; &lt;EVENT&gt;
        </computeroutput></screen>
        <para>
Describe the event.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack to show the events for.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;RESOURCE&gt;</command></term>
    <listitem>
      <para>
        Name of the resource the event belongs to.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;EVENT&gt;</command></term>
    <listitem>
      <para>
        ID of event to display details for
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_resource-list">
        <title>heat resource-list command</title>
        <screen><computeroutput>usage: heat resource-list &lt;NAME or ID&gt;
        </computeroutput></screen>
        <para>
Show list of resources belonging to a stack.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack to show the resources for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_resource-metadata">
        <title>heat resource-metadata command</title>
        <screen><computeroutput>usage: heat resource-metadata &lt;NAME or ID&gt; &lt;RESOURCE&gt;
        </computeroutput></screen>
        <para>
List resource metadata.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack to show the resource metadata for.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;RESOURCE&gt;</command></term>
    <listitem>
      <para>
        Name of the resource to show the metadata for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_resource-show">
        <title>heat resource-show command</title>
        <screen><computeroutput>usage: heat resource-show &lt;NAME or ID&gt; &lt;RESOURCE&gt;
        </computeroutput></screen>
        <para>
Describe the resource.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack to show the resource for.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;RESOURCE&gt;</command></term>
    <listitem>
      <para>
        Name of the resource to show the details for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_resource-template">
        <title>heat resource-template command</title>
        <screen><computeroutput>usage: heat resource-template [-F &lt;FORMAT&gt;] &lt;RESOURCE&gt;
        </computeroutput></screen>
        <para>
Generate a template based on a resource.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;RESOURCE&gt;</command></term>
    <listitem>
      <para>
        Name of the resource to generate a template for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-F &lt;FORMAT&gt;, --format &lt;FORMAT&gt;</command></term>
    <listitem>
      <para>
      The template output format, one of: yaml, json
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_resource-type-list">
        <title>heat resource-type-list command</title>
        <screen><computeroutput>usage: heat resource-type-list
        </computeroutput></screen>
        <para>
List the available resource types.
        </para>    </section>
    <section xml:id="heatclient_subcommand_resource-type-show">
        <title>heat resource-type-show command</title>
        <screen><computeroutput>usage: heat resource-type-show &lt;RESOURCE_TYPE&gt;
        </computeroutput></screen>
        <para>
Show the resource type.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;RESOURCE_TYPE&gt;</command></term>
    <listitem>
      <para>
        Resource Type to get the details for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_stack-create">
        <title>heat stack-create command</title>
        <screen><computeroutput>usage: heat stack-create [-f &lt;FILE&gt;] [-e &lt;FILE&gt;] [-u &lt;URL&gt;] [-o &lt;URL&gt;]
                         [-c &lt;TIMEOUT&gt;] [-r] [-P &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                         &lt;STACK_NAME&gt;
        </computeroutput></screen>
        <para>
Create the stack.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;STACK_NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the stack to create.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-f &lt;FILE&gt;, --template-file &lt;FILE&gt;</command></term>
    <listitem>
      <para>
      Path to the template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-e &lt;FILE&gt;, --environment-file &lt;FILE&gt;</command></term>
    <listitem>
      <para>
      Path to the environment.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-u &lt;URL&gt;, --template-url &lt;URL&gt;</command></term>
    <listitem>
      <para>
      URL of template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-o &lt;URL&gt;, --template-object &lt;URL&gt;</command></term>
    <listitem>
      <para>
      URL to retrieve template object (e.g from swift)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-c &lt;TIMEOUT&gt;, --create-timeout &lt;TIMEOUT&gt;</command></term>
    <listitem>
      <para>
      Stack creation timeout in minutes. Default: 60
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-r, --enable-rollback</command></term>
    <listitem>
      <para>
      Enable rollback on create/update failure
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-P &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --parameters &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Parameter values used to create the stack. This can be
      specified multiple times, or once with parameters
      separated by semicolon.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_stack-delete">
        <title>heat stack-delete command</title>
        <screen><computeroutput>usage: heat stack-delete &lt;NAME or ID&gt; [&lt;NAME or ID&gt; ...]
        </computeroutput></screen>
        <para>
Delete the stack(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack(s) to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_stack-list">
        <title>heat stack-list command</title>
        <screen><computeroutput>usage: heat stack-list
        </computeroutput></screen>
        <para>
List the user's stacks.
        </para>    </section>
    <section xml:id="heatclient_subcommand_stack-show">
        <title>heat stack-show command</title>
        <screen><computeroutput>usage: heat stack-show &lt;NAME or ID&gt;
        </computeroutput></screen>
        <para>
Describe the stack.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack to describe.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_stack-update">
        <title>heat stack-update command</title>
        <screen><computeroutput>usage: heat stack-update [-f &lt;FILE&gt;] [-e &lt;FILE&gt;] [-u &lt;URL&gt;] [-o &lt;URL&gt;]
                         [-P &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                         &lt;NAME or ID&gt;
        </computeroutput></screen>
        <para>
Update the stack.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-f &lt;FILE&gt;, --template-file &lt;FILE&gt;</command></term>
    <listitem>
      <para>
      Path to the template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-e &lt;FILE&gt;, --environment-file &lt;FILE&gt;</command></term>
    <listitem>
      <para>
      Path to the environment.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-u &lt;URL&gt;, --template-url &lt;URL&gt;</command></term>
    <listitem>
      <para>
      URL of template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-o &lt;URL&gt;, --template-object &lt;URL&gt;</command></term>
    <listitem>
      <para>
      URL to retrieve template object (e.g from swift)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-P &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --parameters &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Parameter values used to create the stack. This can be
      specified multiple times, or once with parameters
      separated by semicolon.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_template-show">
        <title>heat template-show command</title>
        <screen><computeroutput>usage: heat template-show &lt;NAME or ID&gt;
        </computeroutput></screen>
        <para>
Get the template for the specified stack.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of stack to get the template for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="heatclient_subcommand_template-validate">
        <title>heat template-validate command</title>
        <screen><computeroutput>usage: heat template-validate [-u &lt;URL&gt;] [-f &lt;FILE&gt;] [-e &lt;FILE&gt;] [-o &lt;URL&gt;]
                              [-P &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
        </computeroutput></screen>
        <para>
Validate a template with parameters.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-u &lt;URL&gt;, --template-url &lt;URL&gt;</command></term>
    <listitem>
      <para>
      URL of template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-f &lt;FILE&gt;, --template-file &lt;FILE&gt;</command></term>
    <listitem>
      <para>
      Path to the template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-e &lt;FILE&gt;, --environment-file &lt;FILE&gt;</command></term>
    <listitem>
      <para>
      Path to the environment.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-o &lt;URL&gt;, --template-object &lt;URL&gt;</command></term>
    <listitem>
      <para>
      URL to retrieve template object (e.g from swift)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-P &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --parameters &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Parameter values to validate. This can be specified
      multiple times, or once with parameters separated by
      semicolon.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
</section>
