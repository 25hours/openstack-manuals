<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="neutronclient_commands">

    <!-- This file is automatically generated, do not edit -->

    <?dbhtml stop-chunking?>

    <title>neutron commands</title>
    <para>The neutron client is the command-line interface (CLI) for the
         OpenStack Networking API and its extensions.</para>
    <para>For help on a specific <command>neutron</command>
       command, enter:
    </para>
    <screen><prompt>$</prompt> <userinput><command>neutron</command> <option>help</option> <replaceable>COMMAND</replaceable></userinput></screen>

    <section xml:id="neutronclient_command_usage">
       <title>neutron usage</title>
        <screen><computeroutput>               [--os-auth-strategy &lt;auth-strategy>] [--os-auth-url &lt;auth-url>]
               [--os-tenant-name &lt;auth-tenant-name>]
               [--os-tenant-id &lt;auth-tenant-id>]
               [--os-username &lt;auth-username>] [--os-password &lt;auth-password>]
               [--os-region-name &lt;auth-region-name>] [--os-token &lt;token>]
               [--endpoint-type &lt;endpoint-type>] [--os-url &lt;url>]
               [--os-cacert &lt;ca-certificate>] [--insecure]
  --version             show program's version number and exit
  -v, --verbose         Increase verbosity of output. Can be repeated.
  -q, --quiet           Suppress output except warnings and errors
  -h, --help            Show this help message and exit
  --debug               Show tracebacks on errors
  --os-auth-strategy &lt;auth-strategy>
                        Authentication strategy (Env: OS_AUTH_STRATEGY,
                        default keystone). For now, any other value will
                        disable the authentication
  --os-auth-url &lt;auth-url>
                        Authentication URL (Env: OS_AUTH_URL)
  --os-tenant-name &lt;auth-tenant-name>
                        Authentication tenant name (Env: OS_TENANT_NAME)
  --os-tenant-id &lt;auth-tenant-id>
                        Authentication tenant name (Env: OS_TENANT_ID)
  --os-username &lt;auth-username>
                        Authentication username (Env: OS_USERNAME)
  --os-password &lt;auth-password>
                        Authentication password (Env: OS_PASSWORD)
  --os-region-name &lt;auth-region-name>
                        Authentication region name (Env: OS_REGION_NAME)
  --os-token &lt;token>    Defaults to env[OS_TOKEN]
  --endpoint-type &lt;endpoint-type>
                        Defaults to env[OS_ENDPOINT_TYPE] or publicURL.
  --os-url &lt;url>        Defaults to env[OS_URL]
  --os-cacert &lt;ca-certificate>
                        Specify a CA bundle file to use in verifying a TLS
                        (https) server certificate. Defaults to env[OS_CACERT]
  --insecure            Explicitly allow neutronclient to perform "insecure"
                        SSL (https) requests. The server's certificate will
                        not be verified against any certificate authorities.
                        This option should be used with caution.
  agent-delete                   Delete a given agent.
  agent-list                     List agents.
  agent-show                     Show information of a given agent.
  agent-update                   Update a given agent.
  cisco-credential-create        Creates a credential.
  cisco-credential-delete        Delete a  given credential.
  cisco-credential-list          List credentials that belong to a given tenant.
  cisco-credential-show          Show information of a given credential.
  cisco-network-profile-create   Creates a network profile.
  cisco-network-profile-delete   Delete a given network profile.
  cisco-network-profile-list     List network profiles that belong to a given tenant.
  cisco-network-profile-show     Show information of a given network profile.
  cisco-network-profile-update   Update network profile's information.
  cisco-policy-profile-list      List policy profiles that belong to a given tenant.
  cisco-policy-profile-show      Show information of a given policy profile.
  cisco-policy-profile-update    Update policy profile's information.
  complete                       print bash completion command
  dhcp-agent-list-hosting-net    List DHCP agents hosting a network.
  dhcp-agent-network-add         Add a network to a DHCP agent.
  dhcp-agent-network-remove      Remove a network from a DHCP agent.
  ext-list                       List all extensions.
  ext-show                       Show information of a given resource.
  firewall-create                Create a firewall.
  firewall-delete                Delete a given firewall.
  firewall-list                  List firewalls that belong to a given tenant.
  firewall-policy-create         Create a firewall policy.
  firewall-policy-delete         Delete a given firewall policy.
  firewall-policy-insert-rule    Insert a rule into a given firewall policy.
  firewall-policy-list           List firewall policies that belong to a given tenant.
  firewall-policy-remove-rule    Remove a rule from a given firewall policy.
  firewall-policy-show           Show information of a given firewall policy.
  firewall-policy-update         Update a given firewall policy.
  firewall-rule-create           Create a firewall rule.
  firewall-rule-delete           Delete a given firewall rule.
  firewall-rule-list             List firewall rules that belong to a given tenant.
  firewall-rule-show             Show information of a given firewall rule.
  firewall-rule-update           Update a given firewall rule.
  firewall-show                  Show information of a given firewall.
  firewall-update                Update a given firewall.
  floatingip-associate           Create a mapping between a floating ip and a fixed ip.
  floatingip-create              Create a floating ip for a given tenant.
  floatingip-delete              Delete a given floating ip.
  floatingip-disassociate        Remove a mapping from a floating ip to a fixed ip.
  floatingip-list                List floating ips that belong to a given tenant.
  floatingip-show                Show information of a given floating ip.
  help                           print detailed help for another command
  ipsec-site-connection-create   Create an IPsecSiteConnection.
  ipsec-site-connection-delete   Delete a given IPsecSiteConnection.
  ipsec-site-connection-list     List IPsecSiteConnections that belong to a given tenant.
  ipsec-site-connection-show     Show information of a given IPsecSiteConnection.
  ipsec-site-connection-update   Update a given IPsecSiteConnection.
  l3-agent-list-hosting-router   List L3 agents hosting a router.
  l3-agent-router-add            Add a router to a L3 agent.
  l3-agent-router-remove         Remove a router from a L3 agent.
  lb-agent-hosting-pool          Get loadbalancer agent hosting a pool.
  lb-healthmonitor-associate     Create a mapping between a health monitor and a pool.
  lb-healthmonitor-create        Create a healthmonitor.
  lb-healthmonitor-delete        Delete a given healthmonitor.
  lb-healthmonitor-disassociate  Remove a mapping from a health monitor to a pool.
  lb-healthmonitor-list          List healthmonitors that belong to a given tenant.
  lb-healthmonitor-show          Show information of a given healthmonitor.
  lb-healthmonitor-update        Update a given healthmonitor.
  lb-member-create               Create a member.
  lb-member-delete               Delete a given member.
  lb-member-list                 List members that belong to a given tenant.
  lb-member-show                 Show information of a given member.
  lb-member-update               Update a given member.
  lb-pool-create                 Create a pool.
  lb-pool-delete                 Delete a given pool.
  lb-pool-list                   List pools that belong to a given tenant.
  lb-pool-list-on-agent          List the pools on a loadbalancer agent.
  lb-pool-show                   Show information of a given pool.
  lb-pool-stats                  Retrieve stats for a given pool.
  lb-pool-update                 Update a given pool.
  lb-vip-create                  Create a vip.
  lb-vip-delete                  Delete a given vip.
  lb-vip-list                    List vips that belong to a given tenant.
  lb-vip-show                    Show information of a given vip.
  lb-vip-update                  Update a given vip.
  meter-label-create             Create a metering label for a given tenant.
  meter-label-delete             Delete a given metering label.
  meter-label-list               List metering labels that belong to a given tenant.
  meter-label-rule-create        Create a metering label rule for a given label.
  meter-label-rule-delete        Delete a given metering label.
  meter-label-rule-list          List metering labels that belong to a given label.
  meter-label-rule-show          Show information of a given metering label rule.
  meter-label-show               Show information of a given metering label.
  net-create                     Create a network for a given tenant.
  net-delete                     Delete a given network.
  net-external-list              List external networks that belong to a given tenant.
  net-gateway-connect            Add an internal network interface to a router.
  net-gateway-create             Create a network gateway.
  net-gateway-delete             Delete a given network gateway.
  net-gateway-disconnect         Remove a network from a network gateway.
  net-gateway-list               List network gateways for a given tenant.
  net-gateway-show               Show information of a given network gateway.
  net-gateway-update             Update the name for a network gateway.
  net-list                       List networks that belong to a given tenant.
  net-list-on-dhcp-agent         List the networks on a DHCP agent.
  net-show                       Show information of a given network.
  net-update                     Update network's information.
  port-create                    Create a port for a given tenant.
  port-delete                    Delete a given port.
  port-list                      List ports that belong to a given tenant.
  port-show                      Show information of a given port.
  port-update                    Update port's information.
  queue-create                   Create a queue.
  queue-delete                   Delete a given queue.
  queue-list                     List queues that belong to a given tenant.
  queue-show                     Show information of a given queue.
  quota-delete                   Delete defined quotas of a given tenant.
  quota-list                     List defined quotas of all tenants.
  quota-show                     Show quotas of a given tenant
  quota-update                   Define tenant's quotas not to use defaults.
  router-create                  Create a router for a given tenant.
  router-delete                  Delete a given router.
  router-gateway-clear           Remove an external network gateway from a router.
  router-gateway-set             Set the external network gateway for a router.
  router-interface-add           Add an internal network interface to a router.
  router-interface-delete        Remove an internal network interface from a router.
  router-list                    List routers that belong to a given tenant.
  router-list-on-l3-agent        List the routers on a L3 agent.
  router-port-list               List ports that belong to a given tenant, with specified router.
  router-show                    Show information of a given router.
  router-update                  Update router's information.
  security-group-create          Create a security group.
  security-group-delete          Delete a given security group.
  security-group-list            List security groups that belong to a given tenant.
  security-group-rule-create     Create a security group rule.
  security-group-rule-delete     Delete a given security group rule.
  security-group-rule-list       List security group rules that belong to a given tenant.
  security-group-rule-show       Show information of a given security group rule.
  security-group-show            Show information of a given security group.
  security-group-update          Update a given security group.
  service-provider-list          List service providers.
  subnet-create                  Create a subnet for a given tenant.
  subnet-delete                  Delete a given subnet.
  subnet-list                    List subnets that belong to a given tenant.
  subnet-show                    Show information of a given subnet.
  subnet-update                  Update subnet's information.
  vpn-ikepolicy-create           Create an IKEPolicy.
  vpn-ikepolicy-delete           Delete a given IKE Policy.
  vpn-ikepolicy-list             List IKEPolicies that belong to a tenant.
  vpn-ikepolicy-show             Show information of a given IKEPolicy.
  vpn-ikepolicy-update           Update a given IKE Policy.
  vpn-ipsecpolicy-create         Create an ipsecpolicy.
  vpn-ipsecpolicy-delete         Delete a given ipsecpolicy.
  vpn-ipsecpolicy-list           List ipsecpolicies that belongs to a given tenant connection.
  vpn-ipsecpolicy-show           Show information of a given ipsecpolicy.
  vpn-ipsecpolicy-update         Update a given ipsec policy.
  vpn-service-create             Create a VPNService.
  vpn-service-delete             Delete a given VPNService.
  vpn-service-list               List VPNService configurations that belong to a given tenant.
  vpn-service-show               Show information of a given VPNService.
  vpn-service-update             Update a given VPNService.
</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_agent-delete">
        <title>neutron agent-delete command</title>
        <screen><computeroutput>usage: neutron agent-delete [-h] [--request-format {json,xml}] AGENT

Delete a given agent.

positional arguments:
  AGENT                 ID of agent to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_agent-list">
        <title>neutron agent-list command</title>
        <screen><computeroutput>usage: neutron agent-list [-h] [-f {csv,table}] [-c COLUMN]
                          [--quote {all,minimal,none,nonnumeric}]
                          [--request-format {json,xml}] [-D] [-F FIELD]

List agents.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_agent-show">
        <title>neutron agent-show command</title>
        <screen><computeroutput>usage: neutron agent-show [-h] [-f {shell,table}] [-c COLUMN]
                          [--variable VARIABLE] [--prefix PREFIX]
                          [--request-format {json,xml}] [-D] [-F FIELD]
                          AGENT

Show information of a given agent.

positional arguments:
  AGENT                 ID of agent to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_agent-update">
        <title>neutron agent-update command</title>
        <screen><computeroutput>usage: neutron agent-update [-h] [--request-format {json,xml}] AGENT

Update a given agent.

positional arguments:
  AGENT                 ID or name of agent to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-credential-create">
        <title>neutron cisco-credential-create command</title>
        <screen><computeroutput>usage: neutron cisco-credential-create [-h] [-f {shell,table}] [-c COLUMN]
                                       [--variable VARIABLE] [--prefix PREFIX]
                                       [--request-format {json,xml}]
                                       [--tenant-id TENANT_ID]
                                       [--username USERNAME]
                                       [--password PASSWORD]
                                       credential_name credential_type

Creates a credential.

positional arguments:
  credential_name       Name/Ip address for Credential
  credential_type       Type of the Credential

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --username USERNAME   Username for the credential
  --password PASSWORD   Password for the credential

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-credential-delete">
        <title>neutron cisco-credential-delete command</title>
        <screen><computeroutput>usage: neutron cisco-credential-delete [-h] [--request-format {json,xml}]
                                       CREDENTIAL

Delete a given credential.

positional arguments:
  CREDENTIAL            ID of credential to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-credential-list">
        <title>neutron cisco-credential-list command</title>
        <screen><computeroutput>usage: neutron cisco-credential-list [-h] [-f {csv,table}] [-c COLUMN]
                                     [--quote {all,minimal,none,nonnumeric}]
                                     [--request-format {json,xml}] [-D]
                                     [-F FIELD]

List credentials that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-credential-show">
        <title>neutron cisco-credential-show command</title>
        <screen><computeroutput>usage: neutron cisco-credential-show [-h] [-f {shell,table}] [-c COLUMN]
                                     [--variable VARIABLE] [--prefix PREFIX]
                                     [--request-format {json,xml}] [-D]
                                     [-F FIELD]
                                     CREDENTIAL

Show information of a given credential.

positional arguments:
  CREDENTIAL            ID of credential to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-network-profile-create">
        <title>neutron cisco-network-profile-create command</title>
        <screen><computeroutput>usage: neutron cisco-network-profile-create [-h] [-f {shell,table}]
                                            [-c COLUMN] [--variable VARIABLE]
                                            [--prefix PREFIX]
                                            [--request-format {json,xml}]
                                            [--tenant-id TENANT_ID]
                                            [--sub_type SUB_TYPE]
                                            [--segment_range SEGMENT_RANGE]
                                            [--physical_network PHYSICAL_NETWORK]
                                            [--multicast_ip_range MULTICAST_IP_RANGE]
                                            [--add-tenant ADD_TENANT]
                                            name
                                            {vlan,overlay,multi-segment,trunk}

Creates a network profile.

positional arguments:
  name                  Name for Network Profile
  {vlan,overlay,multi-segment,trunk}
                        Segment type

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --sub_type SUB_TYPE   Sub-type for the segment. Available sub-types for
                        overlay segments: native, enhanced; For trunk
                        segments: vlan, overlay.
  --segment_range SEGMENT_RANGE
                        Range for the Segment
  --physical_network PHYSICAL_NETWORK
                        Name for the Physical Network
  --multicast_ip_range MULTICAST_IP_RANGE
                        Multicast IPv4 Range
  --add-tenant ADD_TENANT
                        Add tenant to the network profile

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-network-profile-delete">
        <title>neutron cisco-network-profile-delete command</title>
        <screen><computeroutput>usage: neutron cisco-network-profile-delete [-h] [--request-format {json,xml}]
                                            NETWORK_PROFILE

Delete a given network profile.

positional arguments:
  NETWORK_PROFILE       ID or name of network_profile to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-network-profile-list">
        <title>neutron cisco-network-profile-list command</title>
        <screen><computeroutput>usage: neutron cisco-network-profile-list [-h] [-f {csv,table}] [-c COLUMN]
                                          [--quote {all,minimal,none,nonnumeric}]
                                          [--request-format {json,xml}] [-D]
                                          [-F FIELD]

List network profiles that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-network-profile-show">
        <title>neutron cisco-network-profile-show command</title>
        <screen><computeroutput>usage: neutron cisco-network-profile-show [-h] [-f {shell,table}] [-c COLUMN]
                                          [--variable VARIABLE]
                                          [--prefix PREFIX]
                                          [--request-format {json,xml}] [-D]
                                          [-F FIELD]
                                          NETWORK_PROFILE

Show information of a given network profile.

positional arguments:
  NETWORK_PROFILE       ID or name of network_profile to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-network-profile-update">
        <title>neutron cisco-network-profile-update command</title>
        <screen><computeroutput>usage: neutron cisco-network-profile-update [-h] [--request-format {json,xml}]
                                            NETWORK_PROFILE

Update network profile's information.

positional arguments:
  NETWORK_PROFILE       ID or name of network_profile to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-policy-profile-list">
        <title>neutron cisco-policy-profile-list command</title>
        <screen><computeroutput>usage: neutron cisco-policy-profile-list [-h] [-f {csv,table}] [-c COLUMN]
                                         [--quote {all,minimal,none,nonnumeric}]
                                         [--request-format {json,xml}] [-D]
                                         [-F FIELD]

List policy profiles that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-policy-profile-show">
        <title>neutron cisco-policy-profile-show command</title>
        <screen><computeroutput>usage: neutron cisco-policy-profile-show [-h] [-f {shell,table}] [-c COLUMN]
                                         [--variable VARIABLE]
                                         [--prefix PREFIX]
                                         [--request-format {json,xml}] [-D]
                                         [-F FIELD]
                                         POLICY_PROFILE

Show information of a given policy profile.

positional arguments:
  POLICY_PROFILE        ID or name of policy_profile to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_cisco-policy-profile-update">
        <title>neutron cisco-policy-profile-update command</title>
        <screen><computeroutput>usage: neutron cisco-policy-profile-update [-h] [--request-format {json,xml}]
                                           POLICY_PROFILE

Update policy profile's information.

positional arguments:
  POLICY_PROFILE        ID or name of policy_profile to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_dhcp-agent-list-hosting-net">
        <title>neutron dhcp-agent-list-hosting-net command</title>
        <screen><computeroutput>usage: neutron dhcp-agent-list-hosting-net [-h] [-f {csv,table}] [-c COLUMN]
                                           [--quote {all,minimal,none,nonnumeric}]
                                           [--request-format {json,xml}] [-D]
                                           [-F FIELD]
                                           network

List DHCP agents hosting a network.

positional arguments:
  network               Network to query

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_dhcp-agent-network-add">
        <title>neutron dhcp-agent-network-add command</title>
        <screen><computeroutput>usage: neutron dhcp-agent-network-add [-h] [--request-format {json,xml}]
                                      dhcp_agent network

Add a network to a DHCP agent.

positional arguments:
  dhcp_agent            ID of the DHCP agent
  network               Network to add

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_dhcp-agent-network-remove">
        <title>neutron dhcp-agent-network-remove command</title>
        <screen><computeroutput>usage: neutron dhcp-agent-network-remove [-h] [--request-format {json,xml}]
                                         dhcp_agent network

Remove a network from a DHCP agent.

positional arguments:
  dhcp_agent            ID of the DHCP agent
  network               Network to remove

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_ext-list">
        <title>neutron ext-list command</title>
        <screen><computeroutput>usage: neutron ext-list [-h] [-f {csv,table}] [-c COLUMN]
                        [--quote {all,minimal,none,nonnumeric}]
                        [--request-format {json,xml}] [-D] [-F FIELD]

List all extensions.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_ext-show">
        <title>neutron ext-show command</title>
        <screen><computeroutput>usage: neutron ext-show [-h] [-f {shell,table}] [-c COLUMN]
                        [--variable VARIABLE] [--prefix PREFIX]
                        [--request-format {json,xml}] [-D] [-F FIELD]
                        EXT-ALIAS

Show information of a given resource.

positional arguments:
  EXT-ALIAS             The extension alias

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-create">
        <title>neutron firewall-create command</title>
        <screen><computeroutput>usage: neutron firewall-create [-h] [-f {shell,table}] [-c COLUMN]
                               [--variable VARIABLE] [--prefix PREFIX]
                               [--request-format {json,xml}]
                               [--tenant-id TENANT_ID] [--name NAME]
                               [--description DESCRIPTION] [--shared]
                               [--admin-state-down]
                               POLICY

Create a firewall.

positional arguments:
  POLICY                Firewall policy id

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --name NAME           Name for the firewall
  --description DESCRIPTION
                        Description for the firewall rule
  --shared              Set shared to True (default False)
  --admin-state-down    Set admin state up to false

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-delete">
        <title>neutron firewall-delete command</title>
        <screen><computeroutput>usage: neutron firewall-delete [-h] [--request-format {json,xml}] FIREWALL

Delete a given firewall.

positional arguments:
  FIREWALL              ID or name of firewall to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-list">
        <title>neutron firewall-list command</title>
        <screen><computeroutput>usage: neutron firewall-list [-h] [-f {csv,table}] [-c COLUMN]
                             [--quote {all,minimal,none,nonnumeric}]
                             [--request-format {json,xml}] [-D] [-F FIELD]
                             [-P SIZE] [--sort-key FIELD]
                             [--sort-dir {asc,desc}]

List firewalls that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-policy-create">
        <title>neutron firewall-policy-create command</title>
        <screen><computeroutput>usage: neutron firewall-policy-create [-h] [-f {shell,table}] [-c COLUMN]
                                      [--variable VARIABLE] [--prefix PREFIX]
                                      [--request-format {json,xml}]
                                      [--tenant-id TENANT_ID]
                                      [--description DESCRIPTION] [--shared]
                                      [--firewall-rules FIREWALL_RULES]
                                      [--audited]
                                      NAME

Create a firewall policy.

positional arguments:
  NAME                  Name for the firewall policy

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --description DESCRIPTION
                        Description for the firewall policy
  --shared              To create a shared policy
  --firewall-rules FIREWALL_RULES
                        Ordered list of whitespace-delimited firewall rule
                        names or IDs; e.g., --firewall-rules "rule1 rule2"
  --audited             To set audited to True

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-policy-delete">
        <title>neutron firewall-policy-delete command</title>
        <screen><computeroutput>usage: neutron firewall-policy-delete [-h] [--request-format {json,xml}]
                                      FIREWALL_POLICY

Delete a given firewall policy.

positional arguments:
  FIREWALL_POLICY       ID or name of firewall_policy to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-policy-insert-rule">
        <title>neutron firewall-policy-insert-rule command</title>
        <screen><computeroutput>usage: neutron firewall-policy-insert-rule [-h] [--request-format {json,xml}]
                                           [--insert-before FIREWALL_RULE]
                                           [--insert-after FIREWALL_RULE]
                                           FIREWALL_POLICY FIREWALL_RULE

Insert a rule into a given firewall policy.

positional arguments:
  FIREWALL_POLICY       ID or name of firewall_policy to update
  FIREWALL_RULE         New rule to insert

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --insert-before FIREWALL_RULE
                        Insert before this rule
  --insert-after FIREWALL_RULE
                        Insert after this rule

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-policy-list">
        <title>neutron firewall-policy-list command</title>
        <screen><computeroutput>usage: neutron firewall-policy-list [-h] [-f {csv,table}] [-c COLUMN]
                                    [--quote {all,minimal,none,nonnumeric}]
                                    [--request-format {json,xml}] [-D]
                                    [-F FIELD] [-P SIZE] [--sort-key FIELD]
                                    [--sort-dir {asc,desc}]

List firewall policies that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-policy-remove-rule">
        <title>neutron firewall-policy-remove-rule command</title>
        <screen><computeroutput>usage: neutron firewall-policy-remove-rule [-h] [--request-format {json,xml}]
                                           FIREWALL_POLICY FIREWALL_RULE

Remove a rule from a given firewall policy.

positional arguments:
  FIREWALL_POLICY       ID or name of firewall_policy to update
  FIREWALL_RULE         Firewall rule to remove from policy

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-policy-show">
        <title>neutron firewall-policy-show command</title>
        <screen><computeroutput>usage: neutron firewall-policy-show [-h] [-f {shell,table}] [-c COLUMN]
                                    [--variable VARIABLE] [--prefix PREFIX]
                                    [--request-format {json,xml}] [-D]
                                    [-F FIELD]
                                    FIREWALL_POLICY

Show information of a given firewall policy.

positional arguments:
  FIREWALL_POLICY       ID or name of firewall_policy to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-policy-update">
        <title>neutron firewall-policy-update command</title>
        <screen><computeroutput>usage: neutron firewall-policy-update [-h] [--request-format {json,xml}]
                                      FIREWALL_POLICY

Update a given firewall policy.

positional arguments:
  FIREWALL_POLICY       ID or name of firewall_policy to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-rule-create">
        <title>neutron firewall-rule-create command</title>
        <screen><computeroutput>usage: neutron firewall-rule-create [-h] [-f {shell,table}] [-c COLUMN]
                                    [--variable VARIABLE] [--prefix PREFIX]
                                    [--request-format {json,xml}]
                                    [--tenant-id TENANT_ID] [--name NAME]
                                    [--description DESCRIPTION] [--shared]
                                    [--source-ip-address SOURCE_IP_ADDRESS]
                                    [--destination-ip-address DESTINATION_IP_ADDRESS]
                                    [--source-port SOURCE_PORT]
                                    [--destination-port DESTINATION_PORT]
                                    [--disabled] --protocol {tcp,udp,icmp,any}
                                    --action {allow,deny}

Create a firewall rule.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --name NAME           Name for the firewall rule
  --description DESCRIPTION
                        Description for the firewall rule
  --shared              Set shared to True (default False)
  --source-ip-address SOURCE_IP_ADDRESS
                        Source ip address or subnet
  --destination-ip-address DESTINATION_IP_ADDRESS
                        Destination ip address or subnet
  --source-port SOURCE_PORT
                        Source port (integer in [1, 65535] or range in a:b)
  --destination-port DESTINATION_PORT
                        Destination port (integer in [1, 65535] or range in
                        a:b)
  --disabled            To disable this rule
  --protocol {tcp,udp,icmp,any}
                        Protocol for the firewall rule
  --action {allow,deny}
                        Action for the firewall rule

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-rule-delete">
        <title>neutron firewall-rule-delete command</title>
        <screen><computeroutput>usage: neutron firewall-rule-delete [-h] [--request-format {json,xml}]
                                    FIREWALL_RULE

Delete a given firewall rule.

positional arguments:
  FIREWALL_RULE         ID or name of firewall_rule to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-rule-list">
        <title>neutron firewall-rule-list command</title>
        <screen><computeroutput>usage: neutron firewall-rule-list [-h] [-f {csv,table}] [-c COLUMN]
                                  [--quote {all,minimal,none,nonnumeric}]
                                  [--request-format {json,xml}] [-D]
                                  [-F FIELD] [-P SIZE] [--sort-key FIELD]
                                  [--sort-dir {asc,desc}]

List firewall rules that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-rule-show">
        <title>neutron firewall-rule-show command</title>
        <screen><computeroutput>usage: neutron firewall-rule-show [-h] [-f {shell,table}] [-c COLUMN]
                                  [--variable VARIABLE] [--prefix PREFIX]
                                  [--request-format {json,xml}] [-D]
                                  [-F FIELD]
                                  FIREWALL_RULE

Show information of a given firewall rule.

positional arguments:
  FIREWALL_RULE         ID or name of firewall_rule to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-rule-update">
        <title>neutron firewall-rule-update command</title>
        <screen><computeroutput>usage: neutron firewall-rule-update [-h] [--request-format {json,xml}]
                                    [--protocol {tcp,udp,icmp,any}]
                                    FIREWALL_RULE

Update a given firewall rule.

positional arguments:
  FIREWALL_RULE         ID or name of firewall_rule to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --protocol {tcp,udp,icmp,any}
                        Protocol for the firewall rule

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-show">
        <title>neutron firewall-show command</title>
        <screen><computeroutput>usage: neutron firewall-show [-h] [-f {shell,table}] [-c COLUMN]
                             [--variable VARIABLE] [--prefix PREFIX]
                             [--request-format {json,xml}] [-D] [-F FIELD]
                             FIREWALL

Show information of a given firewall.

positional arguments:
  FIREWALL              ID or name of firewall to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_firewall-update">
        <title>neutron firewall-update command</title>
        <screen><computeroutput>usage: neutron firewall-update [-h] [--request-format {json,xml}] FIREWALL

Update a given firewall.

positional arguments:
  FIREWALL              ID or name of firewall to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_floatingip-associate">
        <title>neutron floatingip-associate command</title>
        <screen><computeroutput>usage: neutron floatingip-associate [-h] [--request-format {json,xml}]
                                    [--fixed-ip-address FIXED_IP_ADDRESS]
                                    FLOATINGIP_ID PORT

Create a mapping between a floating ip and a fixed ip.

positional arguments:
  FLOATINGIP_ID         ID of the floating IP to associate
  PORT                  ID or name of the port to be associated with the
                        floatingip

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --fixed-ip-address FIXED_IP_ADDRESS
                        IP address on the port (only required if port has
                        multipleIPs)

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_floatingip-create">
        <title>neutron floatingip-create command</title>
        <screen><computeroutput>usage: neutron floatingip-create [-h] [-f {shell,table}] [-c COLUMN]
                                 [--variable VARIABLE] [--prefix PREFIX]
                                 [--request-format {json,xml}]
                                 [--tenant-id TENANT_ID] [--port-id PORT_ID]
                                 [--fixed-ip-address FIXED_IP_ADDRESS]
                                 FLOATING_NETWORK

Create a floating ip for a given tenant.

positional arguments:
  FLOATING_NETWORK      Network name or id to allocate floating IP from

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --port-id PORT_ID     ID of the port to be associated with the floatingip
  --fixed-ip-address FIXED_IP_ADDRESS
                        IP address on the port (only required if port has
                        multipleIPs)

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_floatingip-delete">
        <title>neutron floatingip-delete command</title>
        <screen><computeroutput>usage: neutron floatingip-delete [-h] [--request-format {json,xml}] FLOATINGIP

Delete a given floating ip.

positional arguments:
  FLOATINGIP            ID of floatingip to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_floatingip-disassociate">
        <title>neutron floatingip-disassociate command</title>
        <screen><computeroutput>usage: neutron floatingip-disassociate [-h] [--request-format {json,xml}]
                                       FLOATINGIP_ID

Remove a mapping from a floating ip to a fixed ip.

positional arguments:
  FLOATINGIP_ID         ID of the floating IP to associate

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_floatingip-list">
        <title>neutron floatingip-list command</title>
        <screen><computeroutput>usage: neutron floatingip-list [-h] [-f {csv,table}] [-c COLUMN]
                               [--quote {all,minimal,none,nonnumeric}]
                               [--request-format {json,xml}] [-D] [-F FIELD]
                               [-P SIZE] [--sort-key FIELD]
                               [--sort-dir {asc,desc}]

List floating ips that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_floatingip-show">
        <title>neutron floatingip-show command</title>
        <screen><computeroutput>usage: neutron floatingip-show [-h] [-f {shell,table}] [-c COLUMN]
                               [--variable VARIABLE] [--prefix PREFIX]
                               [--request-format {json,xml}] [-D] [-F FIELD]
                               FLOATINGIP

Show information of a given floating ip.

positional arguments:
  FLOATINGIP            ID of floatingip to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_ipsec-site-connection-create">
        <title>neutron ipsec-site-connection-create command</title>
        <screen><computeroutput>usage: neutron ipsec-site-connection-create [-h] [-f {shell,table}]
                                            [-c COLUMN] [--variable VARIABLE]
                                            [--prefix PREFIX]
                                            [--request-format {json,xml}]
                                            [--tenant-id TENANT_ID]
                                            [--admin-state-down] [--name NAME]
                                            [--description DESCRIPTION]
                                            [--mtu MTU]
                                            [--initiator {bi-directional,response-only}]
                                            [--dpd action=ACTION,interval=INTERVAL,timeout=TIMEOUT]
                                            --vpnservice-id VPNSERVICE
                                            --ikepolicy-id IKEPOLICY
                                            --ipsecpolicy-id IPSECPOLICY
                                            --peer-address PEER_ADDRESS
                                            --peer-id PEER_ID --peer-cidr
                                            PEER_CIDRS --psk PSK

Create an IPsecSiteConnection.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --admin-state-down    Set admin state up to false
  --name NAME           Set friendly name for the connection
  --description DESCRIPTION
                        Set a description for the connection
  --mtu MTU             MTU size for the connection, default:1500
  --initiator {bi-directional,response-only}
                        Initiator state in lowercase, default:bi-directional
  --dpd action=ACTION,interval=INTERVAL,timeout=TIMEOUT
                        Ipsec connection Dead Peer Detection Attributes.
                        'action'-hold,clear,disabled,restart,restart-by-peer.
                        'interval' and 'timeout' are non negative integers.
                        'interval' should be less than 'timeout' value.
                        'action', default:hold 'interval', default:30,
                        'timeout', default:120.
  --vpnservice-id VPNSERVICE
                        VPNService instance id associated with this connection
  --ikepolicy-id IKEPOLICY
                        IKEPolicy id associated with this connection
  --ipsecpolicy-id IPSECPOLICY
                        IPsecPolicy id associated with this connection
  --peer-address PEER_ADDRESS
                        Peer gateway public IPv4/IPv6 address or FQDN.
  --peer-id PEER_ID     Peer router identity for authentication. Can be
                        IPv4/IPv6 address, e-mail address, key id, or FQDN.
  --peer-cidr PEER_CIDRS
                        Remote subnet(s) in CIDR format
  --psk PSK             Pre-Shared Key string

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_ipsec-site-connection-delete">
        <title>neutron ipsec-site-connection-delete command</title>
        <screen><computeroutput>usage: neutron ipsec-site-connection-delete [-h] [--request-format {json,xml}]
                                            IPSEC_SITE_CONNECTION

Delete a given IPsecSiteConnection.

positional arguments:
  IPSEC_SITE_CONNECTION
                        ID or name of ipsec_site_connection to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_ipsec-site-connection-list">
        <title>neutron ipsec-site-connection-list command</title>
        <screen><computeroutput>usage: neutron ipsec-site-connection-list [-h] [-f {csv,table}] [-c COLUMN]
                                          [--quote {all,minimal,none,nonnumeric}]
                                          [--request-format {json,xml}] [-D]
                                          [-F FIELD] [-P SIZE]
                                          [--sort-key FIELD]
                                          [--sort-dir {asc,desc}]

List IPsecSiteConnections that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_ipsec-site-connection-show">
        <title>neutron ipsec-site-connection-show command</title>
        <screen><computeroutput>usage: neutron ipsec-site-connection-show [-h] [-f {shell,table}] [-c COLUMN]
                                          [--variable VARIABLE]
                                          [--prefix PREFIX]
                                          [--request-format {json,xml}] [-D]
                                          [-F FIELD]
                                          IPSEC_SITE_CONNECTION

Show information of a given IPsecSiteConnection.

positional arguments:
  IPSEC_SITE_CONNECTION
                        ID or name of ipsec_site_connection to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_ipsec-site-connection-update">
        <title>neutron ipsec-site-connection-update command</title>
        <screen><computeroutput>usage: neutron ipsec-site-connection-update [-h] [--request-format {json,xml}]
                                            [--dpd action=ACTION,interval=INTERVAL,timeout=TIMEOUT]
                                            IPSEC_SITE_CONNECTION

Update a given IPsecSiteConnection.

positional arguments:
  IPSEC_SITE_CONNECTION
                        ID or name of ipsec_site_connection to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --dpd action=ACTION,interval=INTERVAL,timeout=TIMEOUT
                        Ipsec connection Dead Peer Detection Attributes.
                        'action'-hold,clear,disabled,restart,restart-by-peer.
                        'interval' and 'timeout' are non negative integers.
                        'interval' should be less than 'timeout' value.
                        'action', default:hold 'interval', default:30,
                        'timeout', default:120.

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_l3-agent-list-hosting-router">
        <title>neutron l3-agent-list-hosting-router command</title>
        <screen><computeroutput>usage: neutron l3-agent-list-hosting-router [-h] [-f {csv,table}] [-c COLUMN]
                                            [--quote {all,minimal,none,nonnumeric}]
                                            [--request-format {json,xml}] [-D]
                                            [-F FIELD]
                                            router

List L3 agents hosting a router.

positional arguments:
  router                Router to query

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_l3-agent-router-add">
        <title>neutron l3-agent-router-add command</title>
        <screen><computeroutput>usage: neutron l3-agent-router-add [-h] [--request-format {json,xml}]
                                   l3_agent router

Add a router to a L3 agent.

positional arguments:
  l3_agent              ID of the L3 agent
  router                Router to add

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_l3-agent-router-remove">
        <title>neutron l3-agent-router-remove command</title>
        <screen><computeroutput>usage: neutron l3-agent-router-remove [-h] [--request-format {json,xml}]
                                      l3_agent router

Remove a router from a L3 agent.

positional arguments:
  l3_agent              ID of the L3 agent
  router                Router to remove

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-agent-hosting-pool">
        <title>neutron lb-agent-hosting-pool command</title>
        <screen><computeroutput>usage: neutron lb-agent-hosting-pool [-h] [-f {csv,table}] [-c COLUMN]
                                     [--quote {all,minimal,none,nonnumeric}]
                                     [--request-format {json,xml}] [-D]
                                     [-F FIELD]
                                     pool

Get loadbalancer agent hosting a pool. Deriving from ListCommand though server
will return only one agent to keep common output format for all agent
schedulers

positional arguments:
  pool                  Pool to query

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-healthmonitor-associate">
        <title>neutron lb-healthmonitor-associate command</title>
        <screen><computeroutput>usage: neutron lb-healthmonitor-associate [-h] [--request-format {json,xml}]
                                          HEALTH_MONITOR_ID POOL

Create a mapping between a health monitor and a pool.

positional arguments:
  HEALTH_MONITOR_ID     Health monitor to associate
  POOL                  ID of the pool to be associated with the health
                        monitor

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-healthmonitor-create">
        <title>neutron lb-healthmonitor-create command</title>
        <screen><computeroutput>usage: neutron lb-healthmonitor-create [-h] [-f {shell,table}] [-c COLUMN]
                                       [--variable VARIABLE] [--prefix PREFIX]
                                       [--request-format {json,xml}]
                                       [--tenant-id TENANT_ID]
                                       [--admin-state-down]
                                       [--expected-codes EXPECTED_CODES]
                                       [--http-method HTTP_METHOD]
                                       [--url-path URL_PATH] --delay DELAY
                                       --max-retries MAX_RETRIES --timeout
                                       TIMEOUT --type {PING,TCP,HTTP,HTTPS}

Create a healthmonitor.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --admin-state-down    Set admin state up to false
  --expected-codes EXPECTED_CODES
                        The list of HTTP status codes expected in response
                        from the member to declare it healthy. This attribute
                        can contain one value, or a list of values separated
                        by comma, or a range of values (e.g. "200-299"). If
                        this attribute is not specified, it defaults to "200".
  --http-method HTTP_METHOD
                        The HTTP method used for requests by the monitor of
                        type HTTP.
  --url-path URL_PATH   The HTTP path used in the HTTP request used by the
                        monitor to test a member health. This must be a string
                        beginning with a / (forward slash)
  --delay DELAY         The time in seconds between sending probes to members.
  --max-retries MAX_RETRIES
                        Number of permissible connection failures before
                        changing the member status to INACTIVE. [1..10]
  --timeout TIMEOUT     Maximum number of seconds for a monitor to wait for a
                        connection to be established before it times out. The
                        value must be less than the delay value.
  --type {PING,TCP,HTTP,HTTPS}
                        One of predefined health monitor types

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-healthmonitor-delete">
        <title>neutron lb-healthmonitor-delete command</title>
        <screen><computeroutput>usage: neutron lb-healthmonitor-delete [-h] [--request-format {json,xml}]
                                       HEALTH_MONITOR

Delete a given healthmonitor.

positional arguments:
  HEALTH_MONITOR        ID or name of health_monitor to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-healthmonitor-disassociate">
        <title>neutron lb-healthmonitor-disassociate command</title>
        <screen><computeroutput>usage: neutron lb-healthmonitor-disassociate [-h]
                                             [--request-format {json,xml}]
                                             HEALTH_MONITOR_ID POOL

Remove a mapping from a health monitor to a pool.

positional arguments:
  HEALTH_MONITOR_ID     Health monitor to associate
  POOL                  ID of the pool to be associated with the health
                        monitor

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-healthmonitor-list">
        <title>neutron lb-healthmonitor-list command</title>
        <screen><computeroutput>usage: neutron lb-healthmonitor-list [-h] [-f {csv,table}] [-c COLUMN]
                                     [--quote {all,minimal,none,nonnumeric}]
                                     [--request-format {json,xml}] [-D]
                                     [-F FIELD] [-P SIZE] [--sort-key FIELD]
                                     [--sort-dir {asc,desc}]

List healthmonitors that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-healthmonitor-show">
        <title>neutron lb-healthmonitor-show command</title>
        <screen><computeroutput>usage: neutron lb-healthmonitor-show [-h] [-f {shell,table}] [-c COLUMN]
                                     [--variable VARIABLE] [--prefix PREFIX]
                                     [--request-format {json,xml}] [-D]
                                     [-F FIELD]
                                     HEALTH_MONITOR

Show information of a given healthmonitor.

positional arguments:
  HEALTH_MONITOR        ID or name of health_monitor to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-healthmonitor-update">
        <title>neutron lb-healthmonitor-update command</title>
        <screen><computeroutput>usage: neutron lb-healthmonitor-update [-h] [--request-format {json,xml}]
                                       HEALTH_MONITOR

Update a given healthmonitor.

positional arguments:
  HEALTH_MONITOR        ID or name of health_monitor to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-member-create">
        <title>neutron lb-member-create command</title>
        <screen><computeroutput>usage: neutron lb-member-create [-h] [-f {shell,table}] [-c COLUMN]
                                [--variable VARIABLE] [--prefix PREFIX]
                                [--request-format {json,xml}]
                                [--tenant-id TENANT_ID] [--admin-state-down]
                                [--weight WEIGHT] --address ADDRESS
                                --protocol-port PROTOCOL_PORT
                                POOL

Create a member.

positional arguments:
  POOL                  Pool id or name this vip belongs to

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --admin-state-down    Set admin state up to false
  --weight WEIGHT       Weight of pool member in the pool (default:1,
                        [0..256])
  --address ADDRESS     IP address of the pool member on the pool network.
  --protocol-port PROTOCOL_PORT
                        Port on which the pool member listens for requests or
                        connections.

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-member-delete">
        <title>neutron lb-member-delete command</title>
        <screen><computeroutput>usage: neutron lb-member-delete [-h] [--request-format {json,xml}] MEMBER

Delete a given member.

positional arguments:
  MEMBER                ID or name of member to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-member-list">
        <title>neutron lb-member-list command</title>
        <screen><computeroutput>usage: neutron lb-member-list [-h] [-f {csv,table}] [-c COLUMN]
                              [--quote {all,minimal,none,nonnumeric}]
                              [--request-format {json,xml}] [-D] [-F FIELD]
                              [-P SIZE] [--sort-key FIELD]
                              [--sort-dir {asc,desc}]

List members that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-member-show">
        <title>neutron lb-member-show command</title>
        <screen><computeroutput>usage: neutron lb-member-show [-h] [-f {shell,table}] [-c COLUMN]
                              [--variable VARIABLE] [--prefix PREFIX]
                              [--request-format {json,xml}] [-D] [-F FIELD]
                              MEMBER

Show information of a given member.

positional arguments:
  MEMBER                ID or name of member to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-member-update">
        <title>neutron lb-member-update command</title>
        <screen><computeroutput>usage: neutron lb-member-update [-h] [--request-format {json,xml}] MEMBER

Update a given member.

positional arguments:
  MEMBER                ID or name of member to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-pool-create">
        <title>neutron lb-pool-create command</title>
        <screen><computeroutput>usage: neutron lb-pool-create [-h] [-f {shell,table}] [-c COLUMN]
                              [--variable VARIABLE] [--prefix PREFIX]
                              [--request-format {json,xml}]
                              [--tenant-id TENANT_ID] [--admin-state-down]
                              [--description DESCRIPTION] --lb-method
                              {ROUND_ROBIN,LEAST_CONNECTIONS,SOURCE_IP} --name
                              NAME --protocol {HTTP,HTTPS,TCP} --subnet-id
                              SUBNET [--provider PROVIDER]

Create a pool.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --admin-state-down    Set admin state up to false
  --description DESCRIPTION
                        Description of the pool
  --lb-method {ROUND_ROBIN,LEAST_CONNECTIONS,SOURCE_IP}
                        The algorithm used to distribute load between the
                        members of the pool
  --name NAME           The name of the pool
  --protocol {HTTP,HTTPS,TCP}
                        Protocol for balancing
  --subnet-id SUBNET    The subnet on which the members of the pool will be
                        located
  --provider PROVIDER   Provider name of loadbalancer service

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-pool-delete">
        <title>neutron lb-pool-delete command</title>
        <screen><computeroutput>usage: neutron lb-pool-delete [-h] [--request-format {json,xml}] POOL

Delete a given pool.

positional arguments:
  POOL                  ID or name of pool to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-pool-list">
        <title>neutron lb-pool-list command</title>
        <screen><computeroutput>usage: neutron lb-pool-list [-h] [-f {csv,table}] [-c COLUMN]
                            [--quote {all,minimal,none,nonnumeric}]
                            [--request-format {json,xml}] [-D] [-F FIELD]
                            [-P SIZE] [--sort-key FIELD]
                            [--sort-dir {asc,desc}]

List pools that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-pool-list-on-agent">
        <title>neutron lb-pool-list-on-agent command</title>
        <screen><computeroutput>usage: neutron lb-pool-list-on-agent [-h] [-f {csv,table}] [-c COLUMN]
                                     [--quote {all,minimal,none,nonnumeric}]
                                     [--request-format {json,xml}] [-D]
                                     [-F FIELD]
                                     lbaas_agent

List the pools on a loadbalancer agent.

positional arguments:
  lbaas_agent           ID of the loadbalancer agent to query

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-pool-show">
        <title>neutron lb-pool-show command</title>
        <screen><computeroutput>usage: neutron lb-pool-show [-h] [-f {shell,table}] [-c COLUMN]
                            [--variable VARIABLE] [--prefix PREFIX]
                            [--request-format {json,xml}] [-D] [-F FIELD]
                            POOL

Show information of a given pool.

positional arguments:
  POOL                  ID or name of pool to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-pool-stats">
        <title>neutron lb-pool-stats command</title>
        <screen><computeroutput>usage: neutron lb-pool-stats [-h] [-f {shell,table}] [-c COLUMN]
                             [--variable VARIABLE] [--prefix PREFIX]
                             [--request-format {json,xml}] [-D] [-F FIELD]
                             POOL

Retrieve stats for a given pool.

positional arguments:
  POOL                  ID or name of pool to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-pool-update">
        <title>neutron lb-pool-update command</title>
        <screen><computeroutput>usage: neutron lb-pool-update [-h] [--request-format {json,xml}] POOL

Update a given pool.

positional arguments:
  POOL                  ID or name of pool to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-vip-create">
        <title>neutron lb-vip-create command</title>
        <screen><computeroutput>usage: neutron lb-vip-create [-h] [-f {shell,table}] [-c COLUMN]
                             [--variable VARIABLE] [--prefix PREFIX]
                             [--request-format {json,xml}]
                             [--tenant-id TENANT_ID] [--address ADDRESS]
                             [--admin-state-down]
                             [--connection-limit CONNECTION_LIMIT]
                             [--description DESCRIPTION] --name NAME
                             --protocol-port PROTOCOL_PORT --protocol
                             {TCP,HTTP,HTTPS} --subnet-id SUBNET
                             POOL

Create a vip.

positional arguments:
  POOL                  Pool id or name this vip belongs to

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --address ADDRESS     IP address of the vip
  --admin-state-down    Set admin state up to false
  --connection-limit CONNECTION_LIMIT
                        The maximum number of connections per second allowed
                        for the vip. Positive integer or -1 for unlimited
                        (default)
  --description DESCRIPTION
                        Description of the vip
  --name NAME           Name of the vip
  --protocol-port PROTOCOL_PORT
                        TCP port on which to listen for client traffic that is
                        associated with the vip address
  --protocol {TCP,HTTP,HTTPS}
                        Protocol for balancing
  --subnet-id SUBNET    The subnet on which to allocate the vip address

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-vip-delete">
        <title>neutron lb-vip-delete command</title>
        <screen><computeroutput>usage: neutron lb-vip-delete [-h] [--request-format {json,xml}] VIP

Delete a given vip.

positional arguments:
  VIP                   ID or name of vip to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-vip-list">
        <title>neutron lb-vip-list command</title>
        <screen><computeroutput>usage: neutron lb-vip-list [-h] [-f {csv,table}] [-c COLUMN]
                           [--quote {all,minimal,none,nonnumeric}]
                           [--request-format {json,xml}] [-D] [-F FIELD]
                           [-P SIZE] [--sort-key FIELD]
                           [--sort-dir {asc,desc}]

List vips that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-vip-show">
        <title>neutron lb-vip-show command</title>
        <screen><computeroutput>usage: neutron lb-vip-show [-h] [-f {shell,table}] [-c COLUMN]
                           [--variable VARIABLE] [--prefix PREFIX]
                           [--request-format {json,xml}] [-D] [-F FIELD]
                           VIP

Show information of a given vip.

positional arguments:
  VIP                   ID or name of vip to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_lb-vip-update">
        <title>neutron lb-vip-update command</title>
        <screen><computeroutput>usage: neutron lb-vip-update [-h] [--request-format {json,xml}] VIP

Update a given vip.

positional arguments:
  VIP                   ID or name of vip to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_meter-label-create">
        <title>neutron meter-label-create command</title>
        <screen><computeroutput>usage: neutron meter-label-create [-h] [-f {shell,table}] [-c COLUMN]
                                  [--variable VARIABLE] [--prefix PREFIX]
                                  [--request-format {json,xml}]
                                  [--tenant-id TENANT_ID]
                                  [--description DESCRIPTION]
                                  NAME

Create a metering label for a given tenant.

positional arguments:
  NAME                  Name of metering label to create

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --description DESCRIPTION
                        Description of metering label to create

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_meter-label-delete">
        <title>neutron meter-label-delete command</title>
        <screen><computeroutput>usage: neutron meter-label-delete [-h] [--request-format {json,xml}]
                                  METERING_LABEL

Delete a given metering label.

positional arguments:
  METERING_LABEL        ID or name of metering_label to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_meter-label-list">
        <title>neutron meter-label-list command</title>
        <screen><computeroutput>usage: neutron meter-label-list [-h] [-f {csv,table}] [-c COLUMN]
                                [--quote {all,minimal,none,nonnumeric}]
                                [--request-format {json,xml}] [-D] [-F FIELD]
                                [-P SIZE] [--sort-key FIELD]
                                [--sort-dir {asc,desc}]

List metering labels that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_meter-label-rule-create">
        <title>neutron meter-label-rule-create command</title>
        <screen><computeroutput>usage: neutron meter-label-rule-create [-h] [-f {shell,table}] [-c COLUMN]
                                       [--variable VARIABLE] [--prefix PREFIX]
                                       [--request-format {json,xml}]
                                       [--tenant-id TENANT_ID]
                                       [--direction {ingress,egress}]
                                       [--excluded]
                                       LABEL REMOTE_IP_PREFIX

Create a metering label rule for a given label.

positional arguments:
  LABEL                 Id or Name of the label
  REMOTE_IP_PREFIX      CIDR to match on

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --direction {ingress,egress}
                        Direction of traffic, default:ingress
  --excluded            Exclude this cidr from the label, default:not excluded

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_meter-label-rule-delete">
        <title>neutron meter-label-rule-delete command</title>
        <screen><computeroutput>usage: neutron meter-label-rule-delete [-h] [--request-format {json,xml}]
                                       METERING_LABEL_RULE

Delete a given metering label.

positional arguments:
  METERING_LABEL_RULE   ID or name of metering_label_rule to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_meter-label-rule-list">
        <title>neutron meter-label-rule-list command</title>
        <screen><computeroutput>usage: neutron meter-label-rule-list [-h] [-f {csv,table}] [-c COLUMN]
                                     [--quote {all,minimal,none,nonnumeric}]
                                     [--request-format {json,xml}] [-D]
                                     [-F FIELD] [-P SIZE] [--sort-key FIELD]
                                     [--sort-dir {asc,desc}]

List metering labels that belong to a given label.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_meter-label-rule-show">
        <title>neutron meter-label-rule-show command</title>
        <screen><computeroutput>usage: neutron meter-label-rule-show [-h] [-f {shell,table}] [-c COLUMN]
                                     [--variable VARIABLE] [--prefix PREFIX]
                                     [--request-format {json,xml}] [-D]
                                     [-F FIELD]
                                     METERING_LABEL_RULE

Show information of a given metering label rule.

positional arguments:
  METERING_LABEL_RULE   ID or name of metering_label_rule to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_meter-label-show">
        <title>neutron meter-label-show command</title>
        <screen><computeroutput>usage: neutron meter-label-show [-h] [-f {shell,table}] [-c COLUMN]
                                [--variable VARIABLE] [--prefix PREFIX]
                                [--request-format {json,xml}] [-D] [-F FIELD]
                                METERING_LABEL

Show information of a given metering label.

positional arguments:
  METERING_LABEL        ID or name of metering_label to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-create">
        <title>neutron net-create command</title>
        <screen><computeroutput>usage: neutron net-create [-h] [-f {shell,table}] [-c COLUMN]
                          [--variable VARIABLE] [--prefix PREFIX]
                          [--request-format {json,xml}]
                          [--tenant-id TENANT_ID] [--admin-state-down]
                          [--shared]
                          NAME

Create a network for a given tenant.

positional arguments:
  NAME                  Name of network to create

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --admin-state-down    Set Admin State Up to false
  --shared              Set the network as shared

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-delete">
        <title>neutron net-delete command</title>
        <screen><computeroutput>usage: neutron net-delete [-h] [--request-format {json,xml}] NETWORK

Delete a given network.

positional arguments:
  NETWORK               ID or name of network to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-external-list">
        <title>neutron net-external-list command</title>
        <screen><computeroutput>usage: neutron net-external-list [-h] [-f {csv,table}] [-c COLUMN]
                                 [--quote {all,minimal,none,nonnumeric}]
                                 [--request-format {json,xml}] [-D] [-F FIELD]
                                 [-P SIZE] [--sort-key FIELD]
                                 [--sort-dir {asc,desc}]

List external networks that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-gateway-connect">
        <title>neutron net-gateway-connect command</title>
        <screen><computeroutput>usage: neutron net-gateway-connect [-h] [--request-format {json,xml}]
                                   [--segmentation-type SEGMENTATION_TYPE]
                                   [--segmentation-id SEGMENTATION_ID]
                                   NET-GATEWAY-ID NETWORK-ID

Add an internal network interface to a router.

positional arguments:
  NET-GATEWAY-ID        ID of the network gateway
  NETWORK-ID            ID of the internal network to connect on the gateway

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --segmentation-type SEGMENTATION_TYPE
                        L2 segmentation strategy on the external side of the
                        gateway (e.g.: VLAN, FLAT)
  --segmentation-id SEGMENTATION_ID
                        Identifier for the L2 segment on the external side of
                        the gateway

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-gateway-create">
        <title>neutron net-gateway-create command</title>
        <screen><computeroutput>usage: neutron net-gateway-create [-h] [-f {shell,table}] [-c COLUMN]
                                  [--variable VARIABLE] [--prefix PREFIX]
                                  [--request-format {json,xml}]
                                  [--tenant-id TENANT_ID] [--device DEVICE]
                                  NAME

Create a network gateway.

positional arguments:
  NAME                  Name of network gateway to create

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --device DEVICE       Device info for this gateway device_id=&lt;device
                        identifier>,interface_name=&lt;name_or_identifier> It can
                        be repeated for multiple devices for HA gateways

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-gateway-delete">
        <title>neutron net-gateway-delete command</title>
        <screen><computeroutput>usage: neutron net-gateway-delete [-h] [--request-format {json,xml}]
                                  NETWORK_GATEWAY

Delete a given network gateway.

positional arguments:
  NETWORK_GATEWAY       ID or name of network_gateway to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-gateway-disconnect">
        <title>neutron net-gateway-disconnect command</title>
        <screen><computeroutput>usage: neutron net-gateway-disconnect [-h] [--request-format {json,xml}]
                                      [--segmentation-type SEGMENTATION_TYPE]
                                      [--segmentation-id SEGMENTATION_ID]
                                      NET-GATEWAY-ID NETWORK-ID

Remove a network from a network gateway.

positional arguments:
  NET-GATEWAY-ID        ID of the network gateway
  NETWORK-ID            ID of the internal network to connect on the gateway

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --segmentation-type SEGMENTATION_TYPE
                        L2 segmentation strategy on the external side of the
                        gateway (e.g.: VLAN, FLAT)
  --segmentation-id SEGMENTATION_ID
                        Identifier for the L2 segment on the external side of
                        the gateway

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-gateway-list">
        <title>neutron net-gateway-list command</title>
        <screen><computeroutput>usage: neutron net-gateway-list [-h] [-f {csv,table}] [-c COLUMN]
                                [--quote {all,minimal,none,nonnumeric}]
                                [--request-format {json,xml}] [-D] [-F FIELD]

List network gateways for a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-gateway-show">
        <title>neutron net-gateway-show command</title>
        <screen><computeroutput>usage: neutron net-gateway-show [-h] [-f {shell,table}] [-c COLUMN]
                                [--variable VARIABLE] [--prefix PREFIX]
                                [--request-format {json,xml}] [-D] [-F FIELD]
                                NETWORK_GATEWAY

Show information of a given network gateway.

positional arguments:
  NETWORK_GATEWAY       ID or name of network_gateway to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-gateway-update">
        <title>neutron net-gateway-update command</title>
        <screen><computeroutput>usage: neutron net-gateway-update [-h] [--request-format {json,xml}]
                                  NETWORK_GATEWAY

Update the name for a network gateway.

positional arguments:
  NETWORK_GATEWAY       ID or name of network_gateway to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-list">
        <title>neutron net-list command</title>
        <screen><computeroutput>usage: neutron net-list [-h] [-f {csv,table}] [-c COLUMN]
                        [--quote {all,minimal,none,nonnumeric}]
                        [--request-format {json,xml}] [-D] [-F FIELD]
                        [-P SIZE] [--sort-key FIELD] [--sort-dir {asc,desc}]

List networks that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-list-on-dhcp-agent">
        <title>neutron net-list-on-dhcp-agent command</title>
        <screen><computeroutput>usage: neutron net-list-on-dhcp-agent [-h] [-f {csv,table}] [-c COLUMN]
                                      [--quote {all,minimal,none,nonnumeric}]
                                      [--request-format {json,xml}] [-D]
                                      [-F FIELD] [-P SIZE] [--sort-key FIELD]
                                      [--sort-dir {asc,desc}]
                                      dhcp_agent

List the networks on a DHCP agent.

positional arguments:
  dhcp_agent            ID of the DHCP agent

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-show">
        <title>neutron net-show command</title>
        <screen><computeroutput>usage: neutron net-show [-h] [-f {shell,table}] [-c COLUMN]
                        [--variable VARIABLE] [--prefix PREFIX]
                        [--request-format {json,xml}] [-D] [-F FIELD]
                        NETWORK

Show information of a given network.

positional arguments:
  NETWORK               ID or name of network to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_net-update">
        <title>neutron net-update command</title>
        <screen><computeroutput>usage: neutron net-update [-h] [--request-format {json,xml}] NETWORK

Update network's information.

positional arguments:
  NETWORK               ID or name of network to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_port-create">
        <title>neutron port-create command</title>
        <screen><computeroutput>usage: neutron port-create [-h] [-f {shell,table}] [-c COLUMN]
                           [--variable VARIABLE] [--prefix PREFIX]
                           [--request-format {json,xml}]
                           [--tenant-id TENANT_ID] [--name NAME]
                           [--admin-state-down] [--mac-address MAC_ADDRESS]
                           [--device-id DEVICE_ID]
                           [--fixed-ip ip_address=IP_ADDR]
                           [--security-group SECURITY_GROUP | --no-security-groups]
                           [--extra-dhcp-opt EXTRA_DHCP_OPTS]
                           NETWORK

Create a port for a given tenant.

positional arguments:
  NETWORK               Network id or name this port belongs to

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --name NAME           Name of this port
  --admin-state-down    Set admin state up to false
  --mac-address MAC_ADDRESS
                        MAC address of this port
  --device-id DEVICE_ID
                        Device id of this port
  --fixed-ip ip_address=IP_ADDR
                        Desired IP for this port:
                        subnet_id=&lt;name_or_id>,ip_address=&lt;ip>, (This option
                        can be repeated.)
  --security-group SECURITY_GROUP
                        Security group associated with the port (This option
                        can be repeated)
  --no-security-groups  Associate no security groups with the port
  --extra-dhcp-opt EXTRA_DHCP_OPTS
                        Extra dhcp options to be assigned to this port:
                        opt_name=&lt;dhcp_option_name>,opt_value=&lt;value>, (This
                        option can be repeated.)

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_port-delete">
        <title>neutron port-delete command</title>
        <screen><computeroutput>usage: neutron port-delete [-h] [--request-format {json,xml}] PORT

Delete a given port.

positional arguments:
  PORT                  ID or name of port to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_port-list">
        <title>neutron port-list command</title>
        <screen><computeroutput>usage: neutron port-list [-h] [-f {csv,table}] [-c COLUMN]
                         [--quote {all,minimal,none,nonnumeric}]
                         [--request-format {json,xml}] [-D] [-F FIELD]
                         [-P SIZE] [--sort-key FIELD] [--sort-dir {asc,desc}]

List ports that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_port-show">
        <title>neutron port-show command</title>
        <screen><computeroutput>usage: neutron port-show [-h] [-f {shell,table}] [-c COLUMN]
                         [--variable VARIABLE] [--prefix PREFIX]
                         [--request-format {json,xml}] [-D] [-F FIELD]
                         PORT

Show information of a given port.

positional arguments:
  PORT                  ID or name of port to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_port-update">
        <title>neutron port-update command</title>
        <screen><computeroutput>usage: neutron port-update [-h] [--request-format {json,xml}]
                           [--security-group SECURITY_GROUP | --no-security-groups]
                           [--extra-dhcp-opt EXTRA_DHCP_OPTS]
                           PORT

Update port's information.

positional arguments:
  PORT                  ID or name of port to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --security-group SECURITY_GROUP
                        Security group associated with the port (This option
                        can be repeated)
  --no-security-groups  Associate no security groups with the port
  --extra-dhcp-opt EXTRA_DHCP_OPTS
                        Extra dhcp options to be assigned to this port:
                        opt_name=&lt;dhcp_option_name>,opt_value=&lt;value>, (This
                        option can be repeated.)

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_queue-create">
        <title>neutron queue-create command</title>
        <screen><computeroutput>usage: neutron queue-create [-h] [-f {shell,table}] [-c COLUMN]
                            [--variable VARIABLE] [--prefix PREFIX]
                            [--request-format {json,xml}]
                            [--tenant-id TENANT_ID] [--min MIN] [--max MAX]
                            [--qos-marking QOS_MARKING] [--default DEFAULT]
                            [--dscp DSCP]
                            NAME

Create a queue.

positional arguments:
  NAME                  Name of queue

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --min MIN             min-rate
  --max MAX             max-rate
  --qos-marking QOS_MARKING
                        QOS marking untrusted/trusted
  --default DEFAULT     If true all ports created with be the size of this
                        queue if queue is not specified
  --dscp DSCP           Differentiated Services Code Point

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_queue-delete">
        <title>neutron queue-delete command</title>
        <screen><computeroutput>usage: neutron queue-delete [-h] [--request-format {json,xml}] QOS_QUEUE

Delete a given queue.

positional arguments:
  QOS_QUEUE             ID or name of qos_queue to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_queue-list">
        <title>neutron queue-list command</title>
        <screen><computeroutput>usage: neutron queue-list [-h] [-f {csv,table}] [-c COLUMN]
                          [--quote {all,minimal,none,nonnumeric}]
                          [--request-format {json,xml}] [-D] [-F FIELD]

List queues that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_queue-show">
        <title>neutron queue-show command</title>
        <screen><computeroutput>usage: neutron queue-show [-h] [-f {shell,table}] [-c COLUMN]
                          [--variable VARIABLE] [--prefix PREFIX]
                          [--request-format {json,xml}] [-D] [-F FIELD]
                          QOS_QUEUE

Show information of a given queue.

positional arguments:
  QOS_QUEUE             ID or name of qos_queue to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_quota-delete">
        <title>neutron quota-delete command</title>
        <screen><computeroutput>usage: neutron quota-delete [-h] [--request-format {json,xml}]
                            [--tenant-id tenant-id]

Delete defined quotas of a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id tenant-id
                        The owner tenant ID

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_quota-list">
        <title>neutron quota-list command</title>
        <screen><computeroutput>usage: neutron quota-list [-h] [-f {csv,table}] [-c COLUMN]
                          [--quote {all,minimal,none,nonnumeric}]
                          [--request-format {json,xml}]

List defined quotas of all tenants.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_quota-show">
        <title>neutron quota-show command</title>
        <screen><computeroutput>usage: neutron quota-show [-h] [-f {shell,table}] [-c COLUMN]
                          [--variable VARIABLE] [--prefix PREFIX]
                          [--request-format {json,xml}]
                          [--tenant-id tenant-id]

Show quotas of a given tenant

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id tenant-id
                        The owner tenant ID

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_quota-update">
        <title>neutron quota-update command</title>
        <screen><computeroutput>usage: neutron quota-update [-h] [-f {shell,table}] [-c COLUMN]
                            [--variable VARIABLE] [--prefix PREFIX]
                            [--request-format {json,xml}]
                            [--tenant-id tenant-id] [--network networks]
                            [--subnet subnets] [--port ports]
                            [--router routers] [--floatingip floatingips]
                            [--security-group security_groups]
                            [--security-group-rule security_group_rules]

Define tenant's quotas not to use defaults.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id tenant-id
                        The owner tenant ID
  --network networks    The limit of networks
  --subnet subnets      The limit of subnets
  --port ports          The limit of ports
  --router routers      The limit of routers
  --floatingip floatingips
                        The limit of floating IPs
  --security-group security_groups
                        The limit of security groups
  --security-group-rule security_group_rules
                        The limit of security groups rules

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-create">
        <title>neutron router-create command</title>
        <screen><computeroutput>usage: neutron router-create [-h] [-f {shell,table}] [-c COLUMN]
                             [--variable VARIABLE] [--prefix PREFIX]
                             [--request-format {json,xml}]
                             [--tenant-id TENANT_ID] [--admin-state-down]
                             NAME

Create a router for a given tenant.

positional arguments:
  NAME                  Name of router to create
  distributed           Create a distributed router (Nicira plugin only)

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --admin-state-down    Set Admin State Up to false

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-delete">
        <title>neutron router-delete command</title>
        <screen><computeroutput>usage: neutron router-delete [-h] [--request-format {json,xml}] ROUTER

Delete a given router.

positional arguments:
  ROUTER                ID or name of router to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-gateway-clear">
        <title>neutron router-gateway-clear command</title>
        <screen><computeroutput>usage: neutron router-gateway-clear [-h] [--request-format {json,xml}]
                                    router-id

Remove an external network gateway from a router.

positional arguments:
  router-id             ID of the router

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-gateway-set">
        <title>neutron router-gateway-set command</title>
        <screen><computeroutput>usage: neutron router-gateway-set [-h] [--request-format {json,xml}]
                                  [--disable-snat]
                                  router-id external-network-id

Set the external network gateway for a router.

positional arguments:
  router-id             ID of the router
  external-network-id   ID of the external network for the gateway

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --disable-snat        Disable Source NAT on the router gateway

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-interface-add">
        <title>neutron router-interface-add command</title>
        <screen><computeroutput>usage: neutron router-interface-add [-h] [--request-format {json,xml}]
                                    router-id INTERFACE

Add an internal network interface to a router.

positional arguments:
  router-id             ID of the router
  INTERFACE             The format is "SUBNET|subnet=SUBNET|port=PORT". Either
                        a subnet or port must be specified. Both ID and name
                        are accepted as SUBNET or PORT. Note that "subnet="
                        can be omitted when specifying subnet.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-interface-delete">
        <title>neutron router-interface-delete command</title>
        <screen><computeroutput>usage: neutron router-interface-delete [-h] [--request-format {json,xml}]
                                       router-id INTERFACE

Remove an internal network interface from a router.

positional arguments:
  router-id             ID of the router
  INTERFACE             The format is "SUBNET|subnet=SUBNET|port=PORT". Either
                        a subnet or port must be specified. Both ID and name
                        are accepted as SUBNET or PORT. Note that "subnet="
                        can be omitted when specifying subnet.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-list">
        <title>neutron router-list command</title>
        <screen><computeroutput>usage: neutron router-list [-h] [-f {csv,table}] [-c COLUMN]
                           [--quote {all,minimal,none,nonnumeric}]
                           [--request-format {json,xml}] [-D] [-F FIELD]
                           [-P SIZE] [--sort-key FIELD]
                           [--sort-dir {asc,desc}]

List routers that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-list-on-l3-agent">
        <title>neutron router-list-on-l3-agent command</title>
        <screen><computeroutput>usage: neutron router-list-on-l3-agent [-h] [-f {csv,table}] [-c COLUMN]
                                       [--quote {all,minimal,none,nonnumeric}]
                                       [--request-format {json,xml}] [-D]
                                       [-F FIELD]
                                       l3_agent

List the routers on a L3 agent.

positional arguments:
  l3_agent              ID of the L3 agent to query

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-port-list">
        <title>neutron router-port-list command</title>
        <screen><computeroutput>usage: neutron router-port-list [-h] [-f {csv,table}] [-c COLUMN]
                                [--quote {all,minimal,none,nonnumeric}]
                                [--request-format {json,xml}] [-D] [-F FIELD]
                                [-P SIZE] [--sort-key FIELD]
                                [--sort-dir {asc,desc}]
                                router

List ports that belong to a given tenant, with specified router.

positional arguments:
  router                ID or name of router to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-show">
        <title>neutron router-show command</title>
        <screen><computeroutput>usage: neutron router-show [-h] [-f {shell,table}] [-c COLUMN]
                           [--variable VARIABLE] [--prefix PREFIX]
                           [--request-format {json,xml}] [-D] [-F FIELD]
                           ROUTER

Show information of a given router.

positional arguments:
  ROUTER                ID or name of router to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_router-update">
        <title>neutron router-update command</title>
        <screen><computeroutput>usage: neutron router-update [-h] [--request-format {json,xml}] ROUTER

Update router's information.

positional arguments:
  ROUTER                ID or name of router to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_security-group-create">
        <title>neutron security-group-create command</title>
        <screen><computeroutput>usage: neutron security-group-create [-h] [-f {shell,table}] [-c COLUMN]
                                     [--variable VARIABLE] [--prefix PREFIX]
                                     [--request-format {json,xml}]
                                     [--tenant-id TENANT_ID]
                                     [--description DESCRIPTION]
                                     NAME

Create a security group.

positional arguments:
  NAME                  Name of security group

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --description DESCRIPTION
                        Description of security group

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_security-group-delete">
        <title>neutron security-group-delete command</title>
        <screen><computeroutput>usage: neutron security-group-delete [-h] [--request-format {json,xml}]
                                     SECURITY_GROUP

Delete a given security group.

positional arguments:
  SECURITY_GROUP        ID or name of security_group to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_security-group-list">
        <title>neutron security-group-list command</title>
        <screen><computeroutput>usage: neutron security-group-list [-h] [-f {csv,table}] [-c COLUMN]
                                   [--quote {all,minimal,none,nonnumeric}]
                                   [--request-format {json,xml}] [-D]
                                   [-F FIELD] [-P SIZE] [--sort-key FIELD]
                                   [--sort-dir {asc,desc}]

List security groups that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_security-group-rule-create">
        <title>neutron security-group-rule-create command</title>
        <screen><computeroutput>usage: neutron security-group-rule-create [-h] [-f {shell,table}] [-c COLUMN]
                                          [--variable VARIABLE]
                                          [--prefix PREFIX]
                                          [--request-format {json,xml}]
                                          [--tenant-id TENANT_ID]
                                          [--direction {ingress,egress}]
                                          [--ethertype ETHERTYPE]
                                          [--protocol PROTOCOL]
                                          [--port-range-min PORT_RANGE_MIN]
                                          [--port-range-max PORT_RANGE_MAX]
                                          [--remote-ip-prefix REMOTE_IP_PREFIX]
                                          [--remote-group-id REMOTE_GROUP]
                                          SECURITY_GROUP

Create a security group rule.

positional arguments:
  SECURITY_GROUP        Security group name or id to add rule.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --direction {ingress,egress}
                        Direction of traffic: ingress/egress
  --ethertype ETHERTYPE
                        IPv4/IPv6
  --protocol PROTOCOL   Protocol of packet
  --port-range-min PORT_RANGE_MIN
                        Starting port range
  --port-range-max PORT_RANGE_MAX
                        Ending port range
  --remote-ip-prefix REMOTE_IP_PREFIX
                        CIDR to match on
  --remote-group-id REMOTE_GROUP
                        Remote security group name or id to apply rule

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_security-group-rule-delete">
        <title>neutron security-group-rule-delete command</title>
        <screen><computeroutput>usage: neutron security-group-rule-delete [-h] [--request-format {json,xml}]
                                          SECURITY_GROUP_RULE

Delete a given security group rule.

positional arguments:
  SECURITY_GROUP_RULE   ID of security_group_rule to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_security-group-rule-list">
        <title>neutron security-group-rule-list command</title>
        <screen><computeroutput>usage: neutron security-group-rule-list [-h] [-f {csv,table}] [-c COLUMN]
                                        [--quote {all,minimal,none,nonnumeric}]
                                        [--request-format {json,xml}] [-D]
                                        [-F FIELD] [-P SIZE]
                                        [--sort-key FIELD]
                                        [--sort-dir {asc,desc}]
                                        [--no-nameconv]

List security group rules that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)
  --no-nameconv         Do not convert security group ID to its name

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_security-group-rule-show">
        <title>neutron security-group-rule-show command</title>
        <screen><computeroutput>usage: neutron security-group-rule-show [-h] [-f {shell,table}] [-c COLUMN]
                                        [--variable VARIABLE]
                                        [--prefix PREFIX]
                                        [--request-format {json,xml}] [-D]
                                        [-F FIELD]
                                        SECURITY_GROUP_RULE

Show information of a given security group rule.

positional arguments:
  SECURITY_GROUP_RULE   ID of security_group_rule to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_security-group-show">
        <title>neutron security-group-show command</title>
        <screen><computeroutput>usage: neutron security-group-show [-h] [-f {shell,table}] [-c COLUMN]
                                   [--variable VARIABLE] [--prefix PREFIX]
                                   [--request-format {json,xml}] [-D]
                                   [-F FIELD]
                                   SECURITY_GROUP

Show information of a given security group.

positional arguments:
  SECURITY_GROUP        ID or name of security_group to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_security-group-update">
        <title>neutron security-group-update command</title>
        <screen><computeroutput>usage: neutron security-group-update [-h] [--request-format {json,xml}]
                                     [--name NAME] [--description DESCRIPTION]
                                     SECURITY_GROUP

Update a given security group.

positional arguments:
  SECURITY_GROUP        ID or name of security_group to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --name NAME           Name of security group
  --description DESCRIPTION
                        Description of security group

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_service-provider-list">
        <title>neutron service-provider-list command</title>
        <screen><computeroutput>usage: neutron service-provider-list [-h] [-f {csv,table}] [-c COLUMN]
                                     [--quote {all,minimal,none,nonnumeric}]
                                     [--request-format {json,xml}] [-D]
                                     [-F FIELD] [-P SIZE] [--sort-key FIELD]
                                     [--sort-dir {asc,desc}]

List service providers.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_subnet-create">
        <title>neutron subnet-create command</title>
        <screen><computeroutput>usage: neutron subnet-create [-h] [-f {shell,table}] [-c COLUMN]
                             [--variable VARIABLE] [--prefix PREFIX]
                             [--request-format {json,xml}]
                             [--tenant-id TENANT_ID] [--name NAME]
                             [--ip-version {4,6}] [--gateway GATEWAY_IP]
                             [--no-gateway]
                             [--allocation-pool start=IP_ADDR,end=IP_ADDR]
                             [--host-route destination=CIDR,nexthop=IP_ADDR]
                             [--dns-nameserver DNS_NAMESERVER]
                             [--disable-dhcp]
                             NETWORK CIDR

Create a subnet for a given tenant.

positional arguments:
  NETWORK               Network id or name this subnet belongs to
  CIDR                  CIDR of subnet to create

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --name NAME           Name of this subnet
  --ip-version {4,6}    IP version with default 4
  --gateway GATEWAY_IP  Gateway ip of this subnet
  --no-gateway          No distribution of gateway
  --allocation-pool start=IP_ADDR,end=IP_ADDR
                        Allocation pool IP addresses for this subnet (This
                        option can be repeated)
  --host-route destination=CIDR,nexthop=IP_ADDR
                        Additional route (This option can be repeated)
  --dns-nameserver DNS_NAMESERVER
                        DNS name server for this subnet (This option can be
                        repeated)
  --disable-dhcp        Disable DHCP for this subnet

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_subnet-delete">
        <title>neutron subnet-delete command</title>
        <screen><computeroutput>usage: neutron subnet-delete [-h] [--request-format {json,xml}] SUBNET

Delete a given subnet.

positional arguments:
  SUBNET                ID or name of subnet to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_subnet-list">
        <title>neutron subnet-list command</title>
        <screen><computeroutput>usage: neutron subnet-list [-h] [-f {csv,table}] [-c COLUMN]
                           [--quote {all,minimal,none,nonnumeric}]
                           [--request-format {json,xml}] [-D] [-F FIELD]
                           [-P SIZE] [--sort-key FIELD]
                           [--sort-dir {asc,desc}]

List subnets that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_subnet-show">
        <title>neutron subnet-show command</title>
        <screen><computeroutput>usage: neutron subnet-show [-h] [-f {shell,table}] [-c COLUMN]
                           [--variable VARIABLE] [--prefix PREFIX]
                           [--request-format {json,xml}] [-D] [-F FIELD]
                           SUBNET

Show information of a given subnet.

positional arguments:
  SUBNET                ID or name of subnet to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_subnet-update">
        <title>neutron subnet-update command</title>
        <screen><computeroutput>usage: neutron subnet-update [-h] [--request-format {json,xml}] SUBNET

Update subnet's information.

positional arguments:
  SUBNET                ID or name of subnet to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-ikepolicy-create">
        <title>neutron vpn-ikepolicy-create command</title>
        <screen><computeroutput>usage: neutron vpn-ikepolicy-create [-h] [-f {shell,table}] [-c COLUMN]
                                    [--variable VARIABLE] [--prefix PREFIX]
                                    [--request-format {json,xml}]
                                    [--tenant-id TENANT_ID]
                                    [--description DESCRIPTION]
                                    [--auth-algorithm {sha1}]
                                    [--encryption-algorithm {3des,aes-128,aes-192,aes-256}]
                                    [--phase1-negotiation-mode {main}]
                                    [--ike-version {v1,v2}]
                                    [--pfs {group2,group5,group14}]
                                    [--lifetime units=UNITS,value=VALUE]
                                    NAME

Create an IKEPolicy.

positional arguments:
  NAME                  Name of the IKE Policy

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --description DESCRIPTION
                        Description of the IKE policy
  --auth-algorithm {sha1}
                        Authentication algorithm in lowercase. default:sha1
  --encryption-algorithm {3des,aes-128,aes-192,aes-256}
                        Encryption Algorithm in lowercase, default:aes-128
  --phase1-negotiation-mode {main}
                        IKE Phase1 negotiation mode in lowercase, default:main
  --ike-version {v1,v2}
                        IKE version in lowercase, default:v1
  --pfs {group2,group5,group14}
                        Perfect Forward Secrecy in lowercase, default:group5
  --lifetime units=UNITS,value=VALUE
                        IKE Lifetime
                        Attributes.'units'-seconds,default:seconds.
                        'value'-non negative integer, default:3600.

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-ikepolicy-delete">
        <title>neutron vpn-ikepolicy-delete command</title>
        <screen><computeroutput>usage: neutron vpn-ikepolicy-delete [-h] [--request-format {json,xml}]
                                    IKEPOLICY

Delete a given IKE Policy.

positional arguments:
  IKEPOLICY             ID or name of ikepolicy to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-ikepolicy-list">
        <title>neutron vpn-ikepolicy-list command</title>
        <screen><computeroutput>usage: neutron vpn-ikepolicy-list [-h] [-f {csv,table}] [-c COLUMN]
                                  [--quote {all,minimal,none,nonnumeric}]
                                  [--request-format {json,xml}] [-D]
                                  [-F FIELD] [-P SIZE] [--sort-key FIELD]
                                  [--sort-dir {asc,desc}]

List IKEPolicies that belong to a tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-ikepolicy-show">
        <title>neutron vpn-ikepolicy-show command</title>
        <screen><computeroutput>usage: neutron vpn-ikepolicy-show [-h] [-f {shell,table}] [-c COLUMN]
                                  [--variable VARIABLE] [--prefix PREFIX]
                                  [--request-format {json,xml}] [-D]
                                  [-F FIELD]
                                  IKEPOLICY

Show information of a given IKEPolicy.

positional arguments:
  IKEPOLICY             ID or name of ikepolicy to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-ikepolicy-update">
        <title>neutron vpn-ikepolicy-update command</title>
        <screen><computeroutput>usage: neutron vpn-ikepolicy-update [-h] [--request-format {json,xml}]
                                    [--lifetime units=UNITS,value=VALUE]
                                    IKEPOLICY

Update a given IKE Policy.

positional arguments:
  IKEPOLICY             ID or name of ikepolicy to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --lifetime units=UNITS,value=VALUE
                        IKE Lifetime
                        Attributes.'units'-seconds,default:seconds.
                        'value'-non negative integer, default:3600.

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-ipsecpolicy-create">
        <title>neutron vpn-ipsecpolicy-create command</title>
        <screen><computeroutput>usage: neutron vpn-ipsecpolicy-create [-h] [-f {shell,table}] [-c COLUMN]
                                      [--variable VARIABLE] [--prefix PREFIX]
                                      [--request-format {json,xml}]
                                      [--tenant-id TENANT_ID]
                                      [--description DESCRIPTION]
                                      [--transform-protocol {esp,ah,ah-esp}]
                                      [--auth-algorithm {sha1}]
                                      [--encryption-algorithm {3des,aes-128,aes-192,aes-256}]
                                      [--encapsulation-mode {tunnel,transport}]
                                      [--pfs {group2,group5,group14}]
                                      [--lifetime units=UNITS,value=VALUE]
                                      NAME

Create an ipsecpolicy.

positional arguments:
  NAME                  Name of the IPsecPolicy

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --description DESCRIPTION
                        Description of the IPsecPolicy
  --transform-protocol {esp,ah,ah-esp}
                        Transform Protocol in lowercase, default:esp
  --auth-algorithm {sha1}
                        Authentication algorithm in lowercase, default:sha1
  --encryption-algorithm {3des,aes-128,aes-192,aes-256}
                        Encryption Algorithm in lowercase, default:aes-128
  --encapsulation-mode {tunnel,transport}
                        Encapsulation Mode in lowercase, default:tunnel
  --pfs {group2,group5,group14}
                        Perfect Forward Secrecy in lowercase, default:group5
  --lifetime units=UNITS,value=VALUE
                        IPsec Lifetime
                        Attributes.'units'-seconds,default:seconds.
                        'value'-non negative integer, default:3600.

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-ipsecpolicy-delete">
        <title>neutron vpn-ipsecpolicy-delete command</title>
        <screen><computeroutput>usage: neutron vpn-ipsecpolicy-delete [-h] [--request-format {json,xml}]
                                      IPSECPOLICY

Delete a given ipsecpolicy.

positional arguments:
  IPSECPOLICY           ID or name of ipsecpolicy to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-ipsecpolicy-list">
        <title>neutron vpn-ipsecpolicy-list command</title>
        <screen><computeroutput>usage: neutron vpn-ipsecpolicy-list [-h] [-f {csv,table}] [-c COLUMN]
                                    [--quote {all,minimal,none,nonnumeric}]
                                    [--request-format {json,xml}] [-D]
                                    [-F FIELD] [-P SIZE] [--sort-key FIELD]
                                    [--sort-dir {asc,desc}]

List ipsecpolicies that belongs to a given tenant connection.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-ipsecpolicy-show">
        <title>neutron vpn-ipsecpolicy-show command</title>
        <screen><computeroutput>usage: neutron vpn-ipsecpolicy-show [-h] [-f {shell,table}] [-c COLUMN]
                                    [--variable VARIABLE] [--prefix PREFIX]
                                    [--request-format {json,xml}] [-D]
                                    [-F FIELD]
                                    IPSECPOLICY

Show information of a given ipsecpolicy.

positional arguments:
  IPSECPOLICY           ID or name of ipsecpolicy to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-ipsecpolicy-update">
        <title>neutron vpn-ipsecpolicy-update command</title>
        <screen><computeroutput>usage: neutron vpn-ipsecpolicy-update [-h] [--request-format {json,xml}]
                                      [--lifetime units=UNITS,value=VALUE]
                                      IPSECPOLICY

Update a given ipsec policy.

positional arguments:
  IPSECPOLICY           ID or name of ipsecpolicy to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --lifetime units=UNITS,value=VALUE
                        IPsec Lifetime
                        Attributes.'units'-seconds,default:seconds.
                        'value'-non negative integer, default:3600.

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-service-create">
        <title>neutron vpn-service-create command</title>
        <screen><computeroutput>usage: neutron vpn-service-create [-h] [-f {shell,table}] [-c COLUMN]
                                  [--variable VARIABLE] [--prefix PREFIX]
                                  [--request-format {json,xml}]
                                  [--tenant-id TENANT_ID] [--admin-state-down]
                                  [--name NAME] [--description DESCRIPTION]
                                  ROUTER SUBNET

Create a VPNService.

positional arguments:
  ROUTER                Router unique identifier for the vpnservice
  SUBNET                Subnet unique identifier for the vpnservice deployment

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  --tenant-id TENANT_ID
                        The owner tenant ID
  --admin-state-down    Set admin state up to false
  --name NAME           Set a name for the vpnservice
  --description DESCRIPTION
                        Set a description for the vpnservice

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-service-delete">
        <title>neutron vpn-service-delete command</title>
        <screen><computeroutput>usage: neutron vpn-service-delete [-h] [--request-format {json,xml}]
                                  VPNSERVICE

Delete a given VPNService.

positional arguments:
  VPNSERVICE            ID or name of vpnservice to delete

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-service-list">
        <title>neutron vpn-service-list command</title>
        <screen><computeroutput>usage: neutron vpn-service-list [-h] [-f {csv,table}] [-c COLUMN]
                                [--quote {all,minimal,none,nonnumeric}]
                                [--request-format {json,xml}] [-D] [-F FIELD]
                                [-P SIZE] [--sort-key FIELD]
                                [--sort-dir {asc,desc}]

List VPNService configurations that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        Specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      Sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        Sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,table}, --format {csv,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-service-show">
        <title>neutron vpn-service-show command</title>
        <screen><computeroutput>usage: neutron vpn-service-show [-h] [-f {shell,table}] [-c COLUMN]
                                [--variable VARIABLE] [--prefix PREFIX]
                                [--request-format {json,xml}] [-D] [-F FIELD]
                                VPNSERVICE

Show information of a given VPNService.

positional arguments:
  VPNSERVICE            ID or name of vpnservice to look up

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format
  -D, --show-details    Show detailed info
  -F FIELD, --field FIELD
                        Specify the field(s) to be returned by server, can be
                        repeated

output formatters:
  output formatter options

  -f {shell,table}, --format {shell,table}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --variable VARIABLE   specify the variable(s) to include, can be repeated
  --prefix PREFIX       add a prefix to all variable names

</computeroutput></screen>
    </section>
    <section xml:id="neutronclient_subcommand_vpn-service-update">
        <title>neutron vpn-service-update command</title>
        <screen><computeroutput>usage: neutron vpn-service-update [-h] [--request-format {json,xml}]
                                  VPNSERVICE

Update a given VPNService.

positional arguments:
  VPNSERVICE            ID or name of vpnservice to update

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        The xml or json request format

</computeroutput></screen>
    </section>
</section>
