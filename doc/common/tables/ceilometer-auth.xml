<?xml version="1.0" encoding="UTF-8"?>
        <!-- Warning: Do not edit this file. It is automatically
             generated and your changes will be overwritten.
             The tool to do so lives in the tools directory of this
             repository -->
        <para xmlns="http://docbook.org/ns/docbook" version="5.0">
        <table rules="all" xml:id="config_table_ceilometer_auth">
          <caption>Description of configuration options for auth</caption>
           <col width="50%"/>
           <col width="50%"/>
           <thead>
              <tr>
                  <th>Configuration option = Default value</th>
                  <th>Description</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <th colspan="2">[DEFAULT]</th>
              </tr>
              <tr>
                       <td>auth_strategy = keystone</td>
                       <td>(StrOpt) The strategy to use for auth: noauth or keystone.</td>
              </tr>
              <tr>
                  <th colspan="2">[keystone_authtoken]</th>
              </tr>
              <tr>
                       <td>admin_password = None</td>
                       <td>(StrOpt) Keystone account password</td>
              </tr>
              <tr>
                       <td>admin_tenant_name = admin</td>
                       <td>(StrOpt) Keystone service account tenant name to validate user tokens</td>
              </tr>
              <tr>
                       <td>admin_token = None</td>
                       <td>(StrOpt) Single shared secret with the Keystone configuration used for bootstrapping a Keystone installation, or otherwise bypassing the normal authentication process.</td>
              </tr>
              <tr>
                       <td>admin_user = None</td>
                       <td>(StrOpt) Keystone account username</td>
              </tr>
              <tr>
                       <td>auth_admin_prefix = </td>
                       <td>(StrOpt) Prefix to prepend at the beginning of the path</td>
              </tr>
              <tr>
                       <td>auth_host = 127.0.0.1</td>
                       <td>(StrOpt) Host providing the admin Identity API endpoint</td>
              </tr>
              <tr>
                       <td>auth_port = 35357</td>
                       <td>(IntOpt) Port of the admin Identity API endpoint</td>
              </tr>
              <tr>
                       <td>auth_protocol = https</td>
                       <td>(StrOpt) Protocol of the admin Identity API endpoint(http or https)</td>
              </tr>
              <tr>
                       <td>auth_uri = None</td>
                       <td>(StrOpt) Complete public Identity API endpoint</td>
              </tr>
              <tr>
                       <td>auth_version = None</td>
                       <td>(StrOpt) API version of the admin Identity API endpoint</td>
              </tr>
              <tr>
                       <td>cache = None</td>
                       <td>(StrOpt) Env key for the swift cache</td>
              </tr>
              <tr>
                       <td>cafile = None</td>
                       <td>(StrOpt) A PEM encoded Certificate Authority to use when verifying HTTPs connections. Defaults to system CAs.</td>
              </tr>
              <tr>
                       <td>certfile = None</td>
                       <td>(StrOpt) Required if Keystone server requires client certificate</td>
              </tr>
              <tr>
                       <td>delay_auth_decision = False</td>
                       <td>(BoolOpt) Do not handle authorization requests within the middleware, but delegate the authorization decision to downstream WSGI components</td>
              </tr>
              <tr>
                       <td>enforce_token_bind = permissive</td>
                       <td>(StrOpt) Used to control the use and type of token binding. Can be set to: "disabled" to not check token binding. "permissive" (default) to validate binding information if the bind type is of a form known to the server and ignore it if not. "strict" like "permissive" but if the bind type is unknown the token will be rejected. "required" any form of token binding is needed to be allowed. Finally the name of a binding method that must be present in tokens.</td>
              </tr>
              <tr>
                       <td>http_connect_timeout = None</td>
                       <td>(BoolOpt) Request timeout value for communicating with Identity API server.</td>
              </tr>
              <tr>
                       <td>http_request_max_retries = 3</td>
                       <td>(IntOpt) How many times are we trying to reconnect when communicating with Identity API Server.</td>
              </tr>
              <tr>
                       <td>include_service_catalog = True</td>
                       <td>(BoolOpt) (optional) indicate whether to set the X-Service-Catalog header. If False, middleware will not ask for service catalog on token validation and will not set the X-Service-Catalog header.</td>
              </tr>
              <tr>
                       <td>insecure = False</td>
                       <td>(BoolOpt) Verify HTTPS connections.</td>
              </tr>
              <tr>
                       <td>keyfile = None</td>
                       <td>(StrOpt) Required if Keystone server requires client certificate</td>
              </tr>
              <tr>
                       <td>memcache_secret_key = None</td>
                       <td>(StrOpt) (optional, mandatory if memcache_security_strategy is defined) this string is used for key derivation.</td>
              </tr>
              <tr>
                       <td>memcache_security_strategy = None</td>
                       <td>(StrOpt) (optional) if defined, indicate whether token data should be authenticated or authenticated and encrypted. Acceptable values are MAC or ENCRYPT.  If MAC, token data is authenticated (with HMAC) in the cache. If ENCRYPT, token data is encrypted and authenticated in the cache. If the value is not one of these options or empty, auth_token will raise an exception on initialization.</td>
              </tr>
              <tr>
                       <td>memcached_servers = None</td>
                       <td>(ListOpt) Optionally specify a list of memcached server(s) to use for caching. If left undefined, tokens will instead be cached in-process.</td>
              </tr>
              <tr>
                       <td>revocation_cache_time = 300</td>
                       <td>(IntOpt) Determines the frequency at which the list of revoked tokens is retrieved from the Identity service (in seconds). A high number of revocation events combined with a low cache duration may significantly reduce performance.</td>
              </tr>
              <tr>
                       <td>signing_dir = None</td>
                       <td>(StrOpt) Directory used to cache files related to PKI tokens</td>
              </tr>
              <tr>
                       <td>token_cache_time = 300</td>
                       <td>(IntOpt) In order to prevent excessive effort spent validating tokens, the middleware caches previously-seen tokens for a configurable duration (in seconds). Set to -1 to disable caching completely.</td>
              </tr>
              <tr>
                  <th colspan="2">[service_credentials]</th>
              </tr>
              <tr>
                       <td>insecure = False</td>
                       <td>(BoolOpt) Disables X.509 certificate validation when an SSL connection to Identity Service is established.</td>
              </tr>
              <tr>
                       <td>os_auth_url = http://localhost:5000/v2.0</td>
                       <td>(StrOpt) Auth URL to use for OpenStack service access.</td>
              </tr>
              <tr>
                       <td>os_cacert = None</td>
                       <td>(StrOpt) Certificate chain for SSL validation.</td>
              </tr>
              <tr>
                       <td>os_endpoint_type = publicURL</td>
                       <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with OpenStack services.</td>
              </tr>
              <tr>
                       <td>os_password = admin</td>
                       <td>(StrOpt) Password to use for OpenStack service access.</td>
              </tr>
              <tr>
                       <td>os_region_name = None</td>
                       <td>(StrOpt) Region name to use for OpenStack service endpoints.</td>
              </tr>
              <tr>
                       <td>os_tenant_id = </td>
                       <td>(StrOpt) Tenant ID to use for OpenStack service access.</td>
              </tr>
              <tr>
                       <td>os_tenant_name = admin</td>
                       <td>(StrOpt) Tenant name to use for OpenStack service access.</td>
              </tr>
              <tr>
                       <td>os_username = ceilometer</td>
                       <td>(StrOpt) User name to use for OpenStack service access.</td>
              </tr>
       </tbody>
        </table>
        </para>
