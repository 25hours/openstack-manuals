<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="ceilometer-conf-changes-master">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Juno for Telemetry</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] api_paste_config = api_paste.ini</td>
      <td>(StrOpt) Configuration file for WSGI definition of API.</td>
    </tr>
    <tr>
      <td>[DEFAULT] glance_page_size = 0</td>
      <td>(IntOpt) Number of items to request in each paginated Glance API request (parameter used by glancecelient). If this is less than or equal to 0, page size is not specified (default value in glanceclient is used).</td>
    </tr>
    <tr>
      <td>[DEFAULT] ironic_exchange = ironic</td>
      <td>(StrOpt) Exchange name for Ironic notifications.</td>
    </tr>
    <tr>
      <td>[DEFAULT] keystone_control_exchange = keystone</td>
      <td>(StrOpt) Exchange name for Keystone notifications.</td>
    </tr>
    <tr>
      <td>[DEFAULT] nova_http_log_debug = False</td>
      <td>(BoolOpt) Allow novaclient's debug log output.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rabbit_login_method = AMQPLAIN</td>
      <td>(StrOpt) the RabbitMQ login method</td>
    </tr>
    <tr>
      <td>[DEFAULT] sahara_control_exchange = sahara</td>
      <td>(StrOpt) Exchange name for Data Processing notifications</td>
    </tr>
    <tr>
      <td>[DEFAULT] transport_url = None</td>
      <td>(StrOpt) A URL representing the messaging driver to use and its full configuration. If not set, we fall back to the rpc_backend option and driver specific configuration.</td>
    </tr>
    <tr>
      <td>[DEFAULT] trove_control_exchange = trove</td>
      <td>(StrOpt) Exchange name for DBaaS notifications</td>
    </tr>
    <tr>
      <td>[alarm] project_alarm_quota = None</td>
      <td>(IntOpt) Maximum number of alarms defined for a project.</td>
    </tr>
    <tr>
      <td>[alarm] rest_notifier_max_retries = 0</td>
      <td>(IntOpt) Number of retries for REST notifier</td>
    </tr>
    <tr>
      <td>[alarm] user_alarm_quota = None</td>
      <td>(IntOpt) Maximum number of alarms defined for a user.</td>
    </tr>
    <tr>
      <td>[api] enable_reverse_dns_lookup = False</td>
      <td>(BoolOpt) Set it to False if your environment does not need or have dns server, otherwise it will delay the response from api.</td>
    </tr>
    <tr>
      <td>[central] partitioning_group_prefix = None</td>
      <td>(StrOpt) Work-load partitioning group prefix. Use only if you want to run multiple central agents with different config files. For each sub-group of the central agent pool with the same partitioning_group_prefix a disjoint subset of pollsters should be loaded.</td>
    </tr>
    <tr>
      <td>[collector] requeue_sample_on_dispatcher_error = False</td>
      <td>(BoolOpt) Requeue the sample on the collector sample queue when the collector fails to dispatch it. This is only valid if the sample come from the notifier publisher</td>
    </tr>
    <tr>
      <td>[compute] workload_partitioning = False</td>
      <td>(BoolOpt) Enable work-load partitioning, allowing multiple compute agents to be run simultaneously.</td>
    </tr>
    <tr>
      <td>[coordination] backend_url = None</td>
      <td>(StrOpt) The backend URL to use for distributed coordination. If left empty, per-deployment central agent and per-host compute agent won't do workload partitioning and will only function correctly if a single instance of that service is running.</td>
    </tr>
    <tr>
      <td>[coordination] heartbeat = 1.0</td>
      <td>(FloatOpt) Number of seconds between heartbeats for distributed coordination (float)</td>
    </tr>
    <tr>
      <td>[database] alarm_connection = None</td>
      <td>(StrOpt) The connection string used to connect to the alarm database. (if unset, connection is used)</td>
    </tr>
    <tr>
      <td>[database] db_inc_retry_interval = True</td>
      <td>(BoolOpt) If True, increases the interval between database connection retries up to db_max_retry_interval.</td>
    </tr>
    <tr>
      <td>[database] db_max_retries = 20</td>
      <td>(IntOpt) Maximum database connection retries before error is raised. Set to -1 to specify an infinite retry count.</td>
    </tr>
    <tr>
      <td>[database] db_max_retry_interval = 10</td>
      <td>(IntOpt) If db_inc_retry_interval is set, the maximum seconds between database connection retries.</td>
    </tr>
    <tr>
      <td>[database] db_retry_interval = 1</td>
      <td>(IntOpt) Seconds between database connection retries.</td>
    </tr>
    <tr>
      <td>[database] metering_connection = None</td>
      <td>(StrOpt) The connection string used to connect to the meteting database. (if unset, connection is used)</td>
    </tr>
    <tr>
      <td>[database] mysql_sql_mode = TRADITIONAL</td>
      <td>(StrOpt) The SQL mode to be used for MySQL sessions. This option, including the default, overrides any server-set SQL mode. To use whatever SQL mode is set by the server configuration, set this to no value. Example: mysql_sql_mode=</td>
    </tr>
    <tr>
      <td>[database] sqlite_db = oslo.sqlite</td>
      <td>(StrOpt) The file name to use with SQLite.</td>
    </tr>
    <tr>
      <td>[database] sqlite_synchronous = True</td>
      <td>(BoolOpt) If True, SQLite uses synchronous mode.</td>
    </tr>
    <tr>
      <td>[database] use_db_reconnect = False</td>
      <td>(BoolOpt) Enable the experimental use of database reconnect on connection lost.</td>
    </tr>
    <tr>
      <td>[hardware] readonly_user_name = ro_snmp_user</td>
      <td>(StrOpt) SNMPd user name of all nodes running in the cloud.</td>
    </tr>
    <tr>
      <td>[hardware] readonly_user_password = password</td>
      <td>(StrOpt) SNMPd password of all the nodes running in the cloud</td>
    </tr>
    <tr>
      <td>[hardware] url_scheme = snmp://</td>
      <td>(StrOpt) URL scheme to use for hardware nodes</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] check_revocations_for_cached = False</td>
      <td>(BoolOpt) If true, the revocation list will be checked for cached tokens. This requires that PKI tokens are configured on the Keystone server.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] hash_algorithms = ['md5']</td>
      <td>(ListOpt) Hash algorithms to use for hashing PKI tokens. This may be a single algorithm or multiple. The algorithms are those supported by Python standard hashlib.new(). The hashes will be tried in the order given, so put the preferred one first for performance. The result of the first hash will be stored in the cache. This will typically be set to multiple values only while migrating from a less secure algorithm to a more secure one. Once all the old tokens are expired this option should be set to a single value for better performance.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] identity_uri = None</td>
      <td>(StrOpt) Complete admin Identity API endpoint. This should specify the unversioned root endpoint e.g. https://localhost:35357/</td>
    </tr>
    <tr>
      <td>[notification] messaging_urls = []</td>
      <td>(MultiStrOpt) Messaging URLs to listen for notifications. Example: transport://user:pass@host1:port[,hostN:portN]/virtual_host (DEFAULT/transport_url is used if empty)</td>
    </tr>
    <tr>
      <td>[publisher_notifier] metering_driver = messagingv2</td>
      <td>(StrOpt) The driver that ceilometer uses for metering notifications.</td>
    </tr>
    <tr>
      <td>[publisher_notifier] metering_topic = metering</td>
      <td>(StrOpt) The topic that ceilometer uses for metering notifications.</td>
    </tr>
    <tr>
      <td>[vmware] wsdl_location = None</td>
      <td>(StrOpt) Optional vim service WSDL location e.g http://&lt;server&gt;/vimService.wsdl. Optional over-ride to default location for bug work-arounds</td>
    </tr>
    <tr>
      <td>[xenapi] connection_password = None</td>
      <td>(StrOpt) Password for connection to XenServer/Xen Cloud Platform</td>
    </tr>
    <tr>
      <td>[xenapi] connection_url = None</td>
      <td>(StrOpt) URL for connection to XenServer/Xen Cloud Platform</td>
    </tr>
    <tr>
      <td>[xenapi] connection_username = root</td>
      <td>(StrOpt) Username for connection to XenServer/Xen Cloud Platform</td>
    </tr>
    <tr>
      <td>[xenapi] login_timeout = 10</td>
      <td>(IntOpt) Timeout in seconds for XenAPI login.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] default_log_levels</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_zmq_matchmaker</td>
      <td>ceilometer.openstack.common.rpc.matchmaker.MatchMakerLocalhost</td>
      <td>oslo.messaging._drivers.matchmaker.MatchMakerLocalhost</td>
    </tr>
    <tr>
      <td>[database] connection</td>
      <td>sqlite:////home/gpocentek/Workspace/OpenStack/openstack-doc-tools/autogenerate_config_docs/sources/ceilometer/ceilometer/openstack/common/db/$sqlite_db</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[database] slave_connection</td>
      <td></td>
      <td>None</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] revocation_cache_time</td>
      <td>300</td>
      <td>10</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[rpc_notifier2] topics</td>
      <td>[DEFAULT] notification_topics</td>
    </tr>
  </table>
</section>
