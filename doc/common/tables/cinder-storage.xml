<?xml version='1.0' encoding='UTF-8'?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_cinder_storage">
    <caption>Description of configuration options for storage</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td>allocated_capacity_weight_multiplier = -1.0</td>
        <td>(FloatOpt) Multiplier used for weighing volume capacity. Negative numbers mean to stack vs spread.</td>
      </tr>
      <tr>
        <td>capacity_weight_multiplier = 1.0</td>
        <td>(FloatOpt) Multiplier used for weighing volume capacity. Negative numbers mean to stack vs spread.</td>
      </tr>
      <tr>
        <td>enabled_backends = None</td>
        <td>(ListOpt) A list of backend names to use. These backend names should be backed by a unique [CONFIG] group with its options</td>
      </tr>
      <tr>
        <td>iscsi_helper = tgtadm</td>
        <td>(StrOpt) iSCSI target user-land tool to use</td>
      </tr>
      <tr>
        <td>iscsi_iotype = fileio</td>
        <td>(StrOpt) Sets the behavior of the iSCSI target to either perform blockio or fileio optionally, auto can be set and Cinder will autodetect type of backing device</td>
      </tr>
      <tr>
        <td>iscsi_ip_address = $my_ip</td>
        <td>(StrOpt) The IP address that the iSCSI daemon is listening on</td>
      </tr>
      <tr>
        <td>iscsi_num_targets = 100</td>
        <td>(IntOpt) The maximum number of iSCSI target IDs per host</td>
      </tr>
      <tr>
        <td>iscsi_port = 3260</td>
        <td>(IntOpt) The port that the iSCSI daemon is listening on</td>
      </tr>
      <tr>
        <td>iscsi_target_prefix = iqn.2010-10.org.openstack:</td>
        <td>(StrOpt) Prefix for iSCSI volumes</td>
      </tr>
      <tr>
        <td>iser_helper = tgtadm</td>
        <td>(StrOpt) The name of the iSER target user-land tool to use</td>
      </tr>
      <tr>
        <td>iser_ip_address = $my_ip</td>
        <td>(StrOpt) The IP address that the iSER daemon is listening on</td>
      </tr>
      <tr>
        <td>iser_num_targets = 100</td>
        <td>(IntOpt) The maximum number of iSER target IDs per host</td>
      </tr>
      <tr>
        <td>iser_port = 3260</td>
        <td>(IntOpt) The port that the iSER daemon is listening on</td>
      </tr>
      <tr>
        <td>iser_target_prefix = iqn.2010-10.org.iser.openstack:</td>
        <td>(StrOpt) Prefix for iSER volumes</td>
      </tr>
      <tr>
        <td>max_gigabytes = 10000</td>
        <td>(IntOpt) This configure option has been deprecated along with the SimpleScheduler.  New scheduler is able to gather capacity information for each host, thus setting the maximum number of volume gigabytes for host is no longer needed.  It's safe to remove this configure from cinder.conf.</td>
      </tr>
      <tr>
        <td>migration_create_volume_timeout_secs = 300</td>
        <td>(IntOpt) Timeout for creating the volume to migrate to when performing volume migration (seconds)</td>
      </tr>
      <tr>
        <td>num_iser_scan_tries = 3</td>
        <td>(IntOpt) The maximum number of times to rescan iSER targetto find volume</td>
      </tr>
      <tr>
        <td>num_volume_device_scan_tries = 3</td>
        <td>(IntOpt) The maximum number of times to rescan targets to find volume</td>
      </tr>
      <tr>
        <td>volume_backend_name = None</td>
        <td>(StrOpt) The backend name for a given driver implementation</td>
      </tr>
      <tr>
        <td>volume_clear = zero</td>
        <td>(StrOpt) Method used to wipe old volumes (valid options are: none, zero, shred)</td>
      </tr>
      <tr>
        <td>volume_clear_ionice = None</td>
        <td>(StrOpt) The flag to pass to ionice to alter the i/o priority of the process used to zero a volume after deletion, for example "-c3" for idle only priority.</td>
      </tr>
      <tr>
        <td>volume_clear_size = 0</td>
        <td>(IntOpt) Size in MiB to wipe at start of old volumes. 0 =&gt; all</td>
      </tr>
      <tr>
        <td>volume_copy_blkio_cgroup_name = cinder-volume-copy</td>
        <td>(StrOpt) The blkio cgroup name to be used to limit bandwidth of volume copy</td>
      </tr>
      <tr>
        <td>volume_copy_bps_limit = 0</td>
        <td>(IntOpt) The upper limit of bandwidth of volume copy. 0 =&gt; unlimited</td>
      </tr>
      <tr>
        <td>volume_dd_blocksize = 1M</td>
        <td>(StrOpt) The default block size used when copying/clearing volumes</td>
      </tr>
      <tr>
        <td>volume_driver = cinder.volume.drivers.lvm.LVMISCSIDriver</td>
        <td>(StrOpt) Driver to use for volume creation</td>
      </tr>
      <tr>
        <td>volume_manager = cinder.volume.manager.VolumeManager</td>
        <td>(StrOpt) Full class name for the Manager for volume</td>
      </tr>
      <tr>
        <td>volume_service_inithost_offload = False</td>
        <td>(BoolOpt) Offload pending volume delete during volume service startup</td>
      </tr>
      <tr>
        <td>volume_usage_audit_period = month</td>
        <td>(StrOpt) Time period for which to generate volume usages. The options are hour, day, month, or year.</td>
      </tr>
      <tr>
        <td>volumes_dir = $state_path/volumes</td>
        <td>(StrOpt) Volume configuration file storage directory</td>
      </tr>
    </tbody>
  </table>
</para>
