<?xml version="1.0" encoding="UTF-8"?>
        <!-- Warning: Do not edit this file. It is automatically
             generated and your changes will be overwritten.
             The tool to do so lives in the tools directory of this
             repository -->
        <para xmlns="http://docbook.org/ns/docbook" version="5.0">
        <table rules="all">
          <caption>Description of configuration options for storage</caption>
           <col width="50%"/>
           <col width="50%"/>
           <thead>
              <tr>
                  <td>Configuration option=Default value</td>
                  <td>Description</td>
              </tr>
          </thead>
          <tbody>
              <tr>
                       <td>available_devices=</td>
                       <td>(ListOpt) List of all available devices</td>
              </tr>
              <tr>
                       <td>backend=sqlalchemy</td>
                       <td>(StrOpt) The backend to use for db</td>
              </tr>
              <tr>
                       <td>bindir=$pybasedir/bin</td>
                       <td>(StrOpt) Directory where cinder binaries are installed</td>
              </tr>
              <tr>
                       <td>capacity_weight_multiplier=1.0</td>
                       <td>(FloatOpt) Multiplier used for weighing volume capacity. Negative numbers mean to stack vs spread.</td>
              </tr>
              <tr>
                       <td>cinder_huawei_conf_file=/etc/cinder/cinder_huawei_conf.xml</td>
                       <td>(StrOpt) config data for cinder huawei plugin</td>
              </tr>
              <tr>
                       <td>coraid_esm_address=</td>
                       <td>(StrOpt) IP address of Coraid ESM</td>
              </tr>
              <tr>
                       <td>coraid_group=admin</td>
                       <td>(StrOpt) Name of group on Coraid ESM to which coraid_user belongs (must have admin privilege)</td>
              </tr>
              <tr>
                       <td>coraid_password=password</td>
                       <td>(StrOpt) Password to connect to Coraid ESM</td>
              </tr>
              <tr>
                       <td>coraid_repository_key=coraid_repository</td>
                       <td>(StrOpt) Volume Type key name to store ESM Repository Name</td>
              </tr>
              <tr>
                       <td>coraid_user=admin</td>
                       <td>(StrOpt) User name to connect to Coraid ESM</td>
              </tr>
              <tr>
                       <td>enabled_backends=None</td>
                       <td>(ListOpt) A list of backend names to use. These backend names should be backed by a unique [CONFIG] group with its options</td>
              </tr>
              <tr>
                       <td>eqlx_chap_login=admin</td>
                       <td>(StrOpt) Existing CHAP account name</td>
              </tr>
              <tr>
                       <td>eqlx_chap_password=password</td>
                       <td>(StrOpt) Password for specified CHAP account name</td>
              </tr>
              <tr>
                       <td>eqlx_cli_max_retries=5</td>
                       <td>(IntOpt) Maximum retry count for reconnection</td>
              </tr>
              <tr>
                       <td>eqlx_cli_timeout=30</td>
                       <td>(IntOpt) Timeout for the Group Manager cli command execution</td>
              </tr>
              <tr>
                       <td>eqlx_group_name=group-0</td>
                       <td>(StrOpt) Group name to use for creating volumes</td>
              </tr>
              <tr>
                       <td>eqlx_pool=default</td>
                       <td>(StrOpt) Pool in which volumes will be created</td>
              </tr>
              <tr>
                       <td>eqlx_use_chap=False</td>
                       <td>(BoolOpt) Use CHAP authentificaion for targets?</td>
              </tr>
              <tr>
                       <td>expiry_thres_minutes=720</td>
                       <td>(IntOpt) Threshold minutes after which cache file can be cleaned.</td>
              </tr>
              <tr>
                       <td>hds_cinder_config_file=/opt/hds/hus/cinder_hus_conf.xml</td>
                       <td>(StrOpt) configuration file for HDS cinder plugin for HUS</td>
              </tr>
              <tr>
                       <td>hp3par_api_url=</td>
                       <td>(StrOpt) 3PAR WSAPI Server Url like https://&lt;3par ip&gt;:8080/api/v1</td>
              </tr>
              <tr>
                       <td>hp3par_cpg=OpenStack</td>
                       <td>(StrOpt) The CPG to use for volume creation</td>
              </tr>
              <tr>
                       <td>hp3par_cpg_snap=</td>
                       <td>(StrOpt) The CPG to use for Snapshots for volumes. If empty hp3par_cpg will be used</td>
              </tr>
              <tr>
                       <td>hp3par_debug=False</td>
                       <td>(BoolOpt) Enable HTTP debugging to 3PAR</td>
              </tr>
              <tr>
                       <td>hp3par_domain=None</td>
                       <td>(StrOpt) This option is DEPRECATED and no longer used. The 3par domain name to use.</td>
              </tr>
              <tr>
                       <td>hp3par_iscsi_ips=</td>
                       <td>(ListOpt) List of target iSCSI addresses to use.</td>
              </tr>
              <tr>
                       <td>hp3par_password=</td>
                       <td>(StrOpt) 3PAR Super user password</td>
              </tr>
              <tr>
                       <td>hp3par_snapshot_expiration=</td>
                       <td>(StrOpt) The time in hours when a snapshot expires  and is deleted.  This must be larger than expiration</td>
              </tr>
              <tr>
                       <td>hp3par_snapshot_retention=</td>
                       <td>(StrOpt) The time in hours to retain a snapshot.  You can't delete it before this expires.</td>
              </tr>
              <tr>
                       <td>hp3par_username=</td>
                       <td>(StrOpt) 3PAR Super user username</td>
              </tr>
              <tr>
                       <td>iscsi_helper=tgtadm</td>
                       <td>(StrOpt) iscsi target user-land tool to use</td>
              </tr>
              <tr>
                       <td>iscsi_iotype=fileio</td>
                       <td>(StrOpt) Sets the behavior of the iSCSI target to either perform blockio or fileio optionally, auto can be set and Cinder will autodetect type of backing device</td>
              </tr>
              <tr>
                       <td>iscsi_ip_address=$my_ip</td>
                       <td>(StrOpt) The IP address that the iSCSI daemon is listening on</td>
              </tr>
              <tr>
                       <td>iscsi_num_targets=100</td>
                       <td>(IntOpt) The maximum number of iscsi target ids per host</td>
              </tr>
              <tr>
                       <td>iscsi_port=3260</td>
                       <td>(IntOpt) The port that the iSCSI daemon is listening on</td>
              </tr>
              <tr>
                       <td>iscsi_target_prefix=iqn.2010-10.org.openstack:</td>
                       <td>(StrOpt) prefix for iscsi volumes</td>
              </tr>
              <tr>
                       <td>iser_helper=tgtadm</td>
                       <td>(StrOpt) iser target user-land tool to use</td>
              </tr>
              <tr>
                       <td>iser_ip_address=$my_ip</td>
                       <td>(StrOpt) The IP address that the iSER daemon is listening on</td>
              </tr>
              <tr>
                       <td>iser_num_targets=100</td>
                       <td>(IntOpt) The maximum number of iser target ids per host</td>
              </tr>
              <tr>
                       <td>iser_port=3260</td>
                       <td>(IntOpt) The port that the iSER daemon is listening on</td>
              </tr>
              <tr>
                       <td>iser_target_prefix=iqn.2010-10.org.iser.openstack:</td>
                       <td>(StrOpt) prefix for iser volumes</td>
              </tr>
              <tr>
                       <td>keymgr_api_class=cinder.keymgr.not_implemented_key_mgr.NotImplementedKeyManager</td>
                       <td>(StrOpt) The full class name of the key manager API class</td>
              </tr>
              <tr>
                       <td>lvm_mirrors=0</td>
                       <td>(IntOpt) If set, create lvms with multiple mirrors. Note that this requires lvm_mirrors + 2 pvs with available space</td>
              </tr>
              <tr>
                       <td>lvm_type=default</td>
                       <td>(StrOpt) Type of LVM volumes to deploy; (default or thin)</td>
              </tr>
              <tr>
                       <td>max_age=0</td>
                       <td>(IntOpt) number of seconds between subsequent usage refreshes</td>
              </tr>
              <tr>
                       <td>max_gigabytes=10000</td>
                       <td>(IntOpt) maximum number of volume gigabytes to allow per host</td>
              </tr>
              <tr>
                       <td>max_overflow=None</td>
                       <td>(IntOpt) If set, use this value for max_overflow with sqlalchemy</td>
              </tr>
              <tr>
                       <td>max_pool_size=5</td>
                       <td>(IntOpt) Maximum number of SQL connections to keep open in a pool</td>
              </tr>
              <tr>
                       <td>max_retries=10</td>
                       <td>(IntOpt) maximum db connection retries during startup. (setting -1 implies an infinite retry count)</td>
              </tr>
              <tr>
                       <td>memcached_servers=None</td>
                       <td>(ListOpt) Memcached servers or None for in process cache.</td>
              </tr>
              <tr>
                       <td>migration_create_volume_timeout_secs=300</td>
                       <td>(IntOpt) Timeout for creating the volume to migrate to when performing volume migration (seconds)</td>
              </tr>
              <tr>
                       <td>min_pool_size=1</td>
                       <td>(IntOpt) Minimum number of SQL connections to keep open in a pool</td>
              </tr>
              <tr>
                       <td>netapp_password=None</td>
                       <td>(StrOpt) Password for the storage controller</td>
              </tr>
              <tr>
                       <td>netapp_server_hostname=None</td>
                       <td>(StrOpt) Host name for the storage controller</td>
              </tr>
              <tr>
                       <td>netapp_server_port=80</td>
                       <td>(IntOpt) Port number for the storage controller</td>
              </tr>
              <tr>
                       <td>netapp_size_multiplier=1.2</td>
                       <td>(FloatOpt) Volume size multiplier to ensure while creation</td>
              </tr>
              <tr>
                       <td>netapp_storage_family=ontap_cluster</td>
                       <td>(StrOpt) Storage family type.</td>
              </tr>
              <tr>
                       <td>netapp_storage_protocol=None</td>
                       <td>(StrOpt) Storage protocol type.</td>
              </tr>
              <tr>
                       <td>netapp_transport_type=http</td>
                       <td>(StrOpt) Transport type protocol</td>
              </tr>
              <tr>
                       <td>netapp_volume_list=None</td>
                       <td>(StrOpt) Comma separated volumes to be used for provisioning</td>
              </tr>
              <tr>
                       <td>netapp_vserver=None</td>
                       <td>(StrOpt) Cluster vserver to use for provisioning</td>
              </tr>
              <tr>
                       <td>num_iser_scan_tries=3</td>
                       <td>(IntOpt) The maximum number of times to rescan iSER targetto find volume</td>
              </tr>
              <tr>
                       <td>num_volume_device_scan_tries=3</td>
                       <td>(IntOpt) The maximum number of times to rescan targetsto find volume</td>
              </tr>
              <tr>
                       <td>san_clustername=</td>
                       <td>(StrOpt) Cluster name to use for creating volumes</td>
              </tr>
              <tr>
                       <td>san_ip=</td>
                       <td>(StrOpt) IP address of SAN controller</td>
              </tr>
              <tr>
                       <td>san_is_local=False</td>
                       <td>(BoolOpt) Execute commands locally instead of over SSH; use if the volume service is running on the SAN device</td>
              </tr>
              <tr>
                       <td>san_login=admin</td>
                       <td>(StrOpt) Username for SAN controller</td>
              </tr>
              <tr>
                       <td>san_password=</td>
                       <td>(StrOpt) Password for SAN controller</td>
              </tr>
              <tr>
                       <td>san_private_key=</td>
                       <td>(StrOpt) Filename of private key to use for SSH authentication</td>
              </tr>
              <tr>
                       <td>san_ssh_port=22</td>
                       <td>(IntOpt) SSH port to use with SAN</td>
              </tr>
              <tr>
                       <td>san_thin_provision=True</td>
                       <td>(BoolOpt) Use thin provisioning for SAN volumes?</td>
              </tr>
              <tr>
                       <td>san_zfs_volume_base=rpool/</td>
                       <td>(StrOpt) The ZFS path under which to create zvols for volumes.</td>
              </tr>
              <tr>
                       <td>scality_sofs_config=None</td>
                       <td>(StrOpt) Path or URL to Scality SOFS configuration file</td>
              </tr>
              <tr>
                       <td>scality_sofs_mount_point=$state_path/scality</td>
                       <td>(StrOpt) Base dir where Scality SOFS shall be mounted</td>
              </tr>
              <tr>
                       <td>scality_sofs_volume_dir=cinder/volumes</td>
                       <td>(StrOpt) Path from Scality SOFS root to volume dir</td>
              </tr>
              <tr>
                       <td>sf_account_prefix=autodoc</td>
                       <td>(StrOpt) Create SolidFire accounts with this prefix</td>
              </tr>
              <tr>
                       <td>sf_allow_tenant_qos=False</td>
                       <td>(BoolOpt) Allow tenants to specify QOS on create</td>
              </tr>
              <tr>
                       <td>sf_api_port=443</td>
                       <td>(IntOpt) SolidFire API port. Useful if the device api is behind a proxy on a different port.</td>
              </tr>
              <tr>
                       <td>sf_emulate_512=True</td>
                       <td>(BoolOpt) Set 512 byte emulation on volume creation; </td>
              </tr>
              <tr>
                       <td>storwize_svc_connection_protocol=iSCSI</td>
                       <td>(StrOpt) Connection protocol (iSCSI/FC)</td>
              </tr>
              <tr>
                       <td>storwize_svc_flashcopy_timeout=120</td>
                       <td>(IntOpt) Maximum number of seconds to wait for FlashCopy to be prepared. Maximum value is 600 seconds (10 minutes)</td>
              </tr>
              <tr>
                       <td>storwize_svc_multihostmap_enabled=True</td>
                       <td>(BoolOpt) Allows vdisk to multi host mapping</td>
              </tr>
              <tr>
                       <td>storwize_svc_multipath_enabled=False</td>
                       <td>(BoolOpt) Connect with multipath (FC only; iSCSI multipath is controlled by Nova)</td>
              </tr>
              <tr>
                       <td>storwize_svc_vol_autoexpand=True</td>
                       <td>(BoolOpt) Storage system autoexpand parameter for volumes (True/False)</td>
              </tr>
              <tr>
                       <td>storwize_svc_vol_compression=False</td>
                       <td>(BoolOpt) Storage system compression option for volumes</td>
              </tr>
              <tr>
                       <td>storwize_svc_vol_easytier=True</td>
                       <td>(BoolOpt) Enable Easy Tier for volumes</td>
              </tr>
              <tr>
                       <td>storwize_svc_vol_grainsize=256</td>
                       <td>(IntOpt) Storage system grain size parameter for volumes (32/64/128/256)</td>
              </tr>
              <tr>
                       <td>storwize_svc_vol_iogrp=0</td>
                       <td>(IntOpt) The I/O group in which to allocate volumes</td>
              </tr>
              <tr>
                       <td>storwize_svc_vol_rsize=2</td>
                       <td>(IntOpt) Storage system space-efficiency parameter for volumes (percentage)</td>
              </tr>
              <tr>
                       <td>storwize_svc_vol_warning=0</td>
                       <td>(IntOpt) Storage system threshold for volume capacity warnings (percentage)</td>
              </tr>
              <tr>
                       <td>storwize_svc_volpool_name=volpool</td>
                       <td>(StrOpt) Storage system storage pool for volumes</td>
              </tr>
              <tr>
                       <td>thres_avl_size_perc_start=20</td>
                       <td>(IntOpt) Threshold available percent to start cache cleaning.</td>
              </tr>
              <tr>
                       <td>thres_avl_size_perc_stop=60</td>
                       <td>(IntOpt) Threshold available percent to stop cache cleaning.</td>
              </tr>
              <tr>
                       <td>volume_backend_name=None</td>
                       <td>(StrOpt) The backend name for a given driver implementation</td>
              </tr>
              <tr>
                       <td>volume_clear=zero</td>
                       <td>(StrOpt) Method used to wipe old voumes (valid options are: none, zero, shred)</td>
              </tr>
              <tr>
                       <td>volume_clear_size=0</td>
                       <td>(IntOpt) Size in MiB to wipe at start of old volumes. 0 =&gt; all</td>
              </tr>
              <tr>
                       <td>volume_dd_blocksize=1M</td>
                       <td>(StrOpt) The default block size used when copying/clearing volumes</td>
              </tr>
              <tr>
                       <td>volume_driver=cinder.volume.drivers.lvm.LVMISCSIDriver</td>
                       <td>(StrOpt) Driver to use for volume creation</td>
              </tr>
              <tr>
                       <td>volume_group=cinder-volumes</td>
                       <td>(StrOpt) Name for the VG that will contain exported volumes</td>
              </tr>
              <tr>
                       <td>volume_manager=cinder.volume.manager.VolumeManager</td>
                       <td>(StrOpt) full class name for the Manager for volume</td>
              </tr>
              <tr>
                       <td>volume_name_template=volume-%s</td>
                       <td>(StrOpt) Template string to be used to generate volume names</td>
              </tr>
              <tr>
                       <td>volume_topic=cinder-volume</td>
                       <td>(StrOpt) the topic volume nodes listen on</td>
              </tr>
              <tr>
                       <td>volume_transfer_key_length=16</td>
                       <td>(IntOpt) The number of characters in the autogenerated auth key.</td>
              </tr>
              <tr>
                       <td>volume_transfer_salt_length=8</td>
                       <td>(IntOpt) The number of characters in the salt.</td>
              </tr>
              <tr>
                       <td>volume_usage_audit_period=month</td>
                       <td>(StrOpt) time period to generate volume usages for.  Time period must be hour, day, month or year</td>
              </tr>
              <tr>
                       <td>volumes_dir=$state_path/volumes</td>
                       <td>(StrOpt) Volume configuration file storage directory</td>
              </tr>
              <tr>
                       <td>windows_iscsi_lun_path=C:\iSCSIVirtualDisks</td>
                       <td>(StrOpt) Path to store VHD backed volumes</td>
              </tr>
              <tr>
                       <td>xiv_ds8k_connection_type=iscsi</td>
                       <td>(StrOpt) Connection type to the IBM Storage Array (fibre_channel|iscsi)</td>
              </tr>
              <tr>
                       <td>xiv_ds8k_proxy=xiv_ds8k_openstack.nova_proxy.XIVDS8KNovaProxy</td>
                       <td>(StrOpt) Proxy driver that connects to the IBM Storage Array</td>
              </tr>
              <tr>
                       <td>zadara_default_stripesize=64</td>
                       <td>(StrOpt) Default stripe size for volumes</td>
              </tr>
              <tr>
                       <td>zadara_default_striping_mode=simple</td>
                       <td>(StrOpt) Default striping mode for volumes</td>
              </tr>
              <tr>
                       <td>zadara_password=None</td>
                       <td>(StrOpt) Password for the VPSA</td>
              </tr>
              <tr>
                       <td>zadara_user=None</td>
                       <td>(StrOpt) User name for the VPSA</td>
              </tr>
              <tr>
                       <td>zadara_vol_encrypt=False</td>
                       <td>(BoolOpt) Default encryption policy for volumes</td>
              </tr>
              <tr>
                       <td>zadara_vol_name_template=OS_%s</td>
                       <td>(StrOpt) Default template for VPSA volume names</td>
              </tr>
              <tr>
                       <td>zadara_vol_thin=True</td>
                       <td>(BoolOpt) Default thin provisioning policy for volumes</td>
              </tr>
              <tr>
                       <td>zadara_vpsa_allow_nonexistent_delete=True</td>
                       <td>(BoolOpt) Don't halt on deletion of non-existing volumes</td>
              </tr>
              <tr>
                       <td>zadara_vpsa_auto_detach_on_delete=True</td>
                       <td>(BoolOpt) Automatically detach from servers on volume delete</td>
              </tr>
              <tr>
                       <td>zadara_vpsa_ip=None</td>
                       <td>(StrOpt) Management IP of Zadara VPSA</td>
              </tr>
              <tr>
                       <td>zadara_vpsa_poolname=None</td>
                       <td>(StrOpt) Name of VPSA storage pool for volumes</td>
              </tr>
              <tr>
                       <td>zadara_vpsa_port=None</td>
                       <td>(StrOpt) Zadara VPSA port number</td>
              </tr>
              <tr>
                       <td>zadara_vpsa_use_ssl=False</td>
                       <td>(BoolOpt) Use SSL connection</td>
              </tr>
       </tbody>
        </table>
        </para>