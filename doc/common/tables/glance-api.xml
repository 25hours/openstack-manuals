<?xml version="1.0" encoding="UTF-8"?>
        <!-- Warning: Do not edit this file. It is automatically
             generated and your changes will be overwritten.
             The tool to do so lives in the tools directory of this
             repository -->
        <para xmlns="http://docbook.org/ns/docbook" version="5.0">
        <table rules="all">
          <caption>Description of configuration options for api</caption>
           <col width="50%"/>
           <col width="50%"/>
           <thead>
              <tr>
                  <th>Configuration option = Default value</th>
                  <th>Description</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <th colspan="2">[DEFAULT]</th>
              </tr>
              <tr>
                       <td>admin_role = admin</td>
                       <td>(StrOpt) Role used to identify an authenticated user as administrator.</td>
              </tr>
              <tr>
                       <td>allow_anonymous_access = False</td>
                       <td>(BoolOpt) Allow unauthenticated users to access the API with read-only privileges. This only applies when using ContextMiddleware.</td>
              </tr>
              <tr>
                       <td>default_publisher_id = image.localhost</td>
                       <td>(StrOpt) Default publisher_id for outgoing notifications</td>
              </tr>
              <tr>
                       <td>default_store = file</td>
                       <td>(StrOpt) Default scheme to use to store image data. The scheme must be registered by one of the stores defined by the 'known_stores' config option.</td>
              </tr>
              <tr>
                       <td>enable_v1_api = True</td>
                       <td>(BoolOpt) Deploy the v1 OpenStack Images API.</td>
              </tr>
              <tr>
                       <td>enable_v2_api = True</td>
                       <td>(BoolOpt) Deploy the v2 OpenStack Images API.</td>
              </tr>
              <tr>
                       <td>image_size_cap = 1099511627776</td>
                       <td>(IntOpt) Maximum size of image a user can upload in bytes. Defaults to 1099511627776 bytes (1 TB).</td>
              </tr>
              <tr>
                       <td>known_stores = glance.store.filesystem.Store, glance.store.http.Store, glance.store.rbd.Store, glance.store.s3.Store, glance.store.swift.Store, glance.store.sheepdog.Store, glance.store.cinder.Store</td>
                       <td>(ListOpt) List of which store classes and store class locations are currently known to glance at startup.</td>
              </tr>
              <tr>
                       <td>owner_is_tenant = True</td>
                       <td>(BoolOpt) When true, this option sets the owner of an image to be the tenant. Otherwise, the owner of the  image will be the authenticated user issuing the request.</td>
              </tr>
              <tr>
                       <td>send_identity_headers = False</td>
                       <td>(BoolOpt) Whether to pass through headers containing user and tenant information when making requests to the registry. This allows the registry to use the context middleware without the keystoneclients' auth_token middleware, removing calls to the keystone auth service. It is recommended that when using this option, secure communication between glance api and glance registry is ensured by means other than auth_token middleware.</td>
              </tr>
              <tr>
                       <td>show_multiple_locations = False</td>
                       <td>(BoolOpt) Whether to include the backend image locations in image properties. Revealing storage location can be a security risk, so use this setting with caution!  The overrides show_image_direct_url.</td>
              </tr>
              <tr>
                       <td>use_user_token = True</td>
                       <td>(BoolOpt) Whether to pass through the user token when making requests to the registry.</td>
              </tr>
       </tbody>
        </table>
        </para>
