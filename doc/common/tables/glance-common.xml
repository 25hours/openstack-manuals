<?xml version="1.0" encoding="UTF-8"?>
        <!-- Warning: Do not edit this file. It is automatically
             generated and your changes will be overwritten.
             The tool to do so lives in the tools directory of this
             repository -->
        <para xmlns="http://docbook.org/ns/docbook" version="5.0">
        <table rules="all" xml:id="config_table_glance_common">
          <caption>Description of configuration options for common</caption>
           <col width="50%"/>
           <col width="50%"/>
           <thead>
              <tr>
                  <th>Configuration option = Default value</th>
                  <th>Description</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <th colspan="2">[DEFAULT]</th>
              </tr>
              <tr>
                       <td>allow_additional_image_properties = True</td>
                       <td>(BoolOpt) Whether to allow users to specify image properties beyond what the image schema provides</td>
              </tr>
              <tr>
                       <td>api_limit_max = 1000</td>
                       <td>(IntOpt) Maximum permissible number of items that could be returned by a request</td>
              </tr>
              <tr>
                       <td>backlog = 4096</td>
                       <td>(IntOpt) The backlog value that will be used when creating the TCP listener socket.</td>
              </tr>
              <tr>
                       <td>bind_host = 0.0.0.0</td>
                       <td>(StrOpt) Address to bind the server.  Useful when selecting a particular network interface.</td>
              </tr>
              <tr>
                       <td>bind_port = None</td>
                       <td>(IntOpt) The port on which the server will listen.</td>
              </tr>
              <tr>
                       <td>data_api = glance.db.sqlalchemy.api</td>
                       <td>(StrOpt) Python module path of data access API</td>
              </tr>
              <tr>
                       <td>disable_process_locking = False</td>
                       <td>(BoolOpt) Whether to disable inter-process locks</td>
              </tr>
              <tr>
                       <td>image_location_quota = 10</td>
                       <td>(IntOpt) Maximum number of locations allowed on an image. Negative values evaluate to unlimited.</td>
              </tr>
              <tr>
                       <td>image_member_quota = 128</td>
                       <td>(IntOpt) Maximum number of image members per image. Negative values evaluate to unlimited.</td>
              </tr>
              <tr>
                       <td>image_property_quota = 128</td>
                       <td>(IntOpt) Maximum number of properties allowed on an image. Negative values evaluate to unlimited.</td>
              </tr>
              <tr>
                       <td>image_tag_quota = 128</td>
                       <td>(IntOpt) Maximum number of tags allowed on an image. Negative values evaluate to unlimited.</td>
              </tr>
              <tr>
                       <td>limit_param_default = 25</td>
                       <td>(IntOpt) Default value for the number of items returned by a request if not specified explicitly in the request</td>
              </tr>
              <tr>
                       <td>lock_path = None</td>
                       <td>(StrOpt) Directory to use for lock files.</td>
              </tr>
              <tr>
                       <td>metadata_encryption_key = None</td>
                       <td>(StrOpt) Key used for encrypting sensitive metadata while talking to the registry or database.</td>
              </tr>
              <tr>
                       <td>notifier_strategy = default</td>
                       <td>(StrOpt) Notifications can be sent when images are create, updated or deleted. There are three methods of sending notifications, logging (via the log_file directive), rabbit (via a rabbitmq queue), qpid (via a Qpid message queue), or noop (no notifications sent, the default). (DEPRECATED)</td>
              </tr>
              <tr>
                       <td>os_region_name = None</td>
                       <td>(StrOpt) Region name of this node.</td>
              </tr>
              <tr>
                       <td>property_protection_file = None</td>
                       <td>(StrOpt) The location of the property protection file.</td>
              </tr>
              <tr>
                       <td>property_protection_rule_format = roles</td>
                       <td>(StrOpt) This config value indicates whether "roles" or "policies" are used in the property protection file.</td>
              </tr>
              <tr>
                       <td>show_image_direct_url = False</td>
                       <td>(BoolOpt) Whether to include the backend image storage location in image properties. Revealing storage location can be a security risk, so use this setting with caution!</td>
              </tr>
              <tr>
                       <td>user_storage_quota = 0</td>
                       <td>(IntOpt) Set a system wide quota for every user.  This value is the total number of bytes that a user can use across all storage systems.  A value of 0 means unlimited.</td>
              </tr>
              <tr>
                       <td>workers = 1</td>
                       <td>(IntOpt) The number of child process workers that will be created to service API requests.</td>
              </tr>
              <tr>
                  <th colspan="2">[image_format]</th>
              </tr>
              <tr>
                       <td>container_formats = ami, ari, aki, bare, ovf, ova</td>
                       <td>(ListOpt) Supported values for the 'container_format' image attribute</td>
              </tr>
              <tr>
                       <td>disk_formats = ami, ari, aki, vhd, vmdk, raw, qcow2, vdi, iso</td>
                       <td>(ListOpt) Supported values for the 'disk_format' image attribute</td>
              </tr>
              <tr>
                  <th colspan="2">[task]</th>
              </tr>
              <tr>
                       <td>task_time_to_live = 48</td>
                       <td>(IntOpt) Time in hours for which a task lives after, either succeeding or failing</td>
              </tr>
       </tbody>
        </table>
        </para>
