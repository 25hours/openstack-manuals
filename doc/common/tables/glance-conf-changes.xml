<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glance-conf-changes-kilo">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Kilo for OpenStack Image Service</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] available_plugins = </td>
      <td>(ListOpt) A list of artifacts that are allowed in the format name or name-version. Empty list means that any artifact can be loaded.</td>
    </tr>
    <tr>
      <td>[DEFAULT] backdoor_port = None</td>
      <td>(StrOpt) Enable eventlet backdoor.  Acceptable values are 0, &lt;port&gt;, and &lt;start&gt;:&lt;end&gt;, where 0 results in listening on a random tcp port number; &lt;port&gt; results in listening on the specified port number (and not enabling backdoor if that port is in use); and &lt;start&gt;:&lt;end&gt; results in listening on the smallest unused port number within the specified range of port numbers.  The chosen port is displayed in the service's log file.</td>
    </tr>
    <tr>
      <td>[DEFAULT] digest_algorithm = sha1</td>
      <td>(StrOpt) Digest algorithm which will be used for digital signature; the default is sha1 the default in Kilo for a smooth upgrade process, and it will be updated with sha256 in next release(L). Use the command "openssl list-message-digest-algorithms" to get the available algorithms supported by the version of OpenSSL on the platform. Examples are "sha1", "sha256", "sha512", etc.</td>
    </tr>
    <tr>
      <td>[DEFAULT] disabled_notifications = </td>
      <td>(ListOpt) List of disabled notifications. A notification can be given either as a notification type to disable a single event, or as a notification group prefix to disable all events within a group. Example: if this config option is set to ["image.create", "metadef_namespace"], then "image.create" notification will not be sent after image is created and none of the notifications for metadefinition namespaces will be sent.</td>
    </tr>
    <tr>
      <td>[DEFAULT] host = localhost</td>
      <td>(StrOpt) Name of this node, which must be valid in an AMQP key. Can be an opaque identifier. For ZeroMQ only, must be a valid host name, FQDN, or IP address.</td>
    </tr>
    <tr>
      <td>[DEFAULT] http_keepalive = True</td>
      <td>(BoolOpt) If False, server will return the header "Connection: close", If True, server will return "Connection: Keep-Alive" in its responses. In order to close the client socket connection explicitly after the response is sent and read successfully by the client, you simply have to set this option to False when you create a wsgi server.</td>
    </tr>
    <tr>
      <td>[DEFAULT] http_timeout = 600</td>
      <td>(IntOpt) Timeout seconds for HTTP requests. Set it to None to disable timeout.</td>
    </tr>
    <tr>
      <td>[DEFAULT] listener_workers = 1</td>
      <td>(IntOpt) Number of workers for notification service. A single notification agent is enabled by default.</td>
    </tr>
    <tr>
      <td>[DEFAULT] load_enabled = True</td>
      <td>(BoolOpt) When false, no artifacts can be loaded regardless of available_plugins. When true, artifacts can be loaded.</td>
    </tr>
    <tr>
      <td>[DEFAULT] public_endpoint = None</td>
      <td>(StrOpt) Public url to use for versions endpoint. The default is None, which will use the request's host_url attribute to populate the URL base. If Glance is operating behind a proxy, you will want to change this to represent the proxy's URL.</td>
    </tr>
    <tr>
      <td>[elasticsearch] hosts = 127.0.0.1:9200</td>
      <td>(ListOpt) List of nodes where Elasticsearch instances are running. A single node should be defined as an IP address and port number.</td>
    </tr>
    <tr>
      <td>[glance_store] store_capabilities_update_min_interval = 0</td>
      <td>(IntOpt) Minimum interval seconds to execute updating dynamic storage capabilities based on backend status then. It's not a periodic routine, the update logic will be executed only when interval seconds elapsed and an operation of store has triggered. The feature will be enabled only when the option value greater then zero.</td>
    </tr>
    <tr>
      <td>[glance_store] swift_store_cacert = None</td>
      <td>(StrOpt) A string giving the CA certificate file to use in SSL connections for verifying certs.</td>
    </tr>
    <tr>
      <td>[glance_store] swift_store_endpoint = None</td>
      <td>(StrOpt) If set, the configured endpoint will be used. If None, the storage url from the auth response will be used.</td>
    </tr>
    <tr>
      <td>[glance_store] swift_store_multiple_containers_seed = 0</td>
      <td>(IntOpt) When set to 0, a single-tenant store will only use one container to store all images. When set to an integer value between 1 and 32, a single-tenant store will use multiple containers to store images, and this value will determine how many containers are created.Used only when swift_store_multi_tenant is disabled. The total number of containers that will be used is equal to 16^N, so if this config option is set to 2, then 16^2=256 containers will be used to store images.</td>
    </tr>
    <tr>
      <td>[glance_store] vmware_datastores = None</td>
      <td>(MultiStrOpt) A list of datastores where the image can be stored. This option may be specified multiple times for specifying multiple datastores. Either one of vmware_datastore_name or vmware_datastores is required. The datastore name should be specified after its datacenter path, seperated by ":". An optional weight may be given after the datastore name, seperated again by ":". Thus, the required format becomes &lt;datacenter_path&gt;:&lt;datastore_name&gt;:&lt;optional_weight&gt;. When adding an image, the datastore with highest weight will be selected, unless there is not enough free space available in cases where the image size is already known. If no weight is given, it is assumed to be zero and the directory will be considered for selection last. If multiple datastores have the same weight, then the one with the most free space available is selected.</td>
    </tr>
    <tr>
      <td>[oslo_concurrency] disable_process_locking = False</td>
      <td>(BoolOpt) Enables or disables inter-process locks.</td>
    </tr>
    <tr>
      <td>[oslo_concurrency] lock_path = None</td>
      <td>(StrOpt) Directory to use for lock files.  For security, the specified directory should only be writable by the user running the processes that need locking. Defaults to environment variable OSLO_LOCK_PATH. If external locks are used, a lock path must be set.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] allow_insecure_clients = False</td>
      <td>(BoolOpt) Accept clients using either SSL or plain TCP</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] broadcast_prefix = broadcast</td>
      <td>(StrOpt) address prefix used when broadcasting to all servers</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] container_name = None</td>
      <td>(StrOpt) Name for the AMQP container</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] group_request_prefix = unicast</td>
      <td>(StrOpt) address prefix when sending to any server in group</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] idle_timeout = 0</td>
      <td>(IntOpt) Timeout for inactive connections (in seconds)</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] server_request_prefix = exclusive</td>
      <td>(StrOpt) address prefix used when sending to a specific server</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_ca_file = </td>
      <td>(StrOpt) CA certificate PEM file for verifing server certificate</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_cert_file = </td>
      <td>(StrOpt) Identifying certificate PEM file to present to clients</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_key_file = </td>
      <td>(StrOpt) Private key PEM file used to sign cert_file certificate</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_key_password = None</td>
      <td>(StrOpt) Password for decrypting ssl_key_file (if encrypted)</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] trace = False</td>
      <td>(BoolOpt) Debug: dump AMQP frames to stdout</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] amqp_auto_delete = False</td>
      <td>(BoolOpt) Auto-delete queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] amqp_durable_queues = False</td>
      <td>(BoolOpt) Use durable queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_heartbeat = 60</td>
      <td>(IntOpt) Seconds between connection keepalive heartbeats.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_hostname = localhost</td>
      <td>(StrOpt) Qpid broker hostname.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_hosts = $qpid_hostname:$qpid_port</td>
      <td>(ListOpt) Qpid HA cluster host:port pairs.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_password = </td>
      <td>(StrOpt) Password for Qpid connection.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_port = 5672</td>
      <td>(IntOpt) Qpid broker port.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_protocol = tcp</td>
      <td>(StrOpt) Transport to use, either 'tcp' or 'ssl'.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_receiver_capacity = 1</td>
      <td>(IntOpt) The number of prefetched messages held by receiver.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_sasl_mechanisms = </td>
      <td>(StrOpt) Space separated list of SASL mechanisms to use for auth.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_tcp_nodelay = True</td>
      <td>(BoolOpt) Whether to disable the Nagle algorithm.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_topology_version = 1</td>
      <td>(IntOpt) The qpid topology version to use.  Version 1 is what was originally used by impl_qpid.  Version 2 includes some backwards-incompatible changes that allow broker federation to work.  Users should update to version 2 when they are able to take everything down, as it requires a clean break.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_username = </td>
      <td>(StrOpt) Username for Qpid connection.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] amqp_auto_delete = False</td>
      <td>(BoolOpt) Auto-delete queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] amqp_durable_queues = False</td>
      <td>(BoolOpt) Use durable queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] fake_rabbit = False</td>
      <td>(BoolOpt) Deprecated, use rpc_backend=kombu+memory or rpc_backend=fake</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] heartbeat_rate = 2</td>
      <td>(IntOpt) How often times during the heartbeat_timeout_threshold we check the heartbeat.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] heartbeat_timeout_threshold = 60</td>
      <td>(IntOpt) Number of seconds after which the Rabbit broker is considered down if heartbeat's keep-alive fails (0 disable the heartbeat).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_reconnect_delay = 1.0</td>
      <td>(FloatOpt) How long to wait before reconnecting in response to an AMQP consumer cancel notification.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_ca_certs = </td>
      <td>(StrOpt) SSL certification authority file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_certfile = </td>
      <td>(StrOpt) SSL cert file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_keyfile = </td>
      <td>(StrOpt) SSL key file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_version = </td>
      <td>(StrOpt) SSL version to use (valid only if SSL enabled). Valid values are TLSv1 and SSLv23. SSLv2, SSLv3, TLSv1_1, and TLSv1_2 may be available on some distributions.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_ha_queues = False</td>
      <td>(BoolOpt) Use HA queues in RabbitMQ (x-ha-policy: all). If you change this option, you must wipe the RabbitMQ database.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_host = localhost</td>
      <td>(StrOpt) The RabbitMQ broker address where a single node is used.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_hosts = $rabbit_host:$rabbit_port</td>
      <td>(ListOpt) RabbitMQ HA cluster host:port pairs.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_login_method = AMQPLAIN</td>
      <td>(StrOpt) The RabbitMQ login method.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_max_retries = 0</td>
      <td>(IntOpt) Maximum number of RabbitMQ connection retries. Default is 0 (infinite retry count).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_password = guest</td>
      <td>(StrOpt) The RabbitMQ password.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_port = 5672</td>
      <td>(IntOpt) The RabbitMQ broker port where a single node is used.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_retry_backoff = 2</td>
      <td>(IntOpt) How long to backoff for between retries when connecting to RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_retry_interval = 1</td>
      <td>(IntOpt) How frequently to retry connecting with RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_use_ssl = False</td>
      <td>(BoolOpt) Connect over SSL for RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_userid = guest</td>
      <td>(StrOpt) The RabbitMQ userid.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_virtual_host = /</td>
      <td>(StrOpt) The RabbitMQ virtual host.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[oslo_policy] policy_default_rule = default</td>
      <td>(StrOpt) Default rule. Enforced when a requested rule is not found.</td>
    </tr>
    <tr>
      <td>[oslo_policy] policy_dirs = ['policy.d']</td>
      <td>(MultiStrOpt) Directories where policy configuration files are stored. They can be relative to any directory in the search path defined by the config_dir option, or absolute paths. The file defined by policy_file must exist for these directories to be searched.  Missing or empty directories are ignored.</td>
    </tr>
    <tr>
      <td>[oslo_policy] policy_file = policy.json</td>
      <td>(StrOpt) The JSON file that defines policies.</td>
    </tr>
    <tr>
      <td>[service_credentials] insecure = False</td>
      <td>(BoolOpt) Disables X.509 certificate validation when an SSL connection to Identity Service is established.</td>
    </tr>
    <tr>
      <td>[service_credentials] os_auth_url = http://localhost:5000/v2.0</td>
      <td>(StrOpt) Auth URL to use for OpenStack service access.</td>
    </tr>
    <tr>
      <td>[service_credentials] os_cacert = None</td>
      <td>(StrOpt) Certificate chain for SSL validation.</td>
    </tr>
    <tr>
      <td>[service_credentials] os_endpoint_type = publicURL</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with OpenStack services.</td>
    </tr>
    <tr>
      <td>[service_credentials] os_password = admin</td>
      <td>(StrOpt) Password to use for OpenStack service access.</td>
    </tr>
    <tr>
      <td>[service_credentials] os_region_name = None</td>
      <td>(StrOpt) Region name to use for OpenStack service endpoints.</td>
    </tr>
    <tr>
      <td>[service_credentials] os_tenant_id = </td>
      <td>(StrOpt) Tenant ID to use for OpenStack service access.</td>
    </tr>
    <tr>
      <td>[service_credentials] os_tenant_name = admin</td>
      <td>(StrOpt) Tenant name to use for OpenStack service access.</td>
    </tr>
    <tr>
      <td>[service_credentials] os_username = glance</td>
      <td>(StrOpt) User name to use for OpenStack service access.</td>
    </tr>
    <tr>
      <td>[task] work_dir = None</td>
      <td>(StrOpt) Work dir for asynchronous task operations. The directory set here will be used to operate over images - normally before they are imported in the destination store. When providing work dir, make sure enough space is provided for concurrent tasks to run efficiently without running out of space. A rough estimation can be done by multiplying the number of `max_workers` - or the N of workers running - by an average image size (e.g 500MB). The image size estimation should be done based on the average size in your deployment. Note that depending on the tasks running you may need to multiply this number by some factor depending on what the task does. For example, you may want to double the available size if image conversion is enabled. All this being said, remember these are just estimations and you should do them based on the worst case scenario and be prepared to act in case they were wrong.</td>
    </tr>
    <tr>
      <td>[taskflow_executor] conversion_format = None</td>
      <td>(StrOpt) The format to which images will be automatically converted. Can be 'qcow2' or 'raw'.</td>
    </tr>
    <tr>
      <td>[taskflow_executor] engine_mode = parallel</td>
      <td>(StrOpt) The mode in which the engine will run. Can be 'serial' or 'parallel'.</td>
    </tr>
    <tr>
      <td>[taskflow_executor] max_workers = 10</td>
      <td>(IntOpt) The number of parallel activities executed at the same time by the engine. The value can be greater than one when the engine mode is 'parallel'.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] rpc_zmq_matchmaker</td>
      <td>oslo.messaging._drivers.matchmaker.MatchMakerLocalhost</td>
      <td>oslo_messaging._drivers.matchmaker.MatchMakerLocalhost</td>
    </tr>
    <tr>
      <td>[task] task_executor</td>
      <td>eventlet</td>
      <td>taskflow</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[task] eventlet_executor_pool_size</td>
      <td>[taskflow_executor] max_workers</td>
    </tr>
  </table>
</section>
