<?xml version="1.0" encoding="UTF-8"?>
        <!-- Warning: Do not edit this file. It is automatically
             generated and your changes will be overwritten.
             The tool to do so lives in the tools directory of this
             repository -->
        <para xmlns="http://docbook.org/ns/docbook" version="5.0">
        <table rules="all">
          <caption>Description of configuration options for logging</caption>
           <col width="50%"/>
           <col width="50%"/>
           <thead>
              <tr>
                  <td>Configuration option=Default value</td>
                  <td>Description</td>
              </tr>
          </thead>
          <tbody>
              <tr>
                       <td>debug=False</td>
                       <td>(BoolOpt) Print debugging output (set logging level to DEBUG instead of default WARNING level).</td>
              </tr>
              <tr>
                       <td>default_log_levels=amqplib=WARN,sqlalchemy=WARN,boto=WARN,suds=INFO,keystone=INFO,eventlet.wsgi.server=WARN</td>
                       <td>(ListOpt) list of logger=LEVEL pairs</td>
              </tr>
              <tr>
                       <td>default_notification_level=INFO</td>
                       <td>(StrOpt) Default notification level for outgoing notifications</td>
              </tr>
              <tr>
                       <td>fatal_deprecations=False</td>
                       <td>(BoolOpt) make deprecations fatal</td>
              </tr>
              <tr>
                       <td>instance_format=[instance: %(uuid)s] </td>
                       <td>(StrOpt) If an instance is passed with the log message, format it like this</td>
              </tr>
              <tr>
                       <td>instance_uuid_format=[instance: %(uuid)s] </td>
                       <td>(StrOpt) If an instance UUID is passed with the log message, format it like this</td>
              </tr>
              <tr>
                       <td>log_config=None</td>
                       <td>(StrOpt) If this option is specified, the logging configuration file specified is used and overrides any other logging options specified. Please see the Python logging module documentation for details on logging configuration files.</td>
              </tr>
              <tr>
                       <td>log_date_format=%Y-%m-%d %H:%M:%S</td>
                       <td>(StrOpt) Format string for %%(asctime)s in log records. Default: %(default)s</td>
              </tr>
              <tr>
                       <td>log_dir=None</td>
                       <td>(StrOpt) (Optional) The base directory used for relative --log-file paths</td>
              </tr>
              <tr>
                       <td>log_file=None</td>
                       <td>(StrOpt) (Optional) Name of log file to output to. If no default is set, logging will go to stdout.</td>
              </tr>
              <tr>
                       <td>log_format=None</td>
                       <td>(StrOpt) A logging.Formatter log message format string which may use any of the available logging.LogRecord attributes. This option is deprecated.  Please use logging_context_format_string and logging_default_format_string instead.</td>
              </tr>
              <tr>
                       <td>logging_context_format_string=%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user)s %(tenant)s] %(instance)s%(message)s</td>
                       <td>(StrOpt) format string to use for log messages with context</td>
              </tr>
              <tr>
                       <td>logging_debug_format_suffix=%(funcName)s %(pathname)s:%(lineno)d</td>
                       <td>(StrOpt) data to append to log format when level is DEBUG</td>
              </tr>
              <tr>
                       <td>logging_default_format_string=%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s</td>
                       <td>(StrOpt) format string to use for log messages without context</td>
              </tr>
              <tr>
                       <td>logging_exception_prefix=%(asctime)s.%(msecs)03d %(process)d TRACE %(name)s %(instance)s</td>
                       <td>(StrOpt) prefix each line of exception output with this format</td>
              </tr>
              <tr>
                       <td>publish_errors=False</td>
                       <td>(BoolOpt) publish error events</td>
              </tr>
              <tr>
                       <td>syslog_log_facility=LOG_USER</td>
                       <td>(StrOpt) syslog facility to receive log lines</td>
              </tr>
              <tr>
                       <td>use_stderr=True</td>
                       <td>(BoolOpt) Log output to standard error</td>
              </tr>
              <tr>
                       <td>use_syslog=False</td>
                       <td>(BoolOpt) Use syslog for logging.</td>
              </tr>
              <tr>
                       <td>verbose=False</td>
                       <td>(BoolOpt) Print more verbose output (set logging level to INFO instead of default WARNING level).</td>
              </tr>
       </tbody>
        </table>
        </para>