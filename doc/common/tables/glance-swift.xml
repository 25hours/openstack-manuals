<?xml version='1.0' encoding='UTF-8'?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_glance_swift">
    <caption>Description of configuration options for swift</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td>swift_enable_snet = False</td>
        <td>(BoolOpt) Whether to use ServiceNET to communicate with the Swift storage servers.</td>
      </tr>
      <tr>
        <td>swift_store_admin_tenants = </td>
        <td>(ListOpt) A list of tenants that will be granted read/write access on all Swift containers created by Glance in multi-tenant mode.</td>
      </tr>
      <tr>
        <td>swift_store_auth_address = None</td>
        <td>(StrOpt) The address where the Swift authentication service is listening.(deprecated)</td>
      </tr>
      <tr>
        <td>swift_store_auth_insecure = False</td>
        <td>(BoolOpt) If True, swiftclient won't check for a valid SSL certificate when authenticating.</td>
      </tr>
      <tr>
        <td>swift_store_auth_version = 2</td>
        <td>(StrOpt) Version of the authentication service to use. Valid versions are 2 for keystone and 1 for swauth and rackspace. (deprecated)</td>
      </tr>
      <tr>
        <td>swift_store_config_file = None</td>
        <td>(StrOpt) The config file that has the swift account(s)configs.</td>
      </tr>
      <tr>
        <td>swift_store_container = glance</td>
        <td>(StrOpt) Container within the account that the account should use for storing images in Swift.</td>
      </tr>
      <tr>
        <td>swift_store_create_container_on_put = False</td>
        <td>(BoolOpt) A boolean value that determines if we create the container if it does not exist.</td>
      </tr>
      <tr>
        <td>swift_store_endpoint_type = publicURL</td>
        <td>(StrOpt) A string giving the endpoint type of the swift service to use (publicURL, adminURL or internalURL). This setting is only used if swift_store_auth_version is 2.</td>
      </tr>
      <tr>
        <td>swift_store_key = None</td>
        <td>(StrOpt) Auth key for the user authenticating against the Swift authentication service. (deprecated)</td>
      </tr>
      <tr>
        <td>swift_store_large_object_chunk_size = 200</td>
        <td>(IntOpt) The amount of data written to a temporary disk buffer during the process of chunking the image file.</td>
      </tr>
      <tr>
        <td>swift_store_large_object_size = 5120</td>
        <td>(IntOpt) The size, in MB, that Glance will start chunking image files and do a large object manifest in Swift.</td>
      </tr>
      <tr>
        <td>swift_store_multi_tenant = False</td>
        <td>(BoolOpt) If set to True, enables multi-tenant storage mode which causes Glance images to be stored in tenant specific Swift accounts.</td>
      </tr>
      <tr>
        <td>swift_store_region = None</td>
        <td>(StrOpt) The region of the swift endpoint to be used for single tenant. This setting is only necessary if the tenant has multiple swift endpoints.</td>
      </tr>
      <tr>
        <td>swift_store_retry_get_count = 0</td>
        <td>(IntOpt) The number of times a Swift download will be retried before the request fails.</td>
      </tr>
      <tr>
        <td>swift_store_service_type = object-store</td>
        <td>(StrOpt) A string giving the service type of the swift service to use. This setting is only used if swift_store_auth_version is 2.</td>
      </tr>
      <tr>
        <td>swift_store_ssl_compression = True</td>
        <td>(BoolOpt) If set to False, disables SSL layer compression of https swift requests. Setting to False may improve performance for images which are already in a compressed format, eg qcow2.</td>
      </tr>
      <tr>
        <td>swift_store_user = None</td>
        <td>(StrOpt) The user to authenticate against the Swift authentication service (deprecated)</td>
      </tr>
    </tbody>
  </table>
</para>
