<?xml version="1.0" encoding="UTF-8"?>
        <!-- Warning: Do not edit this file. It is automatically
             generated and your changes will be overwritten.
             The tool to do so lives in the tools directory of this
             repository -->
        <para xmlns="http://docbook.org/ns/docbook" version="5.0">
        <table rules="all" xml:id="config_table_heat_api">
          <caption>Description of configuration options for api</caption>
           <col width="50%"/>
           <col width="50%"/>
           <thead>
              <tr>
                  <th>Configuration option = Default value</th>
                  <th>Description</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <th colspan="2">[DEFAULT]</th>
              </tr>
              <tr>
                       <td>heat_metadata_server_url = </td>
                       <td>(StrOpt) URL of the Heat metadata server.</td>
              </tr>
              <tr>
                       <td>heat_stack_user_role = heat_stack_user</td>
                       <td>(StrOpt) Keystone role for heat template-defined users.</td>
              </tr>
              <tr>
                       <td>heat_waitcondition_server_url = </td>
                       <td>(StrOpt) URL of the Heat waitcondition server.</td>
              </tr>
              <tr>
                       <td>heat_watch_server_url = </td>
                       <td>(StrOpt) URL of the Heat CloudWatch server.</td>
              </tr>
              <tr>
                       <td>max_json_body_size = 1048576</td>
                       <td>(IntOpt) Maximum raw byte size of JSON request body. Should be larger than max_template_size.</td>
              </tr>
              <tr>
                       <td>policy_default_rule = default</td>
                       <td>(StrOpt) Rule enforced when requested rule is not found</td>
              </tr>
              <tr>
                       <td>policy_file = policy.json</td>
                       <td>(StrOpt) JSON file containing policy</td>
              </tr>
              <tr>
                       <td>secure_proxy_ssl_header = X-Forwarded-Proto</td>
                       <td>(StrOpt) The HTTP Header that will be used to determine which the original request protocol scheme was, even if it was removed by an SSL terminator proxy.</td>
              </tr>
              <tr>
                       <td>stack_domain_admin = None</td>
                       <td>(StrOpt) Keystone username, a user with roles sufficient to manage users and projects in the stack_user_domain.</td>
              </tr>
              <tr>
                       <td>stack_domain_admin_password = None</td>
                       <td>(StrOpt) Keystone password for stack_domain_admin user.</td>
              </tr>
              <tr>
                       <td>stack_user_domain = None</td>
                       <td>(StrOpt) Keystone domain ID which contains heat template-defined users.</td>
              </tr>
              <tr>
                       <td>trusts_delegated_roles = heat_stack_owner</td>
                       <td>(ListOpt) Subset of trustor roles to be delegated to heat.</td>
              </tr>
              <tr>
                  <th colspan="2">[auth_password]</th>
              </tr>
              <tr>
                       <td>allowed_auth_uris = </td>
                       <td>(ListOpt) Allowed keystone endpoints for auth_uri when multi_cloud is enabled. At least one endpoint needs to be specified.</td>
              </tr>
              <tr>
                       <td>multi_cloud = False</td>
                       <td>(BoolOpt) Allow orchestration of multiple clouds.</td>
              </tr>
              <tr>
                  <th colspan="2">[ec2authtoken]</th>
              </tr>
              <tr>
                       <td>allowed_auth_uris = </td>
                       <td>(ListOpt) Allowed keystone endpoints for auth_uri when multi_cloud is enabled. At least one endpoint needs to be specified.</td>
              </tr>
              <tr>
                       <td>auth_uri = None</td>
                       <td>(StrOpt) Authentication Endpoint URI.</td>
              </tr>
              <tr>
                       <td>multi_cloud = False</td>
                       <td>(BoolOpt) Allow orchestration of multiple clouds.</td>
              </tr>
              <tr>
                  <th colspan="2">[heat_api]</th>
              </tr>
              <tr>
                       <td>backlog = 4096</td>
                       <td>(IntOpt) Number of backlog requests to configure the socket with.</td>
              </tr>
              <tr>
                       <td>bind_host = 0.0.0.0</td>
                       <td>(StrOpt) Address to bind the server. Useful when selecting a particular network interface.</td>
              </tr>
              <tr>
                       <td>bind_port = 8004</td>
                       <td>(IntOpt) The port on which the server will listen.</td>
              </tr>
              <tr>
                       <td>cert_file = None</td>
                       <td>(StrOpt) Location of the SSL certificate file to use for SSL mode.</td>
              </tr>
              <tr>
                       <td>key_file = None</td>
                       <td>(StrOpt) Location of the SSL key file to use for enabling SSL mode.</td>
              </tr>
              <tr>
                       <td>max_header_line = 16384</td>
                       <td>(IntOpt) Maximum line size of message headers to be accepted. max_header_line may need to be increased when using large tokens (typically those generated by the Keystone v3 API with big service catalogs).</td>
              </tr>
              <tr>
                       <td>workers = 0</td>
                       <td>(IntOpt) Number of workers for Heat service.</td>
              </tr>
              <tr>
                  <th colspan="2">[paste_deploy]</th>
              </tr>
              <tr>
                       <td>api_paste_config = api-paste.ini</td>
                       <td>(StrOpt) The API paste config file to use.</td>
              </tr>
              <tr>
                       <td>flavor = None</td>
                       <td>(StrOpt) The flavor to use.</td>
              </tr>
              <tr>
                  <th colspan="2">[ssl]</th>
              </tr>
              <tr>
                       <td>ca_file = None</td>
                       <td>(StrOpt) CA certificate file to use to verify connecting clients</td>
              </tr>
              <tr>
                       <td>cert_file = None</td>
                       <td>(StrOpt) Certificate file to use when starting the server securely</td>
              </tr>
              <tr>
                       <td>key_file = None</td>
                       <td>(StrOpt) Private key file to use when starting the server securely</td>
              </tr>
       </tbody>
        </table>
        </para>
