<?xml version="1.0" encoding="UTF-8"?>
        <!-- Warning: Do not edit this file. It is automatically
             generated and your changes will be overwritten.
             The tool to do so lives in the tools directory of this
             repository -->
        <para xmlns="http://docbook.org/ns/docbook" version="5.0">
        <table rules="all" xml:id="config_table_heat_database">
          <caption>Description of configuration options for database</caption>
           <col width="50%"/>
           <col width="50%"/>
           <thead>
              <tr>
                  <th>Configuration option = Default value</th>
                  <th>Description</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <th colspan="2">[DEFAULT]</th>
              </tr>
              <tr>
                       <td>db_backend = sqlalchemy</td>
                       <td>(StrOpt) The backend to use for db.</td>
              </tr>
              <tr>
                       <td>sqlite_db = heat.sqlite</td>
                       <td>(StrOpt) the filename to use with sqlite</td>
              </tr>
              <tr>
                       <td>sqlite_synchronous = True</td>
                       <td>(BoolOpt) If true, use synchronous mode for sqlite</td>
              </tr>
              <tr>
                  <th colspan="2">[database]</th>
              </tr>
              <tr>
                       <td>backend = sqlalchemy</td>
                       <td>(StrOpt) The backend to use for db</td>
              </tr>
              <tr>
                       <td>connection = sqlite:////usr/lib/python/site-packages/heat/openstack/common/db/$sqlite_db</td>
                       <td>(StrOpt) The SQLAlchemy connection string used to connect to the database</td>
              </tr>
              <tr>
                       <td>connection_debug = 0</td>
                       <td>(IntOpt) Verbosity of SQL debugging information. 0=None, 100=Everything</td>
              </tr>
              <tr>
                       <td>connection_trace = False</td>
                       <td>(BoolOpt) Add python stack traces to SQL as comment strings</td>
              </tr>
              <tr>
                       <td>idle_timeout = 3600</td>
                       <td>(IntOpt) timeout before idle sql connections are reaped</td>
              </tr>
              <tr>
                       <td>max_overflow = None</td>
                       <td>(IntOpt) If set, use this value for max_overflow with sqlalchemy</td>
              </tr>
              <tr>
                       <td>max_pool_size = None</td>
                       <td>(IntOpt) Maximum number of SQL connections to keep open in a pool</td>
              </tr>
              <tr>
                       <td>max_retries = 10</td>
                       <td>(IntOpt) maximum db connection retries during startup. (setting -1 implies an infinite retry count)</td>
              </tr>
              <tr>
                       <td>min_pool_size = 1</td>
                       <td>(IntOpt) Minimum number of SQL connections to keep open in a pool</td>
              </tr>
              <tr>
                       <td>pool_timeout = None</td>
                       <td>(IntOpt) If set, use this value for pool_timeout with sqlalchemy</td>
              </tr>
              <tr>
                       <td>retry_interval = 10</td>
                       <td>(IntOpt) interval between retries of opening a sql connection</td>
              </tr>
              <tr>
                       <td>slave_connection = </td>
                       <td>(StrOpt) The SQLAlchemy connection string used to connect to the slave database</td>
              </tr>
       </tbody>
        </table>
        </para>
