<?xml version='1.0' encoding='UTF-8'?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_ironic_common">
    <caption>Description of common configuration options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td><option>bindir</option> = <replaceable>/usr/local/bin</replaceable></td>
        <td>(StrOpt) Directory where ironic binaries are installed.</td>
      </tr>
      <tr>
        <td><option>fatal_deprecations</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Enables or disables fatal status of deprecations.</td>
      </tr>
      <tr>
        <td><option>max_header_line</option> = <replaceable>16384</replaceable></td>
        <td>(IntOpt) Maximum line size of message headers to be accepted. max_header_line may need to be increased when using large tokens (typically those generated by the Keystone v3 API with big service catalogs).</td>
      </tr>
      <tr>
        <td><option>memcached_servers</option> = <replaceable>None</replaceable></td>
        <td>(ListOpt) Memcached servers or None for in process cache.</td>
      </tr>
      <tr>
        <td><option>monkey_patch</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Whether to log monkey patching</td>
      </tr>
      <tr>
        <td><option>monkey_patch_modules</option> = <replaceable>nova.api.ec2.cloud:nova.notifications.notify_decorator, nova.compute.api:nova.notifications.notify_decorator</replaceable></td>
        <td>(ListOpt) List of modules/decorators to monkey patch</td>
      </tr>
      <tr>
        <td><option>my_ip</option> = <replaceable>10.0.0.1</replaceable></td>
        <td>(StrOpt) IP address of this host.</td>
      </tr>
      <tr>
        <td><option>pybasedir</option> = <replaceable>/usr/lib/python/site-packages/ironic/ironic</replaceable></td>
        <td>(StrOpt) Directory where the ironic python module is installed.</td>
      </tr>
      <tr>
        <td><option>rootwrap_config</option> = <replaceable>/etc/nova/rootwrap.conf</replaceable></td>
        <td>(StrOpt) Path to the rootwrap configuration file to use for running commands as root</td>
      </tr>
      <tr>
        <td><option>run_external_periodic_tasks</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Some periodic tasks can be run in a separate process. Should we run them here?</td>
      </tr>
      <tr>
        <td><option>state_path</option> = <replaceable>$pybasedir</replaceable></td>
        <td>(StrOpt) Top-level directory for maintaining ironic's state.</td>
      </tr>
      <tr>
        <td><option>tcp_keepidle</option> = <replaceable>600</replaceable></td>
        <td>(IntOpt) Sets the value of TCP_KEEPIDLE in seconds for each server socket. Not supported on OS X.</td>
      </tr>
      <tr>
        <td><option>tempdir</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Explicitly specify the temporary working directory</td>
      </tr>
      <tr>
        <td><option>wsgi_default_pool_size</option> = <replaceable>1000</replaceable></td>
        <td>(IntOpt) Size of the pool of greenthreads used by wsgi</td>
      </tr>
      <tr>
        <td><option>wsgi_keep_alive</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) If False, closes the client socket connection explicitly.</td>
      </tr>
    </tbody>
  </table>
</para>
