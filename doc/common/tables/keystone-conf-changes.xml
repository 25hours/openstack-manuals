<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="keystone-conf-changes-master">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Juno for OpenStack Identity</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] admin_workers = 1</td>
      <td>(IntOpt) The number of worker processes to serve the admin WSGI application</td>
    </tr>
    <tr>
      <td>[DEFAULT] public_workers = 1</td>
      <td>(IntOpt) The number of worker processes to serve the public WSGI application</td>
    </tr>
    <tr>
      <td>[DEFAULT] strict_password_check = False</td>
      <td>(BoolOpt) If set to true, strict password length checking is performed for password manipulation. If a password exceeds the maximum length, the operation will fail with an HTTP 403 Forbidden error. If set to false, passwords are automatically truncated to the maximum length.</td>
    </tr>
    <tr>
      <td>[catalog] cache_time = None</td>
      <td>(IntOpt) Time to cache catalog data (in seconds). This has no effect unless global and catalog caching are enabled.</td>
    </tr>
    <tr>
      <td>[catalog] caching = True</td>
      <td>(BoolOpt) Toggle for catalog caching. This has no effect unless global caching is enabled.</td>
    </tr>
    <tr>
      <td>[database] slave_connection = None</td>
      <td>(StrOpt) The SQLAlchemy connection string to use to connect to the slave database.</td>
    </tr>
    <tr>
      <td>[endpoint_policy] driver = keystone.contrib.endpoint_policy.backends.sql.EndpointPolicy</td>
      <td>(StrOpt) Endpoint policy backend driver</td>
    </tr>
    <tr>
      <td>[identity_mapping] backward_compatible_ids = True</td>
      <td>(BoolOpt) The format of user and group IDs changed in Juno for backends that do not generate UUIDs (e.g. LDAP), with keystone providing a hash mapping to the underlying attribute in LDAP. By default this mapping is disabled, which ensures that existing IDs will not change. Even when the mapping is enabled by using domain specific drivers, any users and groups from the default domain being handled by LDAP will still not be mapped to ensure their IDs remain backward compatible. Setting this value to False will enable the mapping for even the default LDAP driver. It is only safe to do this if you do not already have assignments for users and groups from the default LDAP domain, and it is acceptable for Keystone to provide the different IDs to clients than it did previously.  Typically this means that the only time you can set this value to False is when configuring a fresh installation.</td>
    </tr>
    <tr>
      <td>[identity_mapping] driver = keystone.identity.mapping_backends.sql.Mapping</td>
      <td>(StrOpt) Keystone Identity Mapping backend driver.</td>
    </tr>
    <tr>
      <td>[identity_mapping] generator = keystone.identity.id_generators.sha256.Generator</td>
      <td>(StrOpt) Public ID generator for user and group entities. The Keystone identity mapper only supports generators that produce no more than 64 characters.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] check_revocations_for_cached = False</td>
      <td>(BoolOpt) If true, the revocation list will be checked for cached tokens. This requires that PKI tokens are configured on the Keystone server.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] hash_algorithms = ['md5']</td>
      <td>(ListOpt) Hash algorithms to use for hashing PKI tokens. This may be a single algorithm or multiple. The algorithms are those supported by Python standard hashlib.new(). The hashes will be tried in the order given, so put the preferred one first for performance. The result of the first hash will be stored in the cache. This will typically be set to multiple values only while migrating from a less secure algorithm to a more secure one. Once all the old tokens are expired this option should be set to a single value for better performance.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] identity_uri = None</td>
      <td>(StrOpt) Complete admin Identity API endpoint. This should specify the unversioned root endpoint e.g. https://localhost:35357/</td>
    </tr>
    <tr>
      <td>[keystone_ec2_token] cafile = None</td>
      <td>(StrOpt) A PEM encoded certificate authority to use when verifying HTTPS connections. Defaults to the system CAs.</td>
    </tr>
    <tr>
      <td>[keystone_ec2_token] certfile = None</td>
      <td>(StrOpt) Client certificate key filename. Required if EC2 server requires client certificate.</td>
    </tr>
    <tr>
      <td>[keystone_ec2_token] insecure = False</td>
      <td>(BoolOpt) Disable SSL certificate verification.</td>
    </tr>
    <tr>
      <td>[keystone_ec2_token] keyfile = None</td>
      <td>(StrOpt) Required if EC2 server requires client certificate.</td>
    </tr>
    <tr>
      <td>[keystone_ec2_token] url = http://localhost:5000/v2.0/ec2tokens</td>
      <td>(StrOpt) URL to get token from ec2 request.</td>
    </tr>
    <tr>
      <td>[ldap] auth_pool_connection_lifetime = 60</td>
      <td>(IntOpt) End user auth connection lifetime in seconds.</td>
    </tr>
    <tr>
      <td>[ldap] auth_pool_size = 100</td>
      <td>(IntOpt) End user auth connection pool size.</td>
    </tr>
    <tr>
      <td>[ldap] debug_level = None</td>
      <td>(IntOpt) Sets the LDAP debugging level for LDAP calls. A value of 0 means that debugging is not enabled. This value is a bitmask, consult your LDAP documentation for possible values.</td>
    </tr>
    <tr>
      <td>[ldap] pool_connection_lifetime = 600</td>
      <td>(IntOpt) Connection lifetime in seconds.</td>
    </tr>
    <tr>
      <td>[ldap] pool_connection_timeout = -1</td>
      <td>(IntOpt) Connector timeout in seconds. Value -1 indicates indefinite wait for response.</td>
    </tr>
    <tr>
      <td>[ldap] pool_retry_delay = 0.1</td>
      <td>(FloatOpt) Time span in seconds to wait between two reconnect trials.</td>
    </tr>
    <tr>
      <td>[ldap] pool_retry_max = 3</td>
      <td>(IntOpt) Maximum count of reconnect trials.</td>
    </tr>
    <tr>
      <td>[ldap] pool_size = 10</td>
      <td>(IntOpt) Connection pool size.</td>
    </tr>
    <tr>
      <td>[ldap] project_additional_attribute_mapping = []</td>
      <td>(ListOpt) Additional attribute mappings for projects. Attribute mapping format is &lt;ldap_attr&gt;:&lt;user_attr&gt;, where ldap_attr is the attribute in the LDAP entry and user_attr is the Identity API attribute.</td>
    </tr>
    <tr>
      <td>[ldap] project_allow_create = True</td>
      <td>(BoolOpt) Allow project creation in LDAP backend.</td>
    </tr>
    <tr>
      <td>[ldap] project_allow_delete = True</td>
      <td>(BoolOpt) Allow project deletion in LDAP backend.</td>
    </tr>
    <tr>
      <td>[ldap] project_allow_update = True</td>
      <td>(BoolOpt) Allow project update in LDAP backend.</td>
    </tr>
    <tr>
      <td>[ldap] project_attribute_ignore = []</td>
      <td>(ListOpt) List of attributes stripped off the project on update.</td>
    </tr>
    <tr>
      <td>[ldap] project_desc_attribute = description</td>
      <td>(StrOpt) LDAP attribute mapped to project description.</td>
    </tr>
    <tr>
      <td>[ldap] project_domain_id_attribute = businessCategory</td>
      <td>(StrOpt) LDAP attribute mapped to project domain_id.</td>
    </tr>
    <tr>
      <td>[ldap] project_enabled_attribute = enabled</td>
      <td>(StrOpt) LDAP attribute mapped to project enabled.</td>
    </tr>
    <tr>
      <td>[ldap] project_enabled_emulation = False</td>
      <td>(BoolOpt) If true, Keystone uses an alternative method to determine if a project is enabled or not by checking if they are a member of the "project_enabled_emulation_dn" group.</td>
    </tr>
    <tr>
      <td>[ldap] project_enabled_emulation_dn = None</td>
      <td>(StrOpt) DN of the group entry to hold enabled projects when using enabled emulation.</td>
    </tr>
    <tr>
      <td>[ldap] project_filter = None</td>
      <td>(StrOpt) LDAP search filter for projects.</td>
    </tr>
    <tr>
      <td>[ldap] project_id_attribute = cn</td>
      <td>(StrOpt) LDAP attribute mapped to project id.</td>
    </tr>
    <tr>
      <td>[ldap] project_member_attribute = member</td>
      <td>(StrOpt) LDAP attribute mapped to project membership for user.</td>
    </tr>
    <tr>
      <td>[ldap] project_name_attribute = ou</td>
      <td>(StrOpt) LDAP attribute mapped to project name.</td>
    </tr>
    <tr>
      <td>[ldap] project_objectclass = groupOfNames</td>
      <td>(StrOpt) LDAP objectclass for projects.</td>
    </tr>
    <tr>
      <td>[ldap] project_tree_dn = None</td>
      <td>(StrOpt) Search base for projects</td>
    </tr>
    <tr>
      <td>[ldap] use_auth_pool = False</td>
      <td>(BoolOpt) Enable LDAP connection pooling for end user authentication. If use_pool is disabled, then this setting is meaningless and is not used at all.</td>
    </tr>
    <tr>
      <td>[ldap] use_pool = False</td>
      <td>(BoolOpt) Enable LDAP connection pooling.</td>
    </tr>
    <tr>
      <td>[ldap] user_enabled_invert = False</td>
      <td>(BoolOpt) Invert the meaning of the boolean enabled values. Some LDAP servers use a boolean lock attribute where "true" means an account is disabled. Setting "user_enabled_invert = true" will allow these lock attributes to be used. This setting will have no effect if "user_enabled_mask" or "user_enabled_emulation" settings are in use.</td>
    </tr>
    <tr>
      <td>[saml] assertion_expiration_time = 3600</td>
      <td>(IntOpt) Default TTL, in seconds, for any generated SAML assertion created by Keystone.</td>
    </tr>
    <tr>
      <td>[saml] certfile = /etc/keystone/ssl/certs/signing_cert.pem</td>
      <td>(StrOpt) Path of the certfile for SAML signing. For non-production environments, you may be interested in using `keystone-manage pki_setup` to generate self-signed certificates. Note, the path cannot contain a comma.</td>
    </tr>
    <tr>
      <td>[saml] idp_contact_company = None</td>
      <td>(StrOpt) Company of contact person.</td>
    </tr>
    <tr>
      <td>[saml] idp_contact_email = None</td>
      <td>(StrOpt) Email address of contact person.</td>
    </tr>
    <tr>
      <td>[saml] idp_contact_name = None</td>
      <td>(StrOpt) Given name of contact person</td>
    </tr>
    <tr>
      <td>[saml] idp_contact_surname = None</td>
      <td>(StrOpt) Surname of contact person.</td>
    </tr>
    <tr>
      <td>[saml] idp_contact_telephone = None</td>
      <td>(StrOpt) Telephone number of contact person.</td>
    </tr>
    <tr>
      <td>[saml] idp_contact_type = other</td>
      <td>(StrOpt) Contact type. Allowed values are: technical, support, administrative billing, and other</td>
    </tr>
    <tr>
      <td>[saml] idp_entity_id = None</td>
      <td>(StrOpt) Entity ID value for unique Identity Provider identification. Usually FQDN is set with a suffix. A value is required to generate IDP Metadata. For example: https://keystone.example.com/v3/OS-FEDERATION/saml2/idp</td>
    </tr>
    <tr>
      <td>[saml] idp_lang = en</td>
      <td>(StrOpt) Language used by the organization.</td>
    </tr>
    <tr>
      <td>[saml] idp_metadata_path = /etc/keystone/saml2_idp_metadata.xml</td>
      <td>(StrOpt) Path to the Identity Provider Metadata file. This file should be generated with the keystone-manage saml_idp_metadata command.</td>
    </tr>
    <tr>
      <td>[saml] idp_organization_display_name = None</td>
      <td>(StrOpt) Organization name to be displayed.</td>
    </tr>
    <tr>
      <td>[saml] idp_organization_name = None</td>
      <td>(StrOpt) Organization name the installation belongs to.</td>
    </tr>
    <tr>
      <td>[saml] idp_organization_url = None</td>
      <td>(StrOpt) URL of the organization.</td>
    </tr>
    <tr>
      <td>[saml] idp_sso_endpoint = None</td>
      <td>(StrOpt) Identity Provider Single-Sign-On service value, required in the Identity Provider's metadata. A value is required to generate IDP Metadata. For example: https://keystone.example.com/v3/OS-FEDERATION/saml2/sso</td>
    </tr>
    <tr>
      <td>[saml] keyfile = /etc/keystone/ssl/private/signing_key.pem</td>
      <td>(StrOpt) Path of the keyfile for SAML signing. Note, the path cannot contain a comma.</td>
    </tr>
    <tr>
      <td>[saml] xmlsec1_binary = xmlsec1</td>
      <td>(StrOpt) Binary to be called for XML signing. Install the appropriate package, specify absolute path or adjust your PATH environment variable if the binary cannot be found.</td>
    </tr>
    <tr>
      <td>[token] hash_algorithm = md5</td>
      <td>(StrOpt) The hash algorithm to use for PKI tokens. This can be set to any algorithm that hashlib supports. WARNING: Before changing this value, the auth_token middleware must be configured with the hash_algorithms, otherwise token revocation will not be processed correctly.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] control_exchange</td>
      <td>openstack</td>
      <td>keystone</td>
    </tr>
    <tr>
      <td>[DEFAULT] default_log_levels</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN</td>
    </tr>
    <tr>
      <td>[database] sqlite_db</td>
      <td>keystone.sqlite</td>
      <td>oslo.sqlite</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] revocation_cache_time</td>
      <td>300</td>
      <td>10</td>
    </tr>
    <tr>
      <td>[ldap] user_mail_attribute</td>
      <td>email</td>
      <td>mail</td>
    </tr>
    <tr>
      <td>[token] driver</td>
      <td>keystone.token.backends.sql.Token</td>
      <td>keystone.token.persistence.backends.sql.Token</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[ldap] tenant_allow_delete</td>
      <td>[ldap] project_allow_delete</td>
    </tr>
    <tr>
      <td>[ldap] tenant_allow_create</td>
      <td>[ldap] project_allow_create</td>
    </tr>
    <tr>
      <td>[ldap] tenant_enabled_emulation</td>
      <td>[ldap] project_enabled_emulation</td>
    </tr>
    <tr>
      <td>[ldap] tenant_member_attribute</td>
      <td>[ldap] project_member_attribute</td>
    </tr>
    <tr>
      <td>[ldap] tenant_additional_attribute_mapping</td>
      <td>[ldap] project_additional_attribute_mapping</td>
    </tr>
    <tr>
      <td>[ldap] tenant_filter</td>
      <td>[ldap] project_filter</td>
    </tr>
    <tr>
      <td>[ldap] tenant_domain_id_attribute</td>
      <td>[ldap] project_domain_id_attribute</td>
    </tr>
    <tr>
      <td>[ldap] tenant_name_attribute</td>
      <td>[ldap] project_name_attribute</td>
    </tr>
    <tr>
      <td>[ldap] tenant_attribute_ignore</td>
      <td>[ldap] project_attribute_ignore</td>
    </tr>
    <tr>
      <td>[ldap] tenant_allow_update</td>
      <td>[ldap] project_allow_update</td>
    </tr>
    <tr>
      <td>[ldap] tenant_tree_dn</td>
      <td>[ldap] project_tree_dn</td>
    </tr>
    <tr>
      <td>[ldap] tenant_id_attribute</td>
      <td>[ldap] project_id_attribute</td>
    </tr>
    <tr>
      <td>[ldap] tenant_desc_attribute</td>
      <td>[ldap] project_desc_attribute</td>
    </tr>
    <tr>
      <td>[ldap] tenant_objectclass</td>
      <td>[ldap] project_objectclass</td>
    </tr>
    <tr>
      <td>[ldap] tenant_enabled_emulation_dn</td>
      <td>[ldap] project_enabled_emulation_dn</td>
    </tr>
    <tr>
      <td>[ldap] tenant_enabled_attribute</td>
      <td>[ldap] project_enabled_attribute</td>
    </tr>
  </table>
</section>
