<?xml version='1.0' encoding='UTF-8'?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_neutron_common">
    <caption>Description of common configuration options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td><option>admin_password</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Admin password</td>
      </tr>
      <tr>
        <td><option>admin_tenant_name</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Admin tenant name</td>
      </tr>
      <tr>
        <td><option>admin_user</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Admin user</td>
      </tr>
      <tr>
        <td><option>agent_down_time</option> = <replaceable>75</replaceable></td>
        <td>(IntOpt) Seconds to regard the agent is down; should be at least twice report_interval, to be sure the agent is down for good.</td>
      </tr>
      <tr>
        <td><option>api_workers</option> = <replaceable>None</replaceable></td>
        <td>(IntOpt) Number of separate API worker processes for service. If not specified, the default is equal to the number of CPUs available for best performance.</td>
      </tr>
      <tr>
        <td><option>auth_ca_cert</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Certificate Authority public key (CA cert) file for ssl</td>
      </tr>
      <tr>
        <td><option>auth_insecure</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Turn off verification of the certificate for ssl</td>
      </tr>
      <tr>
        <td><option>auth_region</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Authentication region</td>
      </tr>
      <tr>
        <td><option>auth_strategy</option> = <replaceable>keystone</replaceable></td>
        <td>(StrOpt) The type of authentication to use</td>
      </tr>
      <tr>
        <td><option>auth_url</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Authentication URL</td>
      </tr>
      <tr>
        <td><option>base_mac</option> = <replaceable>fa:16:3e:00:00:00</replaceable></td>
        <td>(StrOpt) The base MAC address Neutron will use for VIFs</td>
      </tr>
      <tr>
        <td><option>bind_host</option> = <replaceable>0.0.0.0</replaceable></td>
        <td>(StrOpt) The host IP to bind to</td>
      </tr>
      <tr>
        <td><option>bind_port</option> = <replaceable>9696</replaceable></td>
        <td>(IntOpt) The port to bind to</td>
      </tr>
      <tr>
        <td><option>core_plugin</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) The core plugin Neutron will use</td>
      </tr>
      <tr>
        <td><option>default_ipv4_subnet_pool</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Default IPv4 subnet-pool to be used for automatic subnet CIDR allocation</td>
      </tr>
      <tr>
        <td><option>default_ipv6_subnet_pool</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Default IPv6 subnet-pool to be used for automatic subnet CIDR allocation</td>
      </tr>
      <tr>
        <td><option>device_driver</option> = <replaceable>['neutron_lbaas.services.loadbalancer.drivers.haproxy.namespace_driver.HaproxyNSDriver']</replaceable></td>
        <td>(MultiStrOpt) Drivers used to manage loadbalancing devices</td>
      </tr>
      <tr>
        <td><option>dhcp_agent_notification</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Allow sending resource operation notification to DHCP agent</td>
      </tr>
      <tr>
        <td><option>dhcp_agents_per_network</option> = <replaceable>1</replaceable></td>
        <td>(IntOpt) Number of DHCP agents scheduled to host a tenant network. If this number is greater than 1, the scheduler automatically assigns multiple DHCP agents for a given tenant network, providing high availability for DHCP service.</td>
      </tr>
      <tr>
        <td><option>dhcp_broadcast_reply</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Use broadcast in DHCP replies</td>
      </tr>
      <tr>
        <td><option>dhcp_confs</option> = <replaceable>$state_path/dhcp</replaceable></td>
        <td>(StrOpt) Location to store DHCP server config files</td>
      </tr>
      <tr>
        <td><option>dhcp_delete_namespaces</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Delete namespace after removing a dhcp server.This option is deprecated and will be removed in a future release.</td>
      </tr>
      <tr>
        <td><option>dhcp_domain</option> = <replaceable>openstacklocal</replaceable></td>
        <td>(StrOpt) Domain to use for building the hostnames.This option is deprecated. It has been moved to neutron.conf as dns_domain. It will removed from here in a future release</td>
      </tr>
      <tr>
        <td><option>dhcp_lease_duration</option> = <replaceable>86400</replaceable></td>
        <td>(IntOpt) DHCP lease duration (in seconds). Use -1 to tell dnsmasq to use infinite lease times.</td>
      </tr>
      <tr>
        <td><option>dhcp_load_type</option> = <replaceable>networks</replaceable></td>
        <td>(StrOpt) Representing the resource type whose load is being reported by the agent. This can be "networks", "subnets" or "ports". When specified (Default is networks), the server will extract particular load sent as part of its agent configuration object from the agent report state, which is the number of resources being consumed, at every report_interval.dhcp_load_type can be used in combination with network_scheduler_driver = neutron.scheduler.dhcp_agent_scheduler.WeightScheduler When the network_scheduler_driver is WeightScheduler, dhcp_load_type can be configured to represent the choice for the resource being balanced. Example: dhcp_load_type=networks</td>
      </tr>
      <tr>
        <td><option>dns_domain</option> = <replaceable>openstacklocal</replaceable></td>
        <td>(StrOpt) Domain to use for building the hostnames</td>
      </tr>
      <tr>
        <td><option>enable_new_agents</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Agent starts with admin_state_up=False when enable_new_agents=False. In the case, user's resources will not be scheduled automatically to the agent until admin changes admin_state_up to True.</td>
      </tr>
      <tr>
        <td><option>enable_services_on_agents_with_admin_state_down</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Enable services on an agent with admin_state_up False. If this option is False, when admin_state_up of an agent is turned False, services on it will be disabled. Agents with admin_state_up False are not selected for automatic scheduling regardless of this option. But manual scheduling to such agents is available if this option is True.</td>
      </tr>
      <tr>
        <td><option>endpoint_type</option> = <replaceable>adminURL</replaceable></td>
        <td>(StrOpt) Network service endpoint type to pull from the keystone catalog</td>
      </tr>
      <tr>
        <td><option>endpoint_url</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Neutron endpoint URL, if not set will use endpoint from the keystone catalog along with endpoint_type</td>
      </tr>
      <tr>
        <td><option>executor_thread_pool_size</option> = <replaceable>64</replaceable></td>
        <td>(IntOpt) Size of executor thread pool.</td>
      </tr>
      <tr>
        <td><option>force_gateway_on_subnet</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Ensure that configured gateway is on subnet. For IPv6, validate only if gateway is not a link local address. Deprecated, to be removed during the K release, at which point the check will be mandatory.</td>
      </tr>
      <tr>
        <td><option>host</option> = <replaceable>localhost</replaceable></td>
        <td>(StrOpt) Hostname to be used by the neutron server, agents and services running on this machine. All the agents and services running on this machine must use the same host value.</td>
      </tr>
      <tr>
        <td><option>interface_driver</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) The driver used to manage the virtual interface.</td>
      </tr>
      <tr>
        <td><option>ip_lib_force_root</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Force ip_lib calls to use the root helper</td>
      </tr>
      <tr>
        <td><option>ipam_driver</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) IPAM driver to use.</td>
      </tr>
      <tr>
        <td><option>mac_generation_retries</option> = <replaceable>16</replaceable></td>
        <td>(IntOpt) How many times Neutron will retry MAC generation</td>
      </tr>
      <tr>
        <td><option>max_allowed_address_pair</option> = <replaceable>10</replaceable></td>
        <td>(IntOpt) Maximum number of allowed address pairs</td>
      </tr>
      <tr>
        <td><option>max_dns_nameservers</option> = <replaceable>5</replaceable></td>
        <td>(IntOpt) Maximum number of DNS nameservers</td>
      </tr>
      <tr>
        <td><option>max_fixed_ips_per_port</option> = <replaceable>5</replaceable></td>
        <td>(IntOpt) Maximum number of fixed ips per port</td>
      </tr>
      <tr>
        <td><option>max_subnet_host_routes</option> = <replaceable>20</replaceable></td>
        <td>(IntOpt) Maximum number of host routes per subnet</td>
      </tr>
      <tr>
        <td><option>memcached_servers</option> = <replaceable>None</replaceable></td>
        <td>(ListOpt) Memcached servers or None for in process cache.</td>
      </tr>
      <tr>
        <td><option>periodic_fuzzy_delay</option> = <replaceable>5</replaceable></td>
        <td>(IntOpt) Range of seconds to randomly delay when starting the periodic task scheduler to reduce stampeding. (Disable by setting to 0)</td>
      </tr>
      <tr>
        <td><option>periodic_interval</option> = <replaceable>40</replaceable></td>
        <td>(IntOpt) Seconds between running periodic tasks</td>
      </tr>
      <tr>
        <td><option>periodic_monitoring_interval</option> = <replaceable>5</replaceable></td>
        <td>(IntOpt) Periodic interval at which the plugin checks for the monitoring L2 gateway agent</td>
      </tr>
      <tr>
        <td><option>report_interval</option> = <replaceable>300</replaceable></td>
        <td>(IntOpt) Interval between two metering reports</td>
      </tr>
      <tr>
        <td><option>rootwrap_config</option> = <replaceable>/etc/nova/rootwrap.conf</replaceable></td>
        <td>(StrOpt) Path to the rootwrap configuration file to use for running commands as root</td>
      </tr>
      <tr>
        <td><option>state_path</option> = <replaceable>/var/lib/neutron</replaceable></td>
        <td>(StrOpt) Where to store Neutron state files. This directory must be writable by the agent.</td>
      </tr>
      <tr>
        <td><option>vlan_transparent</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) If True, then allow plugins that support it to create VLAN transparent networks.</td>
      </tr>
      <tr>
        <th colspan="2">[AGENT]</th>
      </tr>
      <tr>
        <td><option>check_child_processes_action</option> = <replaceable>respawn</replaceable></td>
        <td>(StrOpt) Action to be executed when a child process dies</td>
      </tr>
      <tr>
        <td><option>check_child_processes_interval</option> = <replaceable>60</replaceable></td>
        <td>(IntOpt) Interval between checks of child process liveness (seconds), use 0 to disable</td>
      </tr>
      <tr>
        <td><option>log_agent_heartbeats</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Log agent heartbeats</td>
      </tr>
      <tr>
        <td><option>root_helper</option> = <replaceable>sudo</replaceable></td>
        <td>(StrOpt) Root helper application.</td>
      </tr>
      <tr>
        <td><option>root_helper_daemon</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Root helper daemon application to use when possible.</td>
      </tr>
      <tr>
        <th colspan="2">[certificates]</th>
      </tr>
      <tr>
        <td><option>cert_manager_type</option> = <replaceable>barbican</replaceable></td>
        <td>(StrOpt) Certificate Manager plugin. Defaults to barbican.</td>
      </tr>
      <tr>
        <td><option>storage_path</option> = <replaceable>/var/lib/neutron-lbaas/certificates/</replaceable></td>
        <td>(StrOpt) Absolute path to the certificate storage directory. Defaults to env[OS_LBAAS_TLS_STORAGE].</td>
      </tr>
      <tr>
        <th colspan="2">[heleos]</th>
      </tr>
      <tr>
        <td><option>admin_password</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) ESM admin password.</td>
      </tr>
      <tr>
        <th colspan="2">[keystone_authtoken]</th>
      </tr>
      <tr>
        <td><option>memcached_servers</option> = <replaceable>None</replaceable></td>
        <td>(ListOpt) Optionally specify a list of memcached server(s) to use for caching. If left undefined, tokens will instead be cached in-process.</td>
      </tr>
      <tr>
        <th colspan="2">[qos]</th>
      </tr>
      <tr>
        <td><option>notification_drivers</option> = <replaceable>message_queue</replaceable></td>
        <td>(ListOpt) Drivers list to use to send the update notification</td>
      </tr>
    </tbody>
  </table>
</para>
