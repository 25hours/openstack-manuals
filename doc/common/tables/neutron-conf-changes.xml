<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="neutron-conf-changes-master">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Juno for OpenStack Networking</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] agent_mode = legacy</td>
      <td>(StrOpt) The working mode for the agent. Allowed modes are: 'legacy' - this preserves the existing behavior where the L3 agent is deployed on a centralized networking node to provide L3 services like DNAT, and SNAT. Use this mode if you do not want to adopt DVR. 'dvr' - this mode enables DVR functionality and must be used for an L3 agent that runs on a compute host. 'dvr_snat' - this enables centralized SNAT support in conjunction with DVR.  This mode must be used for an L3 agent running on a centralized node (or in single-host deployments, e.g. devstack)</td>
    </tr>
    <tr>
      <td>[DEFAULT] allow_automatic_l3agent_failover = False</td>
      <td>(BoolOpt) Automatically reschedule routers from offline L3 agents to online L3 agents.</td>
    </tr>
    <tr>
      <td>[DEFAULT] apic_system_id = openstack</td>
      <td>(StrOpt) Prefix for APIC domain/names/profiles created</td>
    </tr>
    <tr>
      <td>[DEFAULT] check_child_processes = False</td>
      <td>(BoolOpt) Periodically check child processes</td>
    </tr>
    <tr>
      <td>[DEFAULT] check_child_processes_action = respawn</td>
      <td>(StrOpt) Action to be executed when a child process dies</td>
    </tr>
    <tr>
      <td>[DEFAULT] check_child_processes_interval = 60</td>
      <td>(IntOpt) Interval between checks of child process liveness (seconds)</td>
    </tr>
    <tr>
      <td>[DEFAULT] device_connection_timeout = 30</td>
      <td>(IntOpt) Time in seconds for connecting to a hosting device</td>
    </tr>
    <tr>
      <td>[DEFAULT] dvr_base_mac = fa:16:3f:00:00:00</td>
      <td>(StrOpt) The base mac address used for unique DVR instances by Neutron</td>
    </tr>
    <tr>
      <td>[DEFAULT] hosting_device_dead_timeout = 300</td>
      <td>(IntOpt) The time in seconds until a backlogged hosting device is presumed dead. This value should be set up high enough to recover from a period of connectivity loss or high load when the device may not be responding.</td>
    </tr>
    <tr>
      <td>[DEFAULT] kombu_reconnect_delay = 1.0</td>
      <td>(FloatOpt) How long to wait before reconnecting in response to an AMQP consumer cancel notification.</td>
    </tr>
    <tr>
      <td>[DEFAULT] nova_api_insecure = False</td>
      <td>(BoolOpt) If True, ignore any SSL validation issues</td>
    </tr>
    <tr>
      <td>[DEFAULT] nova_ca_certificates_file = None</td>
      <td>(StrOpt) CA file for novaclient to verify server certificates</td>
    </tr>
    <tr>
      <td>[DEFAULT] nova_client_cert = </td>
      <td>(StrOpt) Client certificate for nova metadata api server.</td>
    </tr>
    <tr>
      <td>[DEFAULT] nova_client_priv_key = </td>
      <td>(StrOpt) Private key of client certificate.</td>
    </tr>
    <tr>
      <td>[DEFAULT] nova_metadata_insecure = False</td>
      <td>(BoolOpt) Allow to perform insecure SSL (https) requests to nova metadata</td>
    </tr>
    <tr>
      <td>[DEFAULT] nova_metadata_protocol = http</td>
      <td>(StrOpt) Protocol to access nova metadata, http or https</td>
    </tr>
    <tr>
      <td>[DEFAULT] ra_confs = $state_path/ra</td>
      <td>(StrOpt) Location to store IPv6 RA config files</td>
    </tr>
    <tr>
      <td>[DEFAULT] rabbit_login_method = AMQPLAIN</td>
      <td>(StrOpt) the RabbitMQ login method</td>
    </tr>
    <tr>
      <td>[DEFAULT] router_distributed = False</td>
      <td>(BoolOpt) System-wide flag to determine the type of router that tenants can create. Only admin can override.</td>
    </tr>
    <tr>
      <td>[DEFAULT] routing_svc_helper_class = neutron.plugins.cisco.cfg_agent.service_helpers.routing_svc_helper.RoutingServiceHelper</td>
      <td>(StrOpt) Path of the routing service helper class.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_loop_interval = 10</td>
      <td>(IntOpt) Interval when the process_services() loop executes in seconds. This is when the config agent lets each service helper to process its neutron resources.</td>
    </tr>
    <tr>
      <td>[DEFAULT] transport_url = None</td>
      <td>(StrOpt) A URL representing the messaging driver to use and its full configuration. If not set, we fall back to the rpc_backend option and driver specific configuration.</td>
    </tr>
    <tr>
      <td>[DEFAULT] use_syslog_rfc_format = False</td>
      <td>(BoolOpt) (Optional) Enables or disables syslog rfc5424 format for logging. If enabled, prefixes the MSG part of the syslog message with APP-NAME (RFC5424). The format without the APP-NAME is deprecated in I, and will be removed in J.</td>
    </tr>
    <tr>
      <td>[AGENT] arp_responder = False</td>
      <td>(BoolOpt) Enable local ARP responder if it is supported. Requires OVS 2.1 and ML2 l2population driver. Allows the switch (when supporting an overlay) to respond to an ARP request locally without performing a costly ARP broadcast into the overlay.</td>
    </tr>
    <tr>
      <td>[AGENT] dont_fragment = True</td>
      <td>(BoolOpt) Set or un-set the don't fragment (DF) bit on outgoing IP packet carrying GRE/VXLAN tunnel.</td>
    </tr>
    <tr>
      <td>[AGENT] enable_distributed_routing = False</td>
      <td>(BoolOpt) Make the l2 agent run in DVR mode.</td>
    </tr>
    <tr>
      <td>[AGENT] physical_interface_mappings = []</td>
      <td>(ListOpt) List of &lt;physical_network&gt;:&lt;physical_interface&gt;</td>
    </tr>
    <tr>
      <td>[CISCO_N1K] http_pool_size = 4</td>
      <td>(IntOpt) Number of threads to use to make HTTP requests</td>
    </tr>
    <tr>
      <td>[CISCO_N1K] restrict_policy_profiles = False</td>
      <td>(BoolOpt) Restrict the visibility of policy profiles to the tenants</td>
    </tr>
    <tr>
      <td>[CONTRAIL] api_server_ip = 127.0.0.1</td>
      <td>(StrOpt) IP address to connect to opencontrail controller</td>
    </tr>
    <tr>
      <td>[CONTRAIL] api_server_port = 8082</td>
      <td>(IntOpt) Port to connect to opencontrail controller</td>
    </tr>
    <tr>
      <td>[NOVA] node_override_vif_distributed = []</td>
      <td>(ListOpt) Nova compute nodes to manually set VIF type to distributed</td>
    </tr>
    <tr>
      <td>[NOVA] node_override_vif_dvs = []</td>
      <td>(ListOpt) Nova compute nodes to manually set VIF type to dvs</td>
    </tr>
    <tr>
      <td>[NOVA] node_override_vif_hw_veb = []</td>
      <td>(ListOpt) Nova compute nodes to manually set VIF type to hw_veb</td>
    </tr>
    <tr>
      <td>[NOVA] node_override_vif_vrouter = []</td>
      <td>(ListOpt) Nova compute nodes to manually set VIF type to vrouter</td>
    </tr>
    <tr>
      <td>[OVS] use_veth_interconnection = False</td>
      <td>(BoolOpt) Use veths instead of patch ports to interconnect the integration bridge to physical bridges.</td>
    </tr>
    <tr>
      <td>[SRIOV_NIC] exclude_devices = []</td>
      <td>(ListOpt) List of &lt;network_device&gt;:&lt;excluded_devices&gt; mapping network_device to the agent's node-specific list of virtual functions that should not be used for virtual networking. excluded_devices is a semicolon separated list of virtual functions (BDF format).to exclude from network_device. The network_device in the mapping should appear in the physical_device_mappings list.</td>
    </tr>
    <tr>
      <td>[SRIOV_NIC] physical_device_mappings = []</td>
      <td>(ListOpt) List of &lt;physical_network&gt;:&lt;network_device&gt; mapping physical network names to the agent's node-specific physical network device of SR-IOV physical function to be used for VLAN networks. All physical networks listed in network_vlan_ranges on the server should have mappings to appropriate interfaces on each agent</td>
    </tr>
    <tr>
      <td>[SYNCMANAGER] enable_sync = False</td>
      <td>(BoolOpt) Nuage plugin will sync resources between openstack and VSD</td>
    </tr>
    <tr>
      <td>[SYNCMANAGER] sync_interval = 0</td>
      <td>(IntOpt) Sync interval in seconds between openstack and VSD. It defines how often the synchronization is done. If not set, value of 0 is assumed and sync will be performed only once, at the Neutron startup time.</td>
    </tr>
    <tr>
      <td>[database] mysql_sql_mode = TRADITIONAL</td>
      <td>(StrOpt) The SQL mode to be used for MySQL sessions. This option, including the default, overrides any server-set SQL mode. To use whatever SQL mode is set by the server configuration, set this to no value. Example: mysql_sql_mode=</td>
    </tr>
    <tr>
      <td>[database] sqlite_db = oslo.sqlite</td>
      <td>(StrOpt) The file name to use with SQLite.</td>
    </tr>
    <tr>
      <td>[database] sqlite_synchronous = True</td>
      <td>(BoolOpt) If True, SQLite uses synchronous mode.</td>
    </tr>
    <tr>
      <td>[general] backlog_processing_interval = 10</td>
      <td>(IntOpt) Time in seconds between renewed scheduling attempts of non-scheduled routers.</td>
    </tr>
    <tr>
      <td>[general] cfg_agent_down_time = 60</td>
      <td>(IntOpt) Seconds of no status update until a cfg agent is considered down.</td>
    </tr>
    <tr>
      <td>[general] default_security_group = mgmt_sec_grp</td>
      <td>(StrOpt) Default security group applied on management port. Default value is mgmt_sec_grp.</td>
    </tr>
    <tr>
      <td>[general] ensure_nova_running = True</td>
      <td>(BoolOpt) Ensure that Nova is running before attempting to create any VM.</td>
    </tr>
    <tr>
      <td>[general] l3_admin_tenant = L3AdminTenant</td>
      <td>(StrOpt) Name of the L3 admin tenant.</td>
    </tr>
    <tr>
      <td>[general] management_network = osn_mgmt_nw</td>
      <td>(StrOpt) Name of management network for device configuration. Default value is osn_mgmt_nw</td>
    </tr>
    <tr>
      <td>[general] service_vm_config_path = /opt/stack/data/neutron/cisco/config_drive</td>
      <td>(StrOpt) Path to config drive files for service VM instances.</td>
    </tr>
    <tr>
      <td>[general] templates_path = /opt/stack/data/neutron/cisco/templates</td>
      <td>(StrOpt) Path to templates for hosting devices.</td>
    </tr>
    <tr>
      <td>[haproxy] send_gratuitous_arp = 3</td>
      <td>(IntOpt) When delete and re-add the same vip, send this many gratuitous ARPs to flush the ARP cache in the Router. Set it below or equal to 0 to disable this feature.</td>
    </tr>
    <tr>
      <td>[hosting_devices] csr1kv_booting_time = 420</td>
      <td>(IntOpt) Booting time in seconds before a CSR1kv becomes operational.</td>
    </tr>
    <tr>
      <td>[hosting_devices] csr1kv_cfgagent_router_driver = neutron.plugins.cisco.cfg_agent.device_drivers.csr1kv.csr1kv_routing_driver.CSR1kvRoutingDriver</td>
      <td>(StrOpt) Config agent driver for CSR1kv.</td>
    </tr>
    <tr>
      <td>[hosting_devices] csr1kv_configdrive_template = csr1kv_cfg_template</td>
      <td>(StrOpt) CSR1kv configdrive template file.</td>
    </tr>
    <tr>
      <td>[hosting_devices] csr1kv_device_driver = neutron.plugins.cisco.l3.hosting_device_drivers.csr1kv_hd_driver.CSR1kvHostingDeviceDriver</td>
      <td>(StrOpt) Hosting device driver for CSR1kv.</td>
    </tr>
    <tr>
      <td>[hosting_devices] csr1kv_flavor = 621</td>
      <td>(StrOpt) UUID of Nova flavor for CSR1kv.</td>
    </tr>
    <tr>
      <td>[hosting_devices] csr1kv_image = csr1kv_openstack_img</td>
      <td>(StrOpt) Name of Glance image for CSR1kv.</td>
    </tr>
    <tr>
      <td>[hosting_devices] csr1kv_password = cisco</td>
      <td>(StrOpt) Password to use for CSR1kv configurations.</td>
    </tr>
    <tr>
      <td>[hosting_devices] csr1kv_plugging_driver = neutron.plugins.cisco.l3.plugging_drivers.n1kv_trunking_driver.N1kvTrunkingPlugDriver</td>
      <td>(StrOpt) Plugging driver for CSR1kv.</td>
    </tr>
    <tr>
      <td>[hosting_devices] csr1kv_username = stack</td>
      <td>(StrOpt) Username to use for CSR1kv configurations.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] check_revocations_for_cached = False</td>
      <td>(BoolOpt) If true, the revocation list will be checked for cached tokens. This requires that PKI tokens are configured on the Keystone server.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] hash_algorithms = ['md5']</td>
      <td>(ListOpt) Hash algorithms to use for hashing PKI tokens. This may be a single algorithm or multiple. The algorithms are those supported by Python standard hashlib.new(). The hashes will be tried in the order given, so put the preferred one first for performance. The result of the first hash will be stored in the cache. This will typically be set to multiple values only while migrating from a less secure algorithm to a more secure one. Once all the old tokens are expired this option should be set to a single value for better performance.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] identity_uri = None</td>
      <td>(StrOpt) Complete admin Identity API endpoint. This should specify the unversioned root endpoint e.g. https://localhost:35357/</td>
    </tr>
    <tr>
      <td>[l3_arista] l3_sync_interval = 180</td>
      <td>(IntOpt) Sync interval in seconds between L3 Service plugin and EOS. This interval defines how often the synchronization is performed. This is an optional field. If not set, a value of 180 seconds is assumed</td>
    </tr>
    <tr>
      <td>[l3_arista] mlag_config = False</td>
      <td>(BoolOpt) This flag is used indicate if Arista Switches are configured in MLAG mode. If yes, all L3 config is pushed to both the switches automatically. If this flag is set to True, ensure to specify IP addresses of both switches. This is optional. If not set, a value of "False" is assumed.</td>
    </tr>
    <tr>
      <td>[l3_arista] primary_l3_host = </td>
      <td>(StrOpt) Arista EOS IP address. This is required field. If not set, all communications to Arista EOS will fail</td>
    </tr>
    <tr>
      <td>[l3_arista] primary_l3_host_password = </td>
      <td>(StrOpt) Password for Arista EOS. This is required field. If not set, all communications to Arista EOS will fail</td>
    </tr>
    <tr>
      <td>[l3_arista] primary_l3_host_username = </td>
      <td>(StrOpt) Username for Arista EOS. This is required field. If not set, all communications to Arista EOS will fail</td>
    </tr>
    <tr>
      <td>[l3_arista] secondary_l3_host = </td>
      <td>(StrOpt) Arista EOS IP address for second Switch MLAGed with the first one. This an optional field, however, if mlag_config flag is set, then this is required. If not set, all communications to Arista EOS will fail</td>
    </tr>
    <tr>
      <td>[l3_arista] use_vrf = False</td>
      <td>(BoolOpt) A "True" value for this flag indicates to create a router in VRF. If not set, all routers are created in default VRF.This is optional. If not set, a value of "False" is assumed.</td>
    </tr>
    <tr>
      <td>[ml2] extension_drivers = []</td>
      <td>(ListOpt) An ordered list of extension driver entrypoints to be loaded from the neutron.ml2.extension_drivers namespace.</td>
    </tr>
    <tr>
      <td>[ml2_brocade] rbridge_id = 1</td>
      <td>(StrOpt) Rbridge id of provider edge router(s)</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_agent_poll_interval = 2</td>
      <td>(FloatOpt) Interval between agent poll for topology (in sec)</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_agent_report_interval = 30</td>
      <td>(FloatOpt) Interval between agent status updates (in sec)</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_app_profile_name = ${apic_system_id}_app</td>
      <td>(StrOpt) Name for the app profile used for Openstack</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_domain_name = ${apic_system_id}</td>
      <td>(StrOpt) Name for the domain created on APIC</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_entity_profile = ${apic_system_id}_entity_profile</td>
      <td>(StrOpt) Name of the entity profile to be created</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_function_profile = ${apic_system_id}_function_profile</td>
      <td>(StrOpt) Name of the function profile to be created</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_host_uplink_ports = []</td>
      <td>(ListOpt) The uplink ports to check for ACI connectivity</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_hosts = []</td>
      <td>(ListOpt) An ordered list of host names or IP addresses of the APIC controller(s).</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_lacp_profile = ${apic_system_id}_lacp_profile</td>
      <td>(StrOpt) Name of the LACP profile to be created</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_name_mapping = use_name</td>
      <td>(StrOpt) Name mapping strategy to use: use_uuid | use_name</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_node_profile = ${apic_system_id}_node_profile</td>
      <td>(StrOpt) Name of the node profile to be created</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_password = None</td>
      <td>(StrOpt) Password for the APIC controller</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_sync_interval = 0</td>
      <td>(IntOpt) Synchronization interval in seconds</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_use_ssl = True</td>
      <td>(BoolOpt) Use SSL to connect to the APIC controller</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_username = None</td>
      <td>(StrOpt) Username for the APIC controller</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_vlan_ns_name = ${apic_system_id}_vlan_ns</td>
      <td>(StrOpt) Name for the vlan namespace to be used for Openstack</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_vlan_range = 2:4093</td>
      <td>(StrOpt) Range of VLAN's to be used for Openstack</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] apic_vpc_pairs = []</td>
      <td>(ListOpt) The switch pairs for VPC connectivity</td>
    </tr>
    <tr>
      <td>[ml2_cisco_apic] root_helper = sudo /usr/local/bin/neutron-rootwrap /etc/neutron/rootwrap.conf</td>
      <td>(StrOpt) Setup root helper as rootwrap or sudo</td>
    </tr>
    <tr>
      <td>[ml2_fslsdn] crd_api_insecure = False</td>
      <td>(BoolOpt) If set, ignore any SSL validation issues</td>
    </tr>
    <tr>
      <td>[ml2_fslsdn] crd_auth_strategy = keystone</td>
      <td>(StrOpt) Auth strategy for connecting to neutron in admin context</td>
    </tr>
    <tr>
      <td>[ml2_fslsdn] crd_auth_url = http://127.0.0.1:5000/v2.0/</td>
      <td>(StrOpt) CRD Auth URL</td>
    </tr>
    <tr>
      <td>[ml2_fslsdn] crd_ca_certificates_file = None</td>
      <td>(StrOpt) Location of ca certificates file to use for CRD client requests.</td>
    </tr>
    <tr>
      <td>[ml2_fslsdn] crd_password = password</td>
      <td>(StrOpt) CRD Service Password</td>
    </tr>
    <tr>
      <td>[ml2_fslsdn] crd_region_name = RegionOne</td>
      <td>(StrOpt) Region name for connecting to CRD Service in admin context</td>
    </tr>
    <tr>
      <td>[ml2_fslsdn] crd_tenant_name = service</td>
      <td>(StrOpt) CRD Tenant Name</td>
    </tr>
    <tr>
      <td>[ml2_fslsdn] crd_url = http://127.0.0.1:9797</td>
      <td>(StrOpt) URL for connecting to CRD service</td>
    </tr>
    <tr>
      <td>[ml2_fslsdn] crd_url_timeout = 30</td>
      <td>(IntOpt) Timeout value for connecting to CRD service in seconds</td>
    </tr>
    <tr>
      <td>[ml2_fslsdn] crd_user_name = crd</td>
      <td>(StrOpt) CRD service Username</td>
    </tr>
    <tr>
      <td>[ml2_sriov] agent_required = False</td>
      <td>(BoolOpt) SRIOV neutron agent is required for port binding</td>
    </tr>
    <tr>
      <td>[ml2_sriov] supported_pci_vendor_devs = ['15b3:1004', '8086:10c9']</td>
      <td>(ListOpt) Supported PCI vendor devices, defined by vendor_id:product_id according to the PCI ID Repository. Default enables support for Intel and Mellanox SR-IOV capable NICs</td>
    </tr>
    <tr>
      <td>[n1kv] management_port_profile = osn_mgmt_pp</td>
      <td>(StrOpt) Name of N1kv port profile for management ports.</td>
    </tr>
    <tr>
      <td>[n1kv] t1_network_profile = osn_t1_np</td>
      <td>(StrOpt) Name of N1kv network profile for T1 networks (i.e., trunk networks for VXLAN segmented traffic).</td>
    </tr>
    <tr>
      <td>[n1kv] t1_port_profile = osn_t1_pp</td>
      <td>(StrOpt) Name of N1kv port profile for T1 ports (i.e., ports carrying traffic from VXLAN segmented networks).</td>
    </tr>
    <tr>
      <td>[n1kv] t2_network_profile = osn_t2_np</td>
      <td>(StrOpt) Name of N1kv network profile for T2 networks (i.e., trunk networks for VLAN segmented traffic).</td>
    </tr>
    <tr>
      <td>[n1kv] t2_port_profile = osn_t2_pp</td>
      <td>(StrOpt) Name of N1kv port profile for T2 ports (i.e., ports carrying traffic from VLAN segmented networks).</td>
    </tr>
    <tr>
      <td>[plumgriddirector] driver = neutron.plugins.plumgrid.drivers.plumlib.Plumlib</td>
      <td>(StrOpt) PLUMgrid Driver</td>
    </tr>
    <tr>
      <td>[radware] ha_secondary_address = None</td>
      <td>(StrOpt) IP address of secondary vDirect server.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] control_exchange</td>
      <td>neutron</td>
      <td>openstack</td>
    </tr>
    <tr>
      <td>[DEFAULT] default_log_levels</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, iso8601=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN</td>
    </tr>
    <tr>
      <td>[DEFAULT] force_gateway_on_subnet</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[DEFAULT] http_timeout</td>
      <td>10</td>
      <td>75</td>
    </tr>
    <tr>
      <td>[DEFAULT] metadata_backlog</td>
      <td>128</td>
      <td>4096</td>
    </tr>
    <tr>
      <td>[DEFAULT] metadata_workers</td>
      <td>0</td>
      <td>2</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_zmq_matchmaker</td>
      <td>neutron.openstack.common.rpc.matchmaker.MatchMakerLocalhost</td>
      <td>oslo.messaging._drivers.matchmaker.MatchMakerLocalhost</td>
    </tr>
    <tr>
      <td>[DEFAULT] send_arp_for_ha</td>
      <td>0</td>
      <td>3</td>
    </tr>
    <tr>
      <td>[CISCO_N1K] poll_duration</td>
      <td>10</td>
      <td>60</td>
    </tr>
    <tr>
      <td>[NOVA] vif_types</td>
      <td>unbound, binding_failed, ovs, ivs, bridge, 802.1qbg, 802.1qbh, hyperv, midonet, mlnx_direct, hostdev, other</td>
      <td>unbound, binding_failed, ovs, ivs, bridge, 802.1qbg, 802.1qbh, hyperv, midonet, mlnx_direct, hostdev, hw_veb, dvs, other, distributed, vrouter</td>
    </tr>
    <tr>
      <td>[QUOTAS] quota_firewall_rule</td>
      <td>-1</td>
      <td>100</td>
    </tr>
    <tr>
      <td>[SDNVE] default_tenant_type</td>
      <td>OF</td>
      <td>OVERLAY</td>
    </tr>
    <tr>
      <td>[database] connection</td>
      <td>sqlite://</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[database] max_overflow</td>
      <td>20</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[database] max_pool_size</td>
      <td>10</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[database] pool_timeout</td>
      <td>10</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[database] slave_connection</td>
      <td></td>
      <td>None</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] revocation_cache_time</td>
      <td>300</td>
      <td>10</td>
    </tr>
    <tr>
      <td>[radware] l2_l3_ctor_params</td>
      <td>{'ha_ip_pool_name': 'default', 'allocate_ha_vrrp': True, 'ha_network_name': 'HA-Network', 'service': '_REPLACE_', 'allocate_ha_ips': True}</td>
      <td>{'ha_network_name': 'HA-Network', 'service': '_REPLACE_', 'ha_ip_pool_name': 'default', 'twoleg_enabled': '_REPLACE_', 'allocate_ha_ips': True, 'allocate_ha_vrrp': True}</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[rpc_notifier2] topics</td>
      <td>[DEFAULT] notification_topics</td>
    </tr>
  </table>
</section>
