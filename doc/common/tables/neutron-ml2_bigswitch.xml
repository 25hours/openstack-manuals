<?xml version="1.0" encoding="UTF-8"?>
        <!-- Warning: Do not edit this file. It is automatically
             generated and your changes will be overwritten.
             The tool to do so lives in the tools directory of this
             repository -->
        <para xmlns="http://docbook.org/ns/docbook" version="5.0">
        <table rules="all" xml:id="config_table_neutron_ml2_bigswitch">
          <caption>Description of configuration options for ml2_bigswitch</caption>
           <col width="50%"/>
           <col width="50%"/>
           <thead>
              <tr>
                  <th>Configuration option = Default value</th>
                  <th>Description</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <th colspan="2">[NOVA]</th>
              </tr>
              <tr>
                       <td>node_override_vif_802.1qbg = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to 802.1qbg</td>
              </tr>
              <tr>
                       <td>node_override_vif_802.1qbh = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to 802.1qbh</td>
              </tr>
              <tr>
                       <td>node_override_vif_binding_failed = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to binding_failed</td>
              </tr>
              <tr>
                       <td>node_override_vif_bridge = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to bridge</td>
              </tr>
              <tr>
                       <td>node_override_vif_hostdev = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to hostdev</td>
              </tr>
              <tr>
                       <td>node_override_vif_hyperv = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to hyperv</td>
              </tr>
              <tr>
                       <td>node_override_vif_ivs = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to ivs</td>
              </tr>
              <tr>
                       <td>node_override_vif_midonet = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to midonet</td>
              </tr>
              <tr>
                       <td>node_override_vif_mlnx_direct = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to mlnx_direct</td>
              </tr>
              <tr>
                       <td>node_override_vif_other = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to other</td>
              </tr>
              <tr>
                       <td>node_override_vif_ovs = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to ovs</td>
              </tr>
              <tr>
                       <td>node_override_vif_unbound = </td>
                       <td>(ListOpt) Nova compute nodes to manually set VIF type to unbound</td>
              </tr>
              <tr>
                       <td>vif_type = ovs</td>
                       <td>(StrOpt) Virtual interface type to configure on Nova compute nodes</td>
              </tr>
              <tr>
                       <td>vif_types = unbound, binding_failed, ovs, ivs, bridge, 802.1qbg, 802.1qbh, hyperv, midonet, mlnx_direct, hostdev, other</td>
                       <td>(ListOpt) List of allowed vif_type values.</td>
              </tr>
              <tr>
                  <th colspan="2">[RESTPROXY]</th>
              </tr>
              <tr>
                       <td>add_meta_server_route = True</td>
                       <td>(BoolOpt) Flag to decide if a route to the metadata server should be injected into the VM</td>
              </tr>
              <tr>
                       <td>auto_sync_on_failure = True</td>
                       <td>(BoolOpt) If neutron fails to create a resource because the backend controller doesn't know of a dependency, automatically trigger a full data synchronization to the controller.</td>
              </tr>
              <tr>
                       <td>cache_connections = True</td>
                       <td>(BoolOpt) Re-use HTTP/HTTPS connections to the controller.</td>
              </tr>
              <tr>
                       <td>consistency_interval = 60</td>
                       <td>(IntOpt) Time between verifications that the backend controller database is consistent with Neutron</td>
              </tr>
              <tr>
                       <td>neutron_id = neutron-ol</td>
                       <td>(StrOpt) User defined identifier for this Neutron deployment</td>
              </tr>
              <tr>
                       <td>no_ssl_validation = False</td>
                       <td>(BoolOpt) Disables SSL certificate validation for controllers</td>
              </tr>
              <tr>
                       <td>server_auth = None</td>
                       <td>(StrOpt) The username and password for authenticating against  the BigSwitch or Floodlight controller.</td>
              </tr>
              <tr>
                       <td>server_ssl = True</td>
                       <td>(BoolOpt) If True, Use SSL when connecting to the BigSwitch or Floodlight controller.</td>
              </tr>
              <tr>
                       <td>server_timeout = 10</td>
                       <td>(IntOpt) Maximum number of seconds to wait for proxy request to connect and complete.</td>
              </tr>
              <tr>
                       <td>servers = localhost:8800</td>
                       <td>(ListOpt) A comma separated list of BigSwitch or Floodlight servers and port numbers. The plugin proxies the requests to the BigSwitch/Floodlight server, which performs the networking configuration. Only oneserver is needed per deployment, but you may wish todeploy multiple servers to support failover.</td>
              </tr>
              <tr>
                       <td>ssl_cert_directory = /etc/neutron/plugins/bigswitch/ssl</td>
                       <td>(StrOpt) Directory containing ca_certs and host_certs certificate directories.</td>
              </tr>
              <tr>
                       <td>ssl_sticky = True</td>
                       <td>(BoolOpt) Trust and store the first certificate received for each controller address and use it to validate future connections to that address.</td>
              </tr>
              <tr>
                       <td>sync_data = False</td>
                       <td>(BoolOpt) Sync data on connect</td>
              </tr>
              <tr>
                       <td>thread_pool_size = 4</td>
                       <td>(IntOpt) Maximum number of threads to spawn to handle large volumes of port creations.</td>
              </tr>
              <tr>
                  <th colspan="2">[RESTPROXYAGENT]</th>
              </tr>
              <tr>
                       <td>integration_bridge = br-int</td>
                       <td>(StrOpt) Name of integration bridge on compute nodes used for security group insertion.</td>
              </tr>
              <tr>
                       <td>polling_interval = 5</td>
                       <td>(IntOpt) Seconds between agent checks for port changes</td>
              </tr>
              <tr>
                       <td>virtual_switch_type = ovs</td>
                       <td>(StrOpt) Virtual switch type.</td>
              </tr>
              <tr>
                  <th colspan="2">[ROUTER]</th>
              </tr>
              <tr>
                       <td>max_router_rules = 200</td>
                       <td>(IntOpt) Maximum number of router rules</td>
              </tr>
              <tr>
                       <td>tenant_default_router_rule = ['*:any:any:permit']</td>
                       <td>(MultiStrOpt) The default router rules installed in new tenant routers. Repeat the config option for each rule. Format is &lt;tenant&gt;:&lt;source&gt;:&lt;destination&gt;:&lt;action&gt; Use an * to specify default for all tenants.</td>
              </tr>
       </tbody>
        </table>
        </para>
