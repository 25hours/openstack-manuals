<?xml version='1.0' encoding='UTF-8'?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_nova_compute">
    <caption>Description of configuration options for compute</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td>compute_available_monitors = ['nova.compute.monitors.all_monitors']</td>
        <td>(MultiStrOpt) Monitor classes available to the compute which may be specified more than once.</td>
      </tr>
      <tr>
        <td>compute_driver = None</td>
        <td>(StrOpt) Driver to use for controlling virtualization. Options include: libvirt.LibvirtDriver, xenapi.XenAPIDriver, fake.FakeDriver, baremetal.BareMetalDriver, vmwareapi.VMwareVCDriver, hyperv.HyperVDriver</td>
      </tr>
      <tr>
        <td>compute_manager = nova.compute.manager.ComputeManager</td>
        <td>(StrOpt) Full class name for the Manager for compute</td>
      </tr>
      <tr>
        <td>compute_monitors = </td>
        <td>(ListOpt) A list of monitors that can be used for getting compute metrics.</td>
      </tr>
      <tr>
        <td>compute_resources = vcpu</td>
        <td>(ListOpt) The names of the extra resources to track.</td>
      </tr>
      <tr>
        <td>compute_stats_class = nova.compute.stats.Stats</td>
        <td>(StrOpt) Class that will manage stats for the local compute host</td>
      </tr>
      <tr>
        <td>console_host = localhost</td>
        <td>(StrOpt) Console proxy host to use to connect to instances on this host.</td>
      </tr>
      <tr>
        <td>console_manager = nova.console.manager.ConsoleProxyManager</td>
        <td>(StrOpt) Full class name for the Manager for console proxy</td>
      </tr>
      <tr>
        <td>default_flavor = m1.small</td>
        <td>(StrOpt) Default flavor to use for the EC2 API only. The Nova API does not support a default flavor.</td>
      </tr>
      <tr>
        <td>default_notification_level = INFO</td>
        <td>(StrOpt) Default notification level for outgoing notifications</td>
      </tr>
      <tr>
        <td>default_publisher_id = None</td>
        <td>(StrOpt) Default publisher_id for outgoing notifications</td>
      </tr>
      <tr>
        <td>enable_instance_password = True</td>
        <td>(BoolOpt) Enables returning of the instance password by the relevant server API calls such as create, rebuild or rescue, If the hypervisor does not support password injection then the password returned will not be correct</td>
      </tr>
      <tr>
        <td>heal_instance_info_cache_interval = 60</td>
        <td>(IntOpt) Number of seconds between instance info_cache self healing updates</td>
      </tr>
      <tr>
        <td>image_cache_manager_interval = 2400</td>
        <td>(IntOpt) Number of seconds to wait between runs of the image cache manager. Set to -1 to disable. Setting this to 0 will disable, but this will change in the K release to mean "run at the default rate".</td>
      </tr>
      <tr>
        <td>image_cache_subdirectory_name = _base</td>
        <td>(StrOpt) Where cached images are stored under $instances_path. This is NOT the full path - just a folder name. For per-compute-host cached images, set to _base_$my_ip</td>
      </tr>
      <tr>
        <td>instance_build_timeout = 0</td>
        <td>(IntOpt) Amount of time in seconds an instance can be in BUILD before going into ERROR status.Set to 0 to disable.</td>
      </tr>
      <tr>
        <td>instance_delete_interval = 300</td>
        <td>(IntOpt) Interval in seconds for retrying failed instance file deletes</td>
      </tr>
      <tr>
        <td>instance_usage_audit = False</td>
        <td>(BoolOpt) Generate periodic compute.instance.exists notifications</td>
      </tr>
      <tr>
        <td>instance_usage_audit_period = month</td>
        <td>(StrOpt) Time period to generate instance usages for.  Time period must be hour, day, month or year</td>
      </tr>
      <tr>
        <td>instances_path = $state_path/instances</td>
        <td>(StrOpt) Where instances are stored on disk</td>
      </tr>
      <tr>
        <td>maximum_instance_delete_attempts = 5</td>
        <td>(IntOpt) The number of times to attempt to reap an instance's files.</td>
      </tr>
      <tr>
        <td>reboot_timeout = 0</td>
        <td>(IntOpt) Automatically hard reboot an instance if it has been stuck in a rebooting state longer than N seconds. Set to 0 to disable.</td>
      </tr>
      <tr>
        <td>reclaim_instance_interval = 0</td>
        <td>(IntOpt) Interval in seconds for reclaiming deleted instances</td>
      </tr>
      <tr>
        <td>resize_confirm_window = 0</td>
        <td>(IntOpt) Automatically confirm resizes after N seconds. Set to 0 to disable.</td>
      </tr>
      <tr>
        <td>resume_guests_state_on_host_boot = False</td>
        <td>(BoolOpt) Whether to start guests that were running before the host rebooted</td>
      </tr>
      <tr>
        <td>running_deleted_instance_action = reap</td>
        <td>(StrOpt) Action to take if a running deleted instance is detected.Valid options are 'noop', 'log', 'shutdown', or 'reap'. Set to 'noop' to take no action.</td>
      </tr>
      <tr>
        <td>running_deleted_instance_poll_interval = 1800</td>
        <td>(IntOpt) Number of seconds to wait between runs of the cleanup task.</td>
      </tr>
      <tr>
        <td>running_deleted_instance_timeout = 0</td>
        <td>(IntOpt) Number of seconds after being deleted when a running instance should be considered eligible for cleanup.</td>
      </tr>
      <tr>
        <td>shelved_offload_time = 0</td>
        <td>(IntOpt) Time in seconds before a shelved instance is eligible for removing from a host.  -1 never offload, 0 offload when shelved</td>
      </tr>
      <tr>
        <td>shelved_poll_interval = 3600</td>
        <td>(IntOpt) Interval in seconds for polling shelved instances to offload. Set to -1 to disable.Setting this to 0 will disable, but this will change in Juno to mean "run at the default rate".</td>
      </tr>
      <tr>
        <td>sync_power_state_interval = 600</td>
        <td>(IntOpt) Interval to sync power states between the database and the hypervisor. Set to -1 to disable. Setting this to 0 will disable, but this will change in Juno to mean "run at the default rate".</td>
      </tr>
      <tr>
        <td>vif_plugging_is_fatal = True</td>
        <td>(BoolOpt) Fail instance boot if vif plugging fails</td>
      </tr>
      <tr>
        <td>vif_plugging_timeout = 300</td>
        <td>(IntOpt) Number of seconds to wait for neutron vif plugging events to arrive before continuing or failing (see vif_plugging_is_fatal). If this is set to zero and vif_plugging_is_fatal is False, events should not be expected to arrive at all.</td>
      </tr>
    </tbody>
  </table>
</para>
