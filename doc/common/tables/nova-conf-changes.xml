<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="nova-conf-changes-master">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Juno for OpenStack Compute</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] baremetal_scheduler_default_filters = ['RetryFilter', 'AvailabilityZoneFilter', 'ComputeFilter', 'ComputeCapabilitiesFilter', 'ImagePropertiesFilter', 'ExactRamFilter', 'ExactDiskFilter', 'ExactCoreFilter']</td>
      <td>(ListOpt) Which filter class names to use for filtering baremetal hosts when not specified in the request.</td>
    </tr>
    <tr>
      <td>[DEFAULT] block_device_allocate_retries = 60</td>
      <td>(IntOpt) Number of times to retry block device allocation on failures</td>
    </tr>
    <tr>
      <td>[DEFAULT] block_device_allocate_retries_interval = 3</td>
      <td>(IntOpt) Waiting time interval (seconds) between block device allocation retries on failures</td>
    </tr>
    <tr>
      <td>[DEFAULT] compute_resources = ['vcpu']</td>
      <td>(ListOpt) The names of the extra resources to track.</td>
    </tr>
    <tr>
      <td>[DEFAULT] quota_injected_file_path_length = 255</td>
      <td>(IntOpt) Length of injected file path</td>
    </tr>
    <tr>
      <td>[DEFAULT] scheduler_use_baremetal_filters = False</td>
      <td>(BoolOpt) Flag to decide whether to use baremetal_scheduler_default_filters or not.</td>
    </tr>
    <tr>
      <td>[DEFAULT] shutdown_timeout = 60</td>
      <td>(IntOpt) Total amount of time to wait in seconds for an instance to perform a clean shutdown.</td>
    </tr>
    <tr>
      <td>[cinder] api_insecure = False</td>
      <td>(BoolOpt) Allow to perform insecure SSL requests to cinder</td>
    </tr>
    <tr>
      <td>[cinder] ca_certificates_file = None</td>
      <td>(StrOpt) Location of ca certificates file to use for cinder client requests.</td>
    </tr>
    <tr>
      <td>[cinder] catalog_info = volume:cinder:publicURL</td>
      <td>(StrOpt) Info to match when looking for cinder in the service catalog. Format is: separated values of the form: &lt;service_type&gt;:&lt;service_name&gt;:&lt;endpoint_type&gt;</td>
    </tr>
    <tr>
      <td>[cinder] cross_az_attach = True</td>
      <td>(BoolOpt) Allow attach between instance and volume in different availability zones.</td>
    </tr>
    <tr>
      <td>[cinder] endpoint_template = None</td>
      <td>(StrOpt) Override service catalog lookup with template for cinder endpoint e.g. http://localhost:8776/v1/%(project_id)s</td>
    </tr>
    <tr>
      <td>[cinder] http_retries = 3</td>
      <td>(IntOpt) Number of cinderclient retries on failed http calls</td>
    </tr>
    <tr>
      <td>[cinder] http_timeout = None</td>
      <td>(IntOpt) HTTP inactivity timeout (in seconds)</td>
    </tr>
    <tr>
      <td>[cinder] os_region_name = None</td>
      <td>(StrOpt) Region name of this node</td>
    </tr>
    <tr>
      <td>[database] use_tpool = False</td>
      <td>(BoolOpt) Enable the experimental use of thread pooling for all DB API calls</td>
    </tr>
    <tr>
      <td>[ephemeral_storage_encryption] cipher = aes-xts-plain64</td>
      <td>(StrOpt) The cipher and mode to be used to encrypt ephemeral storage. Which ciphers are available ciphers depends on kernel support. See /proc/crypto for the list of available options.</td>
    </tr>
    <tr>
      <td>[ephemeral_storage_encryption] enabled = False</td>
      <td>(BoolOpt) Whether to encrypt ephemeral storage</td>
    </tr>
    <tr>
      <td>[ephemeral_storage_encryption] key_size = 512</td>
      <td>(IntOpt) The bit length of the encryption key to be used to encrypt ephemeral storage (in XTS mode only half of the bits are used for encryption key)</td>
    </tr>
    <tr>
      <td>[glance] allowed_direct_url_schemes = []</td>
      <td>(ListOpt) A list of url scheme that can be downloaded directly via the direct_url.  Currently supported schemes: [file].</td>
    </tr>
    <tr>
      <td>[glance] api_insecure = False</td>
      <td>(BoolOpt) Allow to perform insecure SSL (https) requests to glance</td>
    </tr>
    <tr>
      <td>[glance] api_servers = None</td>
      <td>(ListOpt) A list of the glance api servers available to nova. Prefix with https:// for ssl-based glance api servers. ([hostname|ip]:port)</td>
    </tr>
    <tr>
      <td>[glance] host = $my_ip</td>
      <td>(StrOpt) Default glance hostname or IP address</td>
    </tr>
    <tr>
      <td>[glance] num_retries = 0</td>
      <td>(IntOpt) Number of retries when downloading an image from glance</td>
    </tr>
    <tr>
      <td>[glance] port = 9292</td>
      <td>(IntOpt) Default glance port</td>
    </tr>
    <tr>
      <td>[glance] protocol = http</td>
      <td>(StrOpt) Default protocol to use when connecting to glance. Set to https for SSL.</td>
    </tr>
    <tr>
      <td>[hyperv] wait_soft_reboot_seconds = 60</td>
      <td>(IntOpt) Number of seconds to wait for instance to shut down after soft reboot request is made. We fall back to hard reboot if instance does not shutdown within this window.</td>
    </tr>
    <tr>
      <td>[ironic] admin_auth_token = None</td>
      <td>(StrOpt) Ironic keystone auth token.</td>
    </tr>
    <tr>
      <td>[ironic] admin_password = None</td>
      <td>(StrOpt) Ironic keystone admin password.</td>
    </tr>
    <tr>
      <td>[ironic] admin_tenant_name = None</td>
      <td>(StrOpt) Ironic keystone tenant name.</td>
    </tr>
    <tr>
      <td>[ironic] admin_url = None</td>
      <td>(StrOpt) Keystone public API endpoint.</td>
    </tr>
    <tr>
      <td>[ironic] admin_username = None</td>
      <td>(StrOpt) Ironic keystone admin name</td>
    </tr>
    <tr>
      <td>[ironic] api_endpoint = None</td>
      <td>(StrOpt) URL for Ironic API endpoint.</td>
    </tr>
    <tr>
      <td>[ironic] api_max_retries = 60</td>
      <td>(IntOpt) How many retries when a request does conflict.</td>
    </tr>
    <tr>
      <td>[ironic] api_retry_interval = 2</td>
      <td>(IntOpt) How often to retry in seconds when a request does conflict</td>
    </tr>
    <tr>
      <td>[ironic] api_version = 1</td>
      <td>(IntOpt) Version of Ironic API service endpoint.</td>
    </tr>
    <tr>
      <td>[ironic] client_log_level = None</td>
      <td>(StrOpt) Log level override for ironicclient. Set this in order to override the global "default_log_levels", "verbose", and "debug" settings.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] check_revocations_for_cached = False</td>
      <td>(BoolOpt) If true, the revocation list will be checked for cached tokens. This requires that PKI tokens are configured on the Keystone server.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] hash_algorithms = ['md5']</td>
      <td>(ListOpt) Hash algorithms to use for hashing PKI tokens. This may be a single algorithm or multiple. The algorithms are those supported by Python standard hashlib.new(). The hashes will be tried in the order given, so put the preferred one first for performance. The result of the first hash will be stored in the cache. This will typically be set to multiple values only while migrating from a less secure algorithm to a more secure one. Once all the old tokens are expired this option should be set to a single value for better performance.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] identity_uri = None</td>
      <td>(StrOpt) Complete admin Identity API endpoint. This should specify the unversioned root endpoint e.g. https://localhost:35357/</td>
    </tr>
    <tr>
      <td>[libvirt] gid_maps = []</td>
      <td>(ListOpt) List of guid targets and ranges.Syntax is guest-gid:host-gid:countMaximum of 5 allowed.</td>
    </tr>
    <tr>
      <td>[libvirt] hw_machine_type = None</td>
      <td>(ListOpt) For qemu or KVM guests, set this option to specify a default machine type per host architecture. You can find a list of supported machine types in your environment by checking the output of the "virsh capabilities"command. The format of the value for this config option is host-arch=machine-type. For example: x86_64=machinetype1,armv7l=machinetype2</td>
    </tr>
    <tr>
      <td>[libvirt] mem_stats_period_seconds = 10</td>
      <td>(IntOpt) A number of seconds to memory usage statistics period. Zero or negative value mean to disable memory usage statistics.</td>
    </tr>
    <tr>
      <td>[libvirt] sysinfo_serial = auto</td>
      <td>(StrOpt) The data source used to the populate the host "serial" UUID exposed to guest in the virtual BIOS. Permitted options are "hardware", "os", "none" or "auto" (default).</td>
    </tr>
    <tr>
      <td>[libvirt] uid_maps = []</td>
      <td>(ListOpt) List of uid targets and ranges.Syntax is guest-uid:host-uid:countMaximum of 5 allowed.</td>
    </tr>
    <tr>
      <td>[neutron] admin_auth_url = http://localhost:5000/v2.0</td>
      <td>(StrOpt) Authorization URL for connecting to neutron in admin context</td>
    </tr>
    <tr>
      <td>[neutron] admin_password = None</td>
      <td>(StrOpt) Password for connecting to neutron in admin context</td>
    </tr>
    <tr>
      <td>[neutron] admin_tenant_id = None</td>
      <td>(StrOpt) Tenant id for connecting to neutron in admin context</td>
    </tr>
    <tr>
      <td>[neutron] admin_tenant_name = None</td>
      <td>(StrOpt) Tenant name for connecting to neutron in admin context. This option will be ignored if neutron_admin_tenant_id is set. Note that with Keystone V3 tenant names are only unique within a domain.</td>
    </tr>
    <tr>
      <td>[neutron] admin_user_id = None</td>
      <td>(StrOpt) User id for connecting to neutron in admin context</td>
    </tr>
    <tr>
      <td>[neutron] admin_username = None</td>
      <td>(StrOpt) Username for connecting to neutron in admin context</td>
    </tr>
    <tr>
      <td>[neutron] allow_duplicate_networks = False</td>
      <td>(BoolOpt) Allow an instance to have multiple vNICs attached to the same Neutron network.</td>
    </tr>
    <tr>
      <td>[neutron] api_insecure = False</td>
      <td>(BoolOpt) If set, ignore any SSL validation issues</td>
    </tr>
    <tr>
      <td>[neutron] auth_strategy = keystone</td>
      <td>(StrOpt) Authorization strategy for connecting to neutron in admin context</td>
    </tr>
    <tr>
      <td>[neutron] ca_certificates_file = None</td>
      <td>(StrOpt) Location of CA certificates file to use for neutron client requests.</td>
    </tr>
    <tr>
      <td>[neutron] extension_sync_interval = 600</td>
      <td>(IntOpt) Number of seconds before querying neutron for extensions</td>
    </tr>
    <tr>
      <td>[neutron] metadata_proxy_shared_secret = </td>
      <td>(StrOpt) Shared secret to validate proxies Neutron metadata requests</td>
    </tr>
    <tr>
      <td>[neutron] ovs_bridge = br-int</td>
      <td>(StrOpt) Name of Integration Bridge used by Open vSwitch</td>
    </tr>
    <tr>
      <td>[neutron] region_name = None</td>
      <td>(StrOpt) Region name for connecting to neutron in admin context</td>
    </tr>
    <tr>
      <td>[neutron] service_metadata_proxy = False</td>
      <td>(BoolOpt) Set flag to indicate Neutron will proxy metadata requests and resolve instance ids.</td>
    </tr>
    <tr>
      <td>[neutron] url = http://127.0.0.1:9696</td>
      <td>(StrOpt) URL for connecting to neutron</td>
    </tr>
    <tr>
      <td>[neutron] url_timeout = 30</td>
      <td>(IntOpt) Timeout value for connecting to neutron in seconds</td>
    </tr>
    <tr>
      <td>[serial_console] base_url = http://127.0.0.1:6083/</td>
      <td>(StrOpt) Location of serial console proxy.</td>
    </tr>
    <tr>
      <td>[serial_console] enabled = False</td>
      <td>(BoolOpt) Enable serial console related features</td>
    </tr>
    <tr>
      <td>[serial_console] listen = 127.0.0.1</td>
      <td>(StrOpt) IP address on which instance serial console should listen</td>
    </tr>
    <tr>
      <td>[serial_console] port_range = 10000:20000</td>
      <td>(StrOpt) Range of TCP ports to use for serial ports on compute hosts</td>
    </tr>
    <tr>
      <td>[serial_console] proxyclient_address = 127.0.0.1</td>
      <td>(StrOpt) The address to which proxy clients (like nova-serialproxy) should connect</td>
    </tr>
    <tr>
      <td>[vmware] host_port = 443</td>
      <td>(IntOpt) Port for connection to VMware VC host.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] auth_strategy</td>
      <td>noauth</td>
      <td>keystone</td>
    </tr>
    <tr>
      <td>[DEFAULT] default_log_levels</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, keystonemiddleware=WARN, routes.middleware=WARN</td>
    </tr>
    <tr>
      <td>[DEFAULT] dhcp_lease_time</td>
      <td>120</td>
      <td>86400</td>
    </tr>
    <tr>
      <td>[DEFAULT] logging_context_format_string</td>
      <td>%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user)s %(tenant)s] %(instance)s%(message)s</td>
      <td>%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s</td>
    </tr>
    <tr>
      <td>[database] mysql_sql_mode</td>
      <td>None</td>
      <td>TRADITIONAL</td>
    </tr>
    <tr>
      <td>[database] sqlite_db</td>
      <td>nova.sqlite</td>
      <td>oslo.sqlite</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] revocation_cache_time</td>
      <td>300</td>
      <td>10</td>
    </tr>
    <tr>
      <td>[libvirt] block_migration_flag</td>
      <td>VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER, VIR_MIGRATE_NON_SHARED_INC</td>
      <td>VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER, VIR_MIGRATE_LIVE, VIR_MIGRATE_TUNNELLED, VIR_MIGRATE_NON_SHARED_INC</td>
    </tr>
    <tr>
      <td>[libvirt] live_migration_flag</td>
      <td>VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER</td>
      <td>VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER, VIR_MIGRATE_LIVE, VIR_MIGRATE_TUNNELLED</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] cinder_api_insecure</td>
      <td>[cinder] api_insecure</td>
    </tr>
    <tr>
      <td>[DEFAULT] quota_injected_file_path_bytes</td>
      <td>[DEFAULT] quota_injected_file_path_length</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_url</td>
      <td>[neutron] url</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_ca_certificates_file</td>
      <td>[neutron] ca_certificates_file</td>
    </tr>
    <tr>
      <td>[DEFAULT] cinder_ca_certificates_file</td>
      <td>[cinder] ca_certificates_file</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_api_insecure</td>
      <td>[neutron] api_insecure</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_admin_username</td>
      <td>[neutron] admin_username</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_auth_strategy</td>
      <td>[neutron] auth_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] glance_api_servers</td>
      <td>[glance] api_servers</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_admin_tenant_id</td>
      <td>[neutron] admin_tenant_id</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_admin_tenant_name</td>
      <td>[neutron] admin_tenant_name</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_metadata_proxy_shared_secret</td>
      <td>[neutron] metadata_proxy_shared_secret</td>
    </tr>
    <tr>
      <td>[DEFAULT] cinder_cross_az_attach</td>
      <td>[cinder] cross_az_attach</td>
    </tr>
    <tr>
      <td>[DEFAULT] glance_port</td>
      <td>[glance] port</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_region_name</td>
      <td>[neutron] region_name</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_admin_password</td>
      <td>[neutron] admin_password</td>
    </tr>
    <tr>
      <td>[DEFAULT] glance_num_retries</td>
      <td>[glance] num_retries</td>
    </tr>
    <tr>
      <td>[DEFAULT] service_neutron_metadata_proxy</td>
      <td>[neutron] service_metadata_proxy</td>
    </tr>
    <tr>
      <td>[DEFAULT] glance_protocol</td>
      <td>[glance] protocol</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_ovs_bridge</td>
      <td>[neutron] ovs_bridge</td>
    </tr>
    <tr>
      <td>[DEFAULT] glance_api_insecure</td>
      <td>[glance] api_insecure</td>
    </tr>
    <tr>
      <td>[DEFAULT] cinder_http_retries</td>
      <td>[cinder] http_retries</td>
    </tr>
    <tr>
      <td>[DEFAULT] glance_host</td>
      <td>[glance] host</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_admin_auth_url</td>
      <td>[neutron] admin_auth_url</td>
    </tr>
    <tr>
      <td>[DEFAULT] cinder_endpoint_template</td>
      <td>[cinder] endpoint_template</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_extension_sync_interval</td>
      <td>[neutron] extension_sync_interval</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_url_timeout</td>
      <td>[neutron] url_timeout</td>
    </tr>
    <tr>
      <td>[DEFAULT] os_region_name</td>
      <td>[cinder] os_region_name</td>
    </tr>
    <tr>
      <td>[DEFAULT] cinder_catalog_info</td>
      <td>[cinder] catalog_info</td>
    </tr>
  </table>
</section>
