<?xml version='1.0' encoding='UTF-8'?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_nova_livemigration">
    <caption>Description of live migration configuration options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td><option>live_migration_retry_count</option> = <replaceable>30</replaceable></td>
        <td>(IntOpt) Number of 1 second retries needed in live_migration</td>
      </tr>
      <tr>
        <td><option>max_concurrent_live_migrations</option> = <replaceable>1</replaceable></td>
        <td>(IntOpt) Maximum number of live migrations to run concurrently. This limit is enforced to avoid outbound live migrations overwhelming the host/network and causing failures. It is not recommended that you change this unless you are very sure that doing so is safe and stable in your environment.</td>
      </tr>
      <tr>
        <th colspan="2">[libvirt]</th>
      </tr>
      <tr>
        <td><option>live_migration_bandwidth</option> = <replaceable>0</replaceable></td>
        <td>(IntOpt) Maximum bandwidth(in MiB/s) to be used during migration. If set to 0, will choose a suitable default. Some hypervisors do not support this feature and will return an error if bandwidth is not 0. Please refer to the libvirt documentation for further details</td>
      </tr>
      <tr>
        <td><option>live_migration_completion_timeout</option> = <replaceable>800</replaceable></td>
        <td>(IntOpt) Time to wait, in seconds, for migration to successfully complete transferring data before aborting the operation. Value is per GiB of guest RAM + disk to be transferred, with lower bound of a minimum of 2 GiB. Should usually be larger than downtime delay * downtime steps. Set to 0 to disable timeouts.</td>
      </tr>
      <tr>
        <td><option>live_migration_downtime</option> = <replaceable>500</replaceable></td>
        <td>(IntOpt) Maximum permitted downtime, in milliseconds, for live migration switchover. Will be rounded up to a minimum of 100ms. Use a large value if guest liveness is unimportant.</td>
      </tr>
      <tr>
        <td><option>live_migration_downtime_delay</option> = <replaceable>75</replaceable></td>
        <td>(IntOpt) Time to wait, in seconds, between each step increase of the migration downtime. Minimum delay is 10 seconds. Value is per GiB of guest RAM + disk to be transferred, with lower bound of a minimum of 2 GiB per device</td>
      </tr>
      <tr>
        <td><option>live_migration_downtime_steps</option> = <replaceable>10</replaceable></td>
        <td>(IntOpt) Number of incremental steps to reach max downtime value. Will be rounded up to a minimum of 3 steps</td>
      </tr>
      <tr>
        <td><option>live_migration_flag</option> = <replaceable>VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER, VIR_MIGRATE_LIVE, VIR_MIGRATE_TUNNELLED</replaceable></td>
        <td>(StrOpt) Migration flags to be set for live migration</td>
      </tr>
      <tr>
        <td><option>live_migration_progress_timeout</option> = <replaceable>150</replaceable></td>
        <td>(IntOpt) Time to wait, in seconds, for migration to make forward progress in transferring data before aborting the operation. Set to 0 to disable timeouts.</td>
      </tr>
      <tr>
        <td><option>live_migration_uri</option> = <replaceable>qemu+tcp://%s/system</replaceable></td>
        <td>(StrOpt) Migration target URI (any included "%s" is replaced with the migration target hostname)</td>
      </tr>
    </tbody>
  </table>
</para>
