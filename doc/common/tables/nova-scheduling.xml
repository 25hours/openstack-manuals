<?xml version="1.0" encoding="UTF-8"?>
        <!-- Warning: Do not edit this file. It is automatically
             generated and your changes will be overwritten.
             The tool to do so lives in the tools directory of this
             repository -->
        <para xmlns="http://docbook.org/ns/docbook" version="5.0">
        <table rules="all">
          <caption>Description of configuration options for scheduling</caption>
           <col width="50%"/>
           <col width="50%"/>
           <thead>
              <tr>
                  <th>Configuration option = Default value</th>
                  <th>Description</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <th colspan="2">[DEFAULT]</th>
              </tr>
              <tr>
                       <td>aggregate_image_properties_isolation_namespace = None</td>
                       <td>(StrOpt) Force the filter to consider only keys matching the given namespace.</td>
              </tr>
              <tr>
                       <td>aggregate_image_properties_isolation_separator = .</td>
                       <td>(StrOpt) The separator used between the namespace and keys</td>
              </tr>
              <tr>
                       <td>cpu_allocation_ratio = 16.0</td>
                       <td>(FloatOpt) Virtual CPU to physical CPU allocation ratio which affects all CPU filters. This configuration specifies a global ratio for CoreFilter. For AggregateCoreFilter, it will fall back to this configuration value if no per-aggregate setting found.</td>
              </tr>
              <tr>
                       <td>disk_allocation_ratio = 1.0</td>
                       <td>(FloatOpt) virtual disk to physical disk allocation ratio</td>
              </tr>
              <tr>
                       <td>isolated_hosts = </td>
                       <td>(ListOpt) Host reserved for specific images</td>
              </tr>
              <tr>
                       <td>isolated_images = </td>
                       <td>(ListOpt) Images to run on isolated host</td>
              </tr>
              <tr>
                       <td>max_instances_per_host = 50</td>
                       <td>(IntOpt) Ignore hosts that have too many instances</td>
              </tr>
              <tr>
                       <td>max_io_ops_per_host = 8</td>
                       <td>(IntOpt) Ignore hosts that have too many builds/resizes/snaps/migrations</td>
              </tr>
              <tr>
                       <td>ram_allocation_ratio = 1.5</td>
                       <td>(FloatOpt) Virtual ram to physical ram allocation ratio which affects all ram filters. This configuration specifies a global ratio for RamFilter. For AggregateRamFilter, it will fall back to this configuration value if no per-aggregate setting found.</td>
              </tr>
              <tr>
                       <td>ram_weight_multiplier = 1.0</td>
                       <td>(FloatOpt) Multiplier used for weighing ram.  Negative numbers mean to stack vs spread.</td>
              </tr>
              <tr>
                       <td>reserved_host_disk_mb = 0</td>
                       <td>(IntOpt) Amount of disk in MB to reserve for the host</td>
              </tr>
              <tr>
                       <td>reserved_host_memory_mb = 512</td>
                       <td>(IntOpt) Amount of memory in MB to reserve for the host</td>
              </tr>
              <tr>
                       <td>restrict_isolated_hosts_to_isolated_images = True</td>
                       <td>(BoolOpt) Whether to force isolated hosts to run only isolated images</td>
              </tr>
              <tr>
                       <td>scheduler_available_filters = ['nova.scheduler.filters.all_filters']</td>
                       <td>(MultiStrOpt) Filter classes available to the scheduler which may be specified more than once.  An entry of "nova.scheduler.filters.standard_filters" maps to all filters included with nova.</td>
              </tr>
              <tr>
                       <td>scheduler_default_filters = RetryFilter, AvailabilityZoneFilter, RamFilter, ComputeFilter, ComputeCapabilitiesFilter, ImagePropertiesFilter</td>
                       <td>(ListOpt) Which filter class names to use for filtering hosts when not specified in the request.</td>
              </tr>
              <tr>
                       <td>scheduler_driver = nova.scheduler.filter_scheduler.FilterScheduler</td>
                       <td>(StrOpt) Default driver to use for the scheduler</td>
              </tr>
              <tr>
                       <td>scheduler_host_manager = nova.scheduler.host_manager.HostManager</td>
                       <td>(StrOpt) The scheduler host manager class to use</td>
              </tr>
              <tr>
                       <td>scheduler_host_subset_size = 1</td>
                       <td>(IntOpt) New instances will be scheduled on a host chosen randomly from a subset of the N best hosts. This property defines the subset size that a host is chosen from. A value of 1 chooses the first host returned by the weighing functions. This value must be at least 1. Any value less than 1 will be ignored, and 1 will be used instead</td>
              </tr>
              <tr>
                       <td>scheduler_json_config_location = </td>
                       <td>(StrOpt) Absolute path to scheduler configuration JSON file.</td>
              </tr>
              <tr>
                       <td>scheduler_manager = nova.scheduler.manager.SchedulerManager</td>
                       <td>(StrOpt) full class name for the Manager for scheduler</td>
              </tr>
              <tr>
                       <td>scheduler_max_attempts = 3</td>
                       <td>(IntOpt) Maximum number of attempts to schedule an instance</td>
              </tr>
              <tr>
                       <td>scheduler_topic = scheduler</td>
                       <td>(StrOpt) the topic scheduler nodes listen on</td>
              </tr>
              <tr>
                       <td>scheduler_weight_classes = nova.scheduler.weights.all_weighers</td>
                       <td>(ListOpt) Which weight class names to use for weighing hosts</td>
              </tr>
              <tr>
                  <th colspan="2">[cells]</th>
              </tr>
              <tr>
                       <td>ram_weight_multiplier = 10.0</td>
                       <td>(FloatOpt) Multiplier used for weighing ram.  Negative numbers mean to stack vs spread.</td>
              </tr>
              <tr>
                       <td>scheduler_filter_classes = nova.cells.filters.all_filters</td>
                       <td>(ListOpt) Filter classes the cells scheduler should use.  An entry of "nova.cells.filters.all_filters"maps to all cells filters included with nova.</td>
              </tr>
              <tr>
                       <td>scheduler_retries = 10</td>
                       <td>(IntOpt) How many retries when no cells are available.</td>
              </tr>
              <tr>
                       <td>scheduler_retry_delay = 2</td>
                       <td>(IntOpt) How often to retry in seconds when no cells are available.</td>
              </tr>
              <tr>
                       <td>scheduler_weight_classes = nova.cells.weights.all_weighers</td>
                       <td>(ListOpt) Weigher classes the cells scheduler should use.  An entry of "nova.cells.weights.all_weighers"maps to all cell weighers included with nova.</td>
              </tr>
              <tr>
                  <th colspan="2">[metrics]</th>
              </tr>
              <tr>
                       <td>weight_multiplier = 1.0</td>
                       <td>(FloatOpt) Multiplier used for weighing metrics.</td>
              </tr>
              <tr>
                       <td>weight_setting = </td>
                       <td>(ListOpt) How the metrics are going to be weighed. This should be in the form of "&lt;name1&gt;=&lt;ratio1&gt;, &lt;name2&gt;=&lt;ratio2&gt;, ...", where &lt;nameX&gt; is one of the metric to be weighed, and &lt;ratioX&gt; is the corresponding ratio. So for "name1=1.0, name2=-1.0" The final weight would be name1.value * 1.0 + name2.value * -1.0.</td>
              </tr>
       </tbody>
        </table>
        </para>
