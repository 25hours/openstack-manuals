<?xml version='1.0' encoding='UTF-8'?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_octavia">
    <caption>Description of Octavia configuration options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td><option>verbose</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt)  Print more verbose output (set logging level to INFO instead of default WARNING level).</td>
      </tr>
      <tr>
        <td><option>debug</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt)  Print more verbose output (set logging level to INFO instead of default WARNING level).</td>
      </tr>
      <tr>
        <td><option>bind_host</option> = <replaceable>0.0.0.0</replaceable></td>
        <td>(StrOpt)  The host IP to bind to the api service to .</td>
      </tr>
      <tr>
        <td><option>bind_port</option> = <replaceable>9876</replaceable></td>
        <td>(IntOpt)  The port to bind to the api service to.</td>
      </tr>
      <tr>
        <td><option>api_handler</option> = <replaceable>simulated_handler</replaceable></td>
        <td>(StrOpt)  The handler that the API communicates with.</td>
      </tr>
      <tr>
        <td><option>octavia_plugins</option> = <replaceable>hot_plug_plugin</replaceable></td>
        <td>(StrOpt)  Name of the controller plugin to use.</td>
      </tr>
      <tr>
        <td><option>os_region_name</option> = <replaceable></replaceable></td>
        <td>(StrOpt)  Region in Identity service catalog to use for communication with the OpenStack services.</td>
      </tr>
      <tr>
        <td><option>host</option> = <replaceable></replaceable></td>
        <td>(StrOpt)  Hostname to be used by the host machine for services running on it.The default value is the hostname of the host machine.</td>
      </tr>
      <tr>
        <th colspan="2">[database]</th>
      </tr>
      <tr>
        <td><option>connection</option> = <replaceable>mysql+pymysql://root:pass@127.0.0.1:3306/octavia</replaceable></td>
        <td>(StrOpt)  The SQLAlchemy connection string used to connect to the database.</td>
      </tr>
      <tr>
        <th colspan="2">[health_manager]</th>
      </tr>
      <tr>
        <td><option>bind_ip</option> = <replaceable>0.0.0.0</replaceable></td>
        <td>(StrOpt)  IP address the controller will listen on for heart beats from the amphora.</td>
      </tr>
      <tr>
        <td><option>bind_port</option> = <replaceable>5555</replaceable></td>
        <td>(IntOpt)  Port number the controller will listen on for heart beats from the amphora.</td>
      </tr>
      <tr>
        <td><option>controller_ip_port_list</option> = <replaceable></replaceable></td>
        <td>(StrOpt)  List of controller ip and port pairs for the heartbeat receivers. Example [127.0.0.1:5555, 127.0.0.1:5555].</td>
      </tr>
      <tr>
        <td><option>failover_threads</option> = <replaceable>10</replaceable></td>
        <td>(IntOpt) Number of threads performing amphora failovers.</td>
      </tr>
      <tr>
        <td><option>status_update_threads</option> = <replaceable>50</replaceable></td>
        <td>(IntOpt) Number of threads performing amphora status update.</td>
      </tr>
      <tr>
        <td><option>heartbeat_interval</option> = <replaceable>10</replaceable></td>
        <td>(IntOpt) Sleep time between sending hearthbeats from the amphora.</td>
      </tr>
      <tr>
        <td><option>heartbeat_key</option> = <replaceable></replaceable></td>
        <td>(StrOpt) key used to authenticate the heartbeat message sent by the amphora.</td>
      </tr>
      <tr>
        <td><option>heartbeat_timeout</option> = <replaceable>60</replaceable></td>
        <td>(IntOpt) Interval, in seconds, to wait before failing over an amphora.</td>
      </tr>
      <tr>
        <td><option>health_check_interval</option> = <replaceable>3</replaceable></td>
        <td>(IntOpt) Sleep time between health checks in seconds.</td>
      </tr>
      <tr>
        <td><option>sock_rlimit</option> = <replaceable>0</replaceable></td>
        <td>(IntOpt) sets the value of the heartbeat recv buffer.</td>
      </tr>
      <tr>
        <th colspan="2">[keystone_authtoken]</th>
      </tr>
      <tr>
        <td><option>auth_uri</option> = <replaceable>https://localhost:5000/v3</replaceable></td>
        <td>(StrOpt) Complete public Identity API endpoint.</td>
      </tr>
      <tr>
        <td><option>admin_user</option> = <replaceable>octavia</replaceable></td>
        <td>(StrOpt) Keystone account username.</td>
      </tr>
      <tr>
        <td><option>admin_password</option> = <replaceable>password</replaceable></td>
        <td>(StrOpt) Keystone account password.</td>
      </tr>
      <tr>
        <td><option>admin_tenant_name</option> = <replaceable>service</replaceable></td>
        <td>(StrOpt) Keystone service account tenant name to validate user tokens.</td>
      </tr>
      <tr>
        <td><option>insecure</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Verify HTTPS connections.</td>
      </tr>
      <tr>
        <th colspan="2">[keystone_authtoken_v3]</th>
      </tr>
      <tr>
        <td><option>admin_user_domain</option> = <replaceable>default</replaceable></td>
        <td>(StrOpt) Admin user keystone authentication domain.</td>
      </tr>
      <tr>
        <td><option>admin_project_domain</option> = <replaceable>default</replaceable></td>
        <td>(StrOpt) Admin project keystone authentication domain.</td>
      </tr>
      <tr>
        <th colspan="2">[certificates]</th>
      </tr>
      <tr>
        <td><option>cert_generator_class</option> = <replaceable>octavia.certificates.generator.LocalCertGenerator</replaceable></td>
        <td>(StrOpt) Class name which generate certificates.</td>
      </tr>
      <tr>
        <td><option>cert_manager_class</option> = <replaceable>octavia.certificates.manager.LocalCertManager</replaceable></td>
        <td>(StrOpt) Class name of certificate manager.</td>
      </tr>
      <tr>
        <td><option>ca_certificate</option> = <replaceable>/etc/ssl/certs/ssl-cert-snakeoil.pem</replaceable></td>
        <td>(StrOpt) Absolute path to the CA Certificate for signing. Defaults to env[OS_OCTAVIA_TLS_CA_CERT].Local Cert generator only.</td>
      </tr>
      <tr>
        <td><option>ca_private_key</option> = <replaceable>/etc/ssl/private/ssl-cert-snakeoil.key</replaceable></td>
        <td>(StrOpt) Absolute path to the Private Key for signing. Defaults to env[OS_OCTAVIA_TLS_CA_KEY].Local Cert generator only.</td>
      </tr>
      <tr>
        <td><option>ca_private_key_passphrase</option> = <replaceable></replaceable></td>
        <td>(StrOpt) Passphrase for the Private Key. Defaults to env[OS_OCTAVIA_CA_KEY_PASS] or None.Local Cert generator only.</td>
      </tr>
      <tr>
        <td><option>signing_digest</option> = <replaceable>sha256</replaceable></td>
        <td>(StrOpt) Certificate signing digest. Defaults to env[OS_OCTAVIA_CA_SIGNING_DIGEST] or sha256.Local Cert generator only.</td>
      </tr>
      <tr>
        <td><option>storage_path</option> = <replaceable>/var/lib/octavia/certificates/</replaceable></td>
        <td>(StrOpt) Absolute path to the certificate storage directory. Defaults to env[OS_OCTAVIA_TLS_STORAGE].Local Cert manager only.</td>
      </tr>
      <tr>
        <th colspan="2">[octavia_network]</th>
      </tr>
      <tr>
        <td><option>lb_network_name</option> = <replaceable></replaceable></td>
        <td>(StrOpt) Network to communicate with amphora.</td>
      </tr>
      <tr>
        <td><option>max_retries</option> = <replaceable>15</replaceable></td>
        <td>(IntOpt) The maximum attempts to retry an action with the networking service.</td>
      </tr>
      <tr>
        <td><option>retry_interval</option> = <replaceable>1</replaceable></td>
        <td>(IntOpt) Seconds to wait before retrying an action with the networking service.</td>
      </tr>
      <tr>
        <th colspan="2">[haproxy_amphora]</th>
      </tr>
      <tr>
        <td><option>base_path</option> = <replaceable>/var/lib/octavia</replaceable></td>
        <td>(StrOpt) Base directory for amphora files on amphora.</td>
      </tr>
      <tr>
        <td><option>base_cert_dir</option> = <replaceable>/var/lib/octavia/certs</replaceable></td>
        <td>(StrOpt) Base directory for cert storage on amphora.</td>
      </tr>
      <tr>
        <td><option>haproxy_template</option> = <replaceable>/var/lib/octavia/custom_template</replaceable></td>
        <td>(StrOpt) Custom haproxy template.</td>
      </tr>
      <tr>
        <td><option>base_log_dir</option> = <replaceable>/logs</replaceable></td>
        <td>(StrOpt) Base director for log on amphora.</td>
      </tr>
      <tr>
        <td><option>connection_max_retries</option> = <replaceable>300</replaceable></td>
        <td>(IntOpt) Retry threshold for connecting to amphorae.</td>
      </tr>
      <tr>
        <td><option>connection_retry_interval</option> = <replaceable>5</replaceable></td>
        <td>(IntOpt) Retry threshold for connecting to amphorae.</td>
      </tr>
      <tr>
        <td><option>cert_manager</option> = <replaceable>barbican_cert_manager</replaceable></td>
        <td>(StrOpt) Name of the cert manager to use.</td>
      </tr>
      <tr>
        <td><option>username</option> = <replaceable>ubuntu</replaceable></td>
        <td>(StrOpt) Name of user for access to amphora,ssh driver only.</td>
      </tr>
      <tr>
        <td><option>key_path</option> = <replaceable>/opt/stack/.ssh/id_rsa</replaceable></td>
        <td>(StrOpt) Local absolute path to the private key loaded on amphora at boot,ssh driver only.</td>
      </tr>
      <tr>
        <td><option>bind_host</option> = <replaceable>0.0.0.0</replaceable></td>
        <td>(StrOpt) The host IP to bind to amphora hose/REST driver only.</td>
      </tr>
      <tr>
        <td><option>bind_port</option> = <replaceable>9191</replaceable></td>
        <td>(IntOpt) The port to bind to.REST driver only.</td>
      </tr>
      <tr>
        <td><option>haproxy_cmd</option> = <replaceable>/usr/sbin/haproxy</replaceable></td>
        <td>(StrOpt) The full path to haproxy.</td>
      </tr>
      <tr>
        <td><option>respawn_count</option> = <replaceable>2</replaceable></td>
        <td>(IntOpt) The respawn count for haproxy's upstart script.</td>
      </tr>
      <tr>
        <td><option>respawn_interval</option> = <replaceable>2</replaceable></td>
        <td>(IntOpt) The respawn interval for haproxy's upstart script.</td>
      </tr>
      <tr>
        <td><option>haproxy_cert_dir</option> = <replaceable>/tmp</replaceable></td>
        <td>(StrOpt) The directory to store haproxy cert files in.</td>
      </tr>
      <tr>
        <th colspan="2">[controller_worker]</th>
      </tr>
      <tr>
        <td><option>amp_active_retries</option> = <replaceable>10</replaceable></td>
        <td>(IntOpt) Retry attempts to wait for Amphora to become active.</td>
      </tr>
      <tr>
        <td><option>amp_active_wait_sec</option> = <replaceable>10</replaceable></td>
        <td>(IntOpt) Seconds to wait for an Amphora to become active.</td>
      </tr>
      <tr>
        <td><option>amp_flavor_id</option> = <replaceable></replaceable></td>
        <td>(StrOpt) Nova instance flavor id for the Amphora.</td>
      </tr>
      <tr>
        <td><option>amp_image_id</option> = <replaceable></replaceable></td>
        <td>(StrOpt) Glance image id for the Amphora image to boot.</td>
      </tr>
      <tr>
        <td><option>amp_ssh_key_name</option> = <replaceable></replaceable></td>
        <td>(StrOpt) SSH key name used to boot the Amphora.REST driver/or debugging.</td>
      </tr>
      <tr>
        <td><option>amp_network</option> = <replaceable></replaceable></td>
        <td>(StrOpt) Network to attach to the Amphora.</td>
      </tr>
      <tr>
        <td><option>amp_secgroup_list</option> = <replaceable></replaceable></td>
        <td>(StrOpt) List of security groups to attach to the Amphora.</td>
      </tr>
      <tr>
        <td><option>client_ca</option> = <replaceable>/etc/octavia/certs/ca_01.pem</replaceable></td>
        <td>(StrOpt) Client CA for the amphora agent to use.REST driver only.</td>
      </tr>
      <tr>
        <td><option>amphora_driver</option> = <replaceable>amphora_noop_driver</replaceable></td>
        <td>(StrOpt) Name of the amphora driver to use.</td>
      </tr>
      <tr>
        <td><option>compute_driver</option> = <replaceable>compute_noop_driver</replaceable></td>
        <td>(StrOpt) Name of the compute driver to use.</td>
      </tr>
      <tr>
        <td><option>network_driver</option> = <replaceable>network_noop_driver</replaceable></td>
        <td>(StrOpt) Name of the network driver to use.</td>
      </tr>
      <tr>
        <td><option>cert_generator</option> = <replaceable>local_cert_generator</replaceable></td>
        <td>(StrOpt) Name of the cert generator to use.</td>
      </tr>
      <tr>
        <th colspan="2">[task_flow]</th>
      </tr>
      <tr>
        <td><option>engine</option> = <replaceable>serial</replaceable></td>
        <td>(StrOpt) TaskFlow engine to use.</td>
      </tr>
      <tr>
        <td><option>max_workers</option> = <replaceable>5</replaceable></td>
        <td>(IntOpt) The maximum number of workers.</td>
      </tr>

      <tr>
        <th colspan="2">[oslo_messaging_rabbi]</th>
      </tr>
      <tr>
        <td><option>rabbit_userid</option> = <replaceable>octavia</replaceable></td>
        <td>(StrOpt) RabbitMQ username.</td>
      </tr>
      <tr>
        <td><option>rabbit_password</option> = <replaceable>password</replaceable></td>
        <td>(StrOpt) RabbitMQ password.</td>
      </tr>
      <tr>
        <td><option>rabbit_port</option> = <replaceable>5672</replaceable></td>
        <td>(IntOpt) RabbitMQ port.</td>
      </tr>
      <tr>
        <td><option>rabbit_hosts</option> = <replaceable>localhost:5672</replaceable></td>
        <td>(StrOpt) RabbitMQ host.</td>
      </tr>
      <tr>
        <th colspan="2">[oslo_messaging]</th>
      </tr>
      <tr>
        <td><option>rpc_thread_pool_size</option> = <replaceable>2</replaceable></td>
        <td>(IntOpt) Queue Consumer Thread Pool Size.</td>
      </tr>
      <tr>
        <td><option>topic</option> = <replaceable>octavia_prov</replaceable></td>
        <td>(StrOpt) Topic (i.e. Queue) Name.</td>
      </tr>
      <tr>
        <th colspan="2">[house_keeping]</th>
      </tr>
      <tr>
        <td><option>spare_check_interval</option> = <replaceable>30</replaceable></td>
        <td>(IntOpt) Interval in seconds to initiate spare amphora checks.</td>
      </tr>
      <tr>
        <td><option>spare_amphora_pool_size</option> = <replaceable>0</replaceable></td>
        <td>(IntOpt) Number of spare amphorae.</td>
      </tr>
      <tr>
        <td><option>cleanup_interval</option> = <replaceable>30</replaceable></td>
        <td>(IntOpt) Cleanup interval for Deleted amphora.</td>
      </tr>
      <tr>
        <td><option>amphora_expiry_age</option> = <replaceable>604800</replaceable></td>
        <td>(IntOpt) Amphora expiry age in seconds. Default is 1 week.</td>
      </tr>
    </tbody>
  </table>
</para>
