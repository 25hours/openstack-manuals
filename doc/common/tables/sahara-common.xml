<?xml version='1.0' encoding='UTF-8'?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
  <!--
###################################################################
 WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
###################################################################

     Warning: Do not edit this file. It is automatically
     generated from the software project's code and your changes
     will be overwritten.

     The tool to generate this file lives in openstack-doc-tools
     repository.

     Please make any changes needed in the code, then run the
     autogenerate-config-doc tool from the openstack-doc-tools
     repository, or ask for help on the documentation mailing list,
     IRC channel or meeting.

###################################################################
 WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
###################################################################
-->
  <table rules="all" xml:id="config_table_sahara_common">
    <caption>Description of common configuration options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td><option>admin_project_domain_name</option> = <replaceable>default</replaceable></td>
        <td>(StrOpt) The name of the domain for the service project(ex. tenant).</td>
      </tr>
      <tr>
        <td><option>admin_user_domain_name</option> = <replaceable>default</replaceable></td>
        <td>(StrOpt) The name of the domain to which the admin user belongs.</td>
      </tr>
      <tr>
        <td><option>api_workers</option> = <replaceable>0</replaceable></td>
        <td>(IntOpt) Number of workers for Sahara API service (0 means all-in-one-thread configuration).</td>
      </tr>
      <tr>
        <td><option>cleanup_time_for_incomplete_clusters</option> = <replaceable>0</replaceable></td>
        <td>(IntOpt) Maximal time (in hours) for clusters allowed to be in states other than "Active", "Deleting" or "Error". If a cluster is not in "Active", "Deleting" or "Error" state and last update of it was longer than "cleanup_time_for_incomplete_clusters" hours ago then it will be deleted automatically. (0 value means that automatic clean up is disabled).</td>
      </tr>
      <tr>
        <td><option>cluster_operation_trust_expiration_hours</option> = <replaceable>24</replaceable></td>
        <td>(IntOpt) Defines the period of time (in hours) after which trusts created to allow sahara to create or scale a cluster will expire. Note that this value should be significantly larger than the value of the cleanup_time_for_incomplete_clusters configuration key if use of the cluster cleanup feature is desired (the trust must last at least as long as a cluster could validly take to stall in its creation, plus the timeout value set in that key, plus one hour for the period of the cleanup job).</td>
      </tr>
      <tr>
        <td><option>cluster_remote_threshold</option> = <replaceable>70</replaceable></td>
        <td>(IntOpt) The same as global_remote_threshold, but for a single cluster.</td>
      </tr>
      <tr>
        <td><option>compute_topology_file</option> = <replaceable>etc/sahara/compute.topology</replaceable></td>
        <td>(StrOpt) File with nova compute topology. It should contain mapping between nova computes and racks.</td>
      </tr>
      <tr>
        <td><option>default_ntp_server</option> = <replaceable>pool.ntp.org</replaceable></td>
        <td>(StrOpt) Default ntp server for time sync</td>
      </tr>
      <tr>
        <td><option>disable_event_log</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Disables event log feature.</td>
      </tr>
      <tr>
        <td><option>enable_data_locality</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Enables data locality for hadoop cluster. Also enables data locality for Swift used by hadoop. If enabled, 'compute_topology' and 'swift_topology' configuration parameters should point to OpenStack and Swift topology correspondingly.</td>
      </tr>
      <tr>
        <td><option>enable_hypervisor_awareness</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Enables four-level topology for data locality. Works only if corresponding plugin supports such mode.</td>
      </tr>
      <tr>
        <td><option>enable_notifications</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Enables sending notifications to Ceilometer</td>
      </tr>
      <tr>
        <td><option>executor_thread_pool_size</option> = <replaceable>64</replaceable></td>
        <td>(IntOpt) Size of executor thread pool.</td>
      </tr>
      <tr>
        <td><option>global_remote_threshold</option> = <replaceable>100</replaceable></td>
        <td>(IntOpt) Maximum number of remote operations that will be running at the same time. Note that each remote operation requires its own process to run.</td>
      </tr>
      <tr>
        <td><option>heat_stack_tags</option> = <replaceable>data-processing-cluster</replaceable></td>
        <td>(ListOpt) List of tags to be used during operating with stack.</td>
      </tr>
      <tr>
        <td><option>infrastructure_engine</option> = <replaceable>heat</replaceable></td>
        <td>(StrOpt) An engine which will be used to provision infrastructure for Hadoop cluster.</td>
      </tr>
      <tr>
        <td><option>job_binary_max_KB</option> = <replaceable>5120</replaceable></td>
        <td>(IntOpt) Maximum length of job binary data in kilobytes that may be stored or retrieved in a single operation.</td>
      </tr>
      <tr>
        <td><option>job_canceling_timeout</option> = <replaceable>300</replaceable></td>
        <td>(IntOpt) Timeout for canceling job execution (in seconds). Sahara will try to cancel job execution during this time.</td>
      </tr>
      <tr>
        <td><option>job_workflow_postfix</option> = <replaceable></replaceable></td>
        <td>(StrOpt) Postfix for storing jobs in hdfs. Will be added to '/user/&lt;hdfs user&gt;/' path.</td>
      </tr>
      <tr>
        <td><option>max_header_line</option> = <replaceable>16384</replaceable></td>
        <td>(IntOpt) Maximum line size of message headers to be accepted. max_header_line may need to be increased when using large tokens (typically those generated by the Keystone v3 API with big service catalogs).</td>
      </tr>
      <tr>
        <td><option>memcached_servers</option> = <replaceable>None</replaceable></td>
        <td>(ListOpt) Memcached servers or None for in process cache.</td>
      </tr>
      <tr>
        <td><option>min_transient_cluster_active_time</option> = <replaceable>30</replaceable></td>
        <td>(IntOpt) Minimal "lifetime" in seconds for a transient cluster. Cluster is guaranteed to be "alive" within this time period.</td>
      </tr>
      <tr>
        <td><option>node_domain</option> = <replaceable>novalocal</replaceable></td>
        <td>(StrOpt) The suffix of the node's FQDN. In nova-network that is the dhcp_domain config parameter.</td>
      </tr>
      <tr>
        <td><option>os_region_name</option> = <replaceable>None</replaceable></td>
        <td>(StrOpt) Region name used to get services endpoints.</td>
      </tr>
      <tr>
        <td><option>periodic_enable</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Enable periodic tasks.</td>
      </tr>
      <tr>
        <td><option>periodic_fuzzy_delay</option> = <replaceable>60</replaceable></td>
        <td>(IntOpt) Range in seconds to randomly delay when starting the periodic task scheduler to reduce stampeding. (Disable by setting to 0).</td>
      </tr>
      <tr>
        <td><option>periodic_interval_max</option> = <replaceable>60</replaceable></td>
        <td>(IntOpt) Max interval size between periodic tasks execution in seconds.</td>
      </tr>
      <tr>
        <td><option>plugins</option> = <replaceable>vanilla, hdp, spark, cdh</replaceable></td>
        <td>(ListOpt) List of plugins to be loaded. Sahara preserves the order of the list when returning it.</td>
      </tr>
      <tr>
        <td><option>proxy_command</option> = <replaceable></replaceable></td>
        <td>(StrOpt) Proxy command used to connect to instances. If set, this command should open a netcat socket, that Sahara will use for SSH and HTTP connections. Use {host} and {port} to describe the destination. Other available keywords: {tenant_id}, {network_id}, {router_id}.</td>
      </tr>
      <tr>
        <td><option>remote</option> = <replaceable>ssh</replaceable></td>
        <td>(StrOpt) A method for Sahara to execute commands on VMs.</td>
      </tr>
      <tr>
        <td><option>rootwrap_command</option> = <replaceable>sudo sahara-rootwrap /etc/sahara/rootwrap.conf</replaceable></td>
        <td>(StrOpt) Rootwrap command to leverage.  Use in conjunction with use_rootwrap=True</td>
      </tr>
      <tr>
        <td><option>swift_topology_file</option> = <replaceable>etc/sahara/swift.topology</replaceable></td>
        <td>(StrOpt) File with Swift topology.It should contain mapping between Swift nodes and racks.</td>
      </tr>
      <tr>
        <td><option>use_external_key_manager</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Enable Sahara to use an external key manager service provided by the identity service catalog. Sahara will store all keys with the manager service.</td>
      </tr>
      <tr>
        <td><option>use_floating_ips</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) If set to True, Sahara will use floating IPs to communicate with instances. To make sure that all instances have floating IPs assigned in Nova Network set "auto_assign_floating_ip=True" in nova.conf. If Neutron is used for networking, make sure that all Node Groups have "floating_ip_pool" parameter defined.</td>
      </tr>
      <tr>
        <td><option>use_identity_api_v3</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Enables Sahara to use Keystone API v3. If that flag is disabled, per-job clusters will not be terminated automatically.</td>
      </tr>
      <tr>
        <td><option>use_namespaces</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Use network namespaces for communication (only valid to use in conjunction with use_neutron=True).</td>
      </tr>
      <tr>
        <td><option>use_neutron</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Use Neutron Networking (False indicates the use of Nova networking).</td>
      </tr>
      <tr>
        <td><option>use_rootwrap</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Use rootwrap facility to allow non-root users to run the sahara-all server instance and access private network IPs (only valid to use in conjunction with use_namespaces=True)</td>
      </tr>
      <tr>
        <th colspan="2">[conductor]</th>
      </tr>
      <tr>
        <td><option>use_local</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Perform sahara-conductor operations locally.</td>
      </tr>
      <tr>
        <th colspan="2">[keystone_authtoken]</th>
      </tr>
      <tr>
        <td><option>memcached_servers</option> = <replaceable>None</replaceable></td>
        <td>(ListOpt) Optionally specify a list of memcached server(s) to use for caching. If left undefined, tokens will instead be cached in-process.</td>
      </tr>
    </tbody>
  </table>
</para>
