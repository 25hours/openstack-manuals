<?xml version='1.0' encoding='UTF-8'?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
  <!-- The tool that generated this table lives in the
     openstack-doc-tools repository. The editions made in
     this file will *not* be lost if you run the script again. -->
  <table rules="all">
    <caption>Description of configuration options for
        <literal>[DEFAULT]</literal> in <literal>container-server.conf</literal>
    </caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>allowed_sync_hosts = 127.0.0.1</td>
        <td>No help text available for this option.</td>
      </tr>
      <tr>
        <td>backlog = 4096</td>
        <td>Maximum number of allowed pending TCP connections</td>
      </tr>
      <tr>
        <td>bind_ip = 0.0.0.0</td>
        <td>IP Address for server to bind to</td>
      </tr>
      <tr>
        <td>bind_port = 6001</td>
        <td>Port for server to bind to</td>
      </tr>
      <tr>
        <td>bind_timeout = 30</td>
        <td>Seconds to attempt bind before giving up</td>
      </tr>
      <tr>
        <td>db_preallocation = off</td>
        <td>If you don't mind the extra disk space usage in overhead, you can turn this on to preallocate disk space with SQLite databases to decrease fragmentation. underlying filesystem does not support it. to setup custom log handlers. bytes you'd like fallocate to reserve, whether there is space for the given file size or not. This is useful for systems that behave badly when they completely run out of space; you can make the services pretend they're out of space early. server.  For most cases, this should be `egg:swift#account`. replication passes account can be reclaimed</td>
      </tr>
      <tr>
        <td>devices = /srv/node</td>
        <td>Parent directory of where devices are mounted</td>
      </tr>
      <tr>
        <td>disable_fallocate = false</td>
        <td>Disable "fast fail" fallocate checks if the underlying filesystem does not support it.</td>
      </tr>
      <tr>
        <td>eventlet_debug = false</td>
        <td>If true, turn on debug logging for eventlet</td>
      </tr>
      <tr>
        <td>fallocate_reserve = 0</td>
        <td>You can set fallocate_reserve to the number of bytes you'd like fallocate to reserve, whether there is space for the given file size or not. This is useful for systems that behave badly when they completely run out of space; you can make the services pretend they're out of space early. server.  For most cases, this should be `egg:swift#object`.</td>
      </tr>
      <tr>
        <td>log_address = /dev/log</td>
        <td>Location where syslog sends the logs to</td>
      </tr>
      <tr>
        <td>log_custom_handlers = </td>
        <td>Comma-separated list of functions to call to setup custom log handlers.</td>
      </tr>
      <tr>
        <td>log_facility = LOG_LOCAL0</td>
        <td>Syslog log facility</td>
      </tr>
      <tr>
        <td>log_level = INFO</td>
        <td>Logging level</td>
      </tr>
      <tr>
        <td>log_max_line_length = 0</td>
        <td>Caps the length of log lines to the value given; no limit if set to 0, the default.</td>
      </tr>
      <tr>
        <td>log_name = swift</td>
        <td>Label used when logging</td>
      </tr>
      <tr>
        <td>log_statsd_default_sample_rate = 1.0</td>
        <td>Defines the probability of sending a sample for any given event or
                    timing measurement.</td>
      </tr>
      <tr>
        <td>log_statsd_host = localhost</td>
        <td>If not set, the StatsD feature is disabled.</td>
      </tr>
      <tr>
        <td>log_statsd_metric_prefix = </td>
        <td>Value will be prepended to every metric sent to the StatsD server.</td>
      </tr>
      <tr>
        <td>log_statsd_port = 8125</td>
        <td>Port value for the StatsD server.</td>
      </tr>
      <tr>
        <td>log_statsd_sample_rate_factor = 1.0</td>
        <td>Not recommended to set this to a value less than 1.0, if frequency
                    of logging is too high, tune the
                    log_statsd_default_sample_rate instead.</td>
      </tr>
      <tr>
        <td>log_udp_host = </td>
        <td>If not set, the UDB receiver for syslog is disabled.</td>
      </tr>
      <tr>
        <td>log_udp_port = 514</td>
        <td>Port value for UDB receiver, if enabled.</td>
      </tr>
      <tr>
        <td>max_clients = 1024</td>
        <td>Maximum number of clients one worker can process simultaneously
Lowering the number of clients handled per worker, and raising the
number of workers can lessen the impact that a CPU intensive, or
blocking, request can have on other requests served by the same
worker. If the maximum number of clients is set to one, then a given worker
will not perform another call while processing, allowing
other workers a chance to process it.
</td>
      </tr>
      <tr>
        <td>mount_check = true</td>
        <td>Whether or not check if the devices are mounted to prevent accidentally writing to the root device</td>
      </tr>
      <tr>
        <td>swift_dir = /etc/swift</td>
        <td>Swift configuration directory</td>
      </tr>
      <tr>
        <td>user = swift</td>
        <td>User to run as</td>
      </tr>
      <tr>
        <td>workers = auto</td>
        <td>a much higher value, one can reduce the impact of slow file system operations in one request from negatively impacting other requests.</td>
      </tr>
    </tbody>
  </table>
</para>
