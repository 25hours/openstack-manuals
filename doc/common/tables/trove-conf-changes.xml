<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="trove-conf-changes-master">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Juno for Database Service</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] bind_host = 0.0.0.0</td>
      <td>(StrOpt) IP address the API server will listen on.</td>
    </tr>
    <tr>
      <td>[DEFAULT] black_list_regex = None</td>
      <td>(StrOpt) Exclude IP addresses that match this regular expression.</td>
    </tr>
    <tr>
      <td>[DEFAULT] cinder_service_type = volumev2</td>
      <td>(StrOpt) Service type to use when searching catalog.</td>
    </tr>
    <tr>
      <td>[DEFAULT] cinder_volume_type = None</td>
      <td>(StrOpt) Volume type to use when provisioning a Cinder volume.</td>
    </tr>
    <tr>
      <td>[DEFAULT] cluster_delete_time_out = 180</td>
      <td>(IntOpt) Maximum time (in seconds) to wait for a cluster delete.</td>
    </tr>
    <tr>
      <td>[DEFAULT] cluster_usage_timeout = 675</td>
      <td>(IntOpt) Maximum time (in seconds) to wait for a cluster to become active.</td>
    </tr>
    <tr>
      <td>[DEFAULT] clusters_page_size = 20</td>
      <td>(IntOpt) Page size for listing clusters.</td>
    </tr>
    <tr>
      <td>[DEFAULT] conductor_manager = trove.conductor.manager.Manager</td>
      <td>(StrOpt) Qualified class name to use for conductor manager.</td>
    </tr>
    <tr>
      <td>[DEFAULT] heat_service_type = orchestration</td>
      <td>(StrOpt) Service type to use when searching catalog.</td>
    </tr>
    <tr>
      <td>[DEFAULT] hostname_require_valid_ip = True</td>
      <td>(BoolOpt) Require user hostnames to be valid IP addresses.</td>
    </tr>
    <tr>
      <td>[DEFAULT] http_mgmt_post_rate = 200</td>
      <td>(IntOpt) Maximum number of management HTTP 'POST' requests (per minute).</td>
    </tr>
    <tr>
      <td>[DEFAULT] network_driver = trove.network.nova.NovaNetwork</td>
      <td>(StrOpt) Describes the actual network manager used for the management of network attributes (security groups, floating IPs, etc.).</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_service_type = network</td>
      <td>(StrOpt) Service type to use when searching catalog.</td>
    </tr>
    <tr>
      <td>[DEFAULT] neutron_url = None</td>
      <td>(StrOpt) URL without the tenant segment.</td>
    </tr>
    <tr>
      <td>[DEFAULT] nova_compute_service_type = compute</td>
      <td>(StrOpt) Service type to use when searching catalog.</td>
    </tr>
    <tr>
      <td>[DEFAULT] os_region_name = None</td>
      <td>(StrOpt) Region name of this node. Used when searching catalog.</td>
    </tr>
    <tr>
      <td>[DEFAULT] remote_neutron_client = trove.common.remote.neutron_client</td>
      <td>(StrOpt) Client to send Neutron calls to.</td>
    </tr>
    <tr>
      <td>[DEFAULT] swift_service_type = object-store</td>
      <td>(StrOpt) Service type to use when searching catalog.</td>
    </tr>
    <tr>
      <td>[DEFAULT] usage_timeout = 600</td>
      <td>(IntOpt) Maximum time (in seconds) to wait for a Guest to become active.</td>
    </tr>
    <tr>
      <td>[DEFAULT] use_nova_server_config_drive = False</td>
      <td>(BoolOpt) Use config drive for file injection when booting instance.</td>
    </tr>
    <tr>
      <td>[DEFAULT] use_syslog_rfc_format = False</td>
      <td>(BoolOpt) (Optional) Enables or disables syslog rfc5424 format for logging. If enabled, prefixes the MSG part of the syslog message with APP-NAME (RFC5424). The format without the APP-NAME is deprecated in I, and will be removed in J.</td>
    </tr>
    <tr>
      <td>[cassandra] backup_incremental_strategy = {}</td>
      <td>(DictOpt) Incremental Backup Runner based on the default strategy. For strategies that do not implement an incremental, the runner will use the default full backup.</td>
    </tr>
    <tr>
      <td>[cassandra] backup_namespace = None</td>
      <td>(StrOpt) Namespace to load backup strategies from.</td>
    </tr>
    <tr>
      <td>[cassandra] device_path = /dev/vdb</td>
      <td>(StrOpt) Device path for volume if volume support is enabled.</td>
    </tr>
    <tr>
      <td>[cassandra] replication_strategy = None</td>
      <td>(StrOpt) Default strategy for replication.</td>
    </tr>
    <tr>
      <td>[cassandra] restore_namespace = None</td>
      <td>(StrOpt) Namespace to load restore strategies from.</td>
    </tr>
    <tr>
      <td>[cassandra] volume_support = True</td>
      <td>(BoolOpt) Whether to provision a Cinder volume for datadir.</td>
    </tr>
    <tr>
      <td>[couchbase] backup_incremental_strategy = {}</td>
      <td>(DictOpt) Incremental Backup Runner based on the default strategy. For strategies that do not implement an incremental, the runner will use the default full backup.</td>
    </tr>
    <tr>
      <td>[couchbase] backup_namespace = trove.guestagent.strategies.backup.couchbase_impl</td>
      <td>(StrOpt) Namespace to load backup strategies from.</td>
    </tr>
    <tr>
      <td>[couchbase] device_path = /dev/vdb</td>
      <td>(StrOpt) Device path for volume if volume support is enabled.</td>
    </tr>
    <tr>
      <td>[couchbase] replication_strategy = None</td>
      <td>(StrOpt) Default strategy for replication.</td>
    </tr>
    <tr>
      <td>[couchbase] restore_namespace = trove.guestagent.strategies.restore.couchbase_impl</td>
      <td>(StrOpt) Namespace to load restore strategies from.</td>
    </tr>
    <tr>
      <td>[couchbase] root_on_create = True</td>
      <td>(BoolOpt) Enable the automatic creation of the root user for the service during instance-create. The generated password for the root user is immediately returned in the response of instance-create as the 'password' field.</td>
    </tr>
    <tr>
      <td>[couchbase] volume_support = True</td>
      <td>(BoolOpt) Whether to provision a Cinder volume for datadir.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] check_revocations_for_cached = False</td>
      <td>(BoolOpt) If true, the revocation list will be checked for cached tokens. This requires that PKI tokens are configured on the Keystone server.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] hash_algorithms = ['md5']</td>
      <td>(ListOpt) Hash algorithms to use for hashing PKI tokens. This may be a single algorithm or multiple. The algorithms are those supported by Python standard hashlib.new(). The hashes will be tried in the order given, so put the preferred one first for performance. The result of the first hash will be stored in the cache. This will typically be set to multiple values only while migrating from a less secure algorithm to a more secure one. Once all the old tokens are expired this option should be set to a single value for better performance.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] identity_uri = None</td>
      <td>(StrOpt) Complete admin Identity API endpoint. This should specify the unversioned root endpoint e.g. https://localhost:35357/</td>
    </tr>
    <tr>
      <td>[mongodb] api_strategy = trove.common.strategies.mongodb.api.MongoDbAPIStrategy</td>
      <td>(StrOpt) Class that implements datastore-specific API logic.</td>
    </tr>
    <tr>
      <td>[mongodb] backup_incremental_strategy = {}</td>
      <td>(DictOpt) Incremental Backup Runner based on the default strategy. For strategies that do not implement an incremental, the runner will use the default full backup.</td>
    </tr>
    <tr>
      <td>[mongodb] backup_namespace = None</td>
      <td>(StrOpt) Namespace to load backup strategies from.</td>
    </tr>
    <tr>
      <td>[mongodb] cluster_support = True</td>
      <td>(BoolOpt) Enable clusters to be created and managed.</td>
    </tr>
    <tr>
      <td>[mongodb] device_path = /dev/vdb</td>
      <td>(StrOpt) Device path for volume if volume support is enabled.</td>
    </tr>
    <tr>
      <td>[mongodb] guestagent_strategy = trove.common.strategies.mongodb.guestagent.MongoDbGuestAgentStrategy</td>
      <td>(StrOpt) Class that implements datastore-specific Guest Agent API logic.</td>
    </tr>
    <tr>
      <td>[mongodb] num_config_servers_per_cluster = 3</td>
      <td>(IntOpt) The number of config servers to create per cluster.</td>
    </tr>
    <tr>
      <td>[mongodb] num_query_routers_per_cluster = 1</td>
      <td>(IntOpt) The number of query routers (mongos) to create per cluster.</td>
    </tr>
    <tr>
      <td>[mongodb] replication_strategy = None</td>
      <td>(StrOpt) Default strategy for replication.</td>
    </tr>
    <tr>
      <td>[mongodb] restore_namespace = None</td>
      <td>(StrOpt) Namespace to load restore strategies from.</td>
    </tr>
    <tr>
      <td>[mongodb] taskmanager_strategy = trove.common.strategies.mongodb.taskmanager.MongoDbTaskManagerStrategy</td>
      <td>(StrOpt) Class that implements datastore-specific task manager logic.</td>
    </tr>
    <tr>
      <td>[mongodb] volume_support = True</td>
      <td>(BoolOpt) Whether to provision a Cinder volume for datadir.</td>
    </tr>
    <tr>
      <td>[mysql] backup_incremental_strategy = {'InnoBackupEx': 'InnoBackupExIncremental'}</td>
      <td>(DictOpt) Incremental Backup Runner based on the default strategy. For strategies that do not implement an incremental backup, the runner will use the default full backup.</td>
    </tr>
    <tr>
      <td>[mysql] backup_namespace = trove.guestagent.strategies.backup.mysql_impl</td>
      <td>(StrOpt) Namespace to load backup strategies from.</td>
    </tr>
    <tr>
      <td>[mysql] device_path = /dev/vdb</td>
      <td>(StrOpt) Device path for volume if volume support is enabled.</td>
    </tr>
    <tr>
      <td>[mysql] replication_namespace = trove.guestagent.strategies.replication.mysql_binlog</td>
      <td>(StrOpt) Namespace to load replication strategies from.</td>
    </tr>
    <tr>
      <td>[mysql] replication_password = NETOU7897NNLOU</td>
      <td>(StrOpt) Password for replication slave user.</td>
    </tr>
    <tr>
      <td>[mysql] replication_strategy = MysqlBinlogReplication</td>
      <td>(StrOpt) Default strategy for replication.</td>
    </tr>
    <tr>
      <td>[mysql] replication_user = slave_user</td>
      <td>(StrOpt) Userid for replication slave.</td>
    </tr>
    <tr>
      <td>[mysql] restore_namespace = trove.guestagent.strategies.restore.mysql_impl</td>
      <td>(StrOpt) Namespace to load restore strategies from.</td>
    </tr>
    <tr>
      <td>[mysql] volume_support = True</td>
      <td>(BoolOpt) Whether to provision a Cinder volume for datadir.</td>
    </tr>
    <tr>
      <td>[percona] backup_incremental_strategy = {'InnoBackupEx': 'InnoBackupExIncremental'}</td>
      <td>(DictOpt) Incremental Backup Runner based on the default strategy. For strategies that do not implement an incremental backup, the runner will use the default full backup.</td>
    </tr>
    <tr>
      <td>[percona] backup_namespace = trove.guestagent.strategies.backup.mysql_impl</td>
      <td>(StrOpt) Namespace to load backup strategies from.</td>
    </tr>
    <tr>
      <td>[percona] device_path = /dev/vdb</td>
      <td>(StrOpt) Device path for volume if volume support is enabled.</td>
    </tr>
    <tr>
      <td>[percona] replication_namespace = trove.guestagent.strategies.replication.mysql_binlog</td>
      <td>(StrOpt) Namespace to load replication strategies from.</td>
    </tr>
    <tr>
      <td>[percona] replication_password = NETOU7897NNLOU</td>
      <td>(StrOpt) Password for replication slave user.</td>
    </tr>
    <tr>
      <td>[percona] replication_strategy = MysqlBinlogReplication</td>
      <td>(StrOpt) Default strategy for replication.</td>
    </tr>
    <tr>
      <td>[percona] replication_user = slave_user</td>
      <td>(StrOpt) Userid for replication slave.</td>
    </tr>
    <tr>
      <td>[percona] restore_namespace = trove.guestagent.strategies.restore.mysql_impl</td>
      <td>(StrOpt) Namespace to load restore strategies from.</td>
    </tr>
    <tr>
      <td>[percona] volume_support = True</td>
      <td>(BoolOpt) Whether to provision a Cinder volume for datadir.</td>
    </tr>
    <tr>
      <td>[postgresql] backup_incremental_strategy = {}</td>
      <td>(DictOpt) Incremental Backup Runner based on the default strategy. For strategies that do not implement an incremental, the runner will use the default full backup.</td>
    </tr>
    <tr>
      <td>[postgresql] backup_namespace = trove.guestagent.strategies.backup.postgresql_impl</td>
      <td>(StrOpt) Namespace to load backup strategies from.</td>
    </tr>
    <tr>
      <td>[postgresql] backup_strategy = PgDump</td>
      <td>(StrOpt) Default strategy to perform backups.</td>
    </tr>
    <tr>
      <td>[postgresql] device_path = /dev/vdb</td>
      <td>(StrOpt) None</td>
    </tr>
    <tr>
      <td>[postgresql] ignore_dbs = ['postgres']</td>
      <td>(ListOpt) None</td>
    </tr>
    <tr>
      <td>[postgresql] ignore_users = ['os_admin', 'postgres', 'root']</td>
      <td>(ListOpt) None</td>
    </tr>
    <tr>
      <td>[postgresql] mount_point = /var/lib/postgresql</td>
      <td>(StrOpt) Filesystem path for mounting volumes if volume support is enabled.</td>
    </tr>
    <tr>
      <td>[postgresql] restore_namespace = trove.guestagent.strategies.restore.postgresql_impl</td>
      <td>(StrOpt) Namespace to load restore strategies from.</td>
    </tr>
    <tr>
      <td>[postgresql] root_on_create = False</td>
      <td>(BoolOpt) Enable the automatic creation of the root user for the service during instance-create. The generated password for the root user is immediately returned in the response of instance-create as the 'password' field.</td>
    </tr>
    <tr>
      <td>[postgresql] tcp_ports = ['5432']</td>
      <td>(ListOpt) List of TCP ports and/or port ranges to open in the security group (only applicable if trove_security_groups_support is True).</td>
    </tr>
    <tr>
      <td>[postgresql] udp_ports = []</td>
      <td>(ListOpt) List of UPD ports and/or port ranges to open in the security group (only applicable if trove_security_groups_support is True).</td>
    </tr>
    <tr>
      <td>[postgresql] volume_support = True</td>
      <td>(BoolOpt) Whether to provision a Cinder volume for datadir.</td>
    </tr>
    <tr>
      <td>[redis] backup_incremental_strategy = {}</td>
      <td>(DictOpt) Incremental Backup Runner based on the default strategy. For strategies that do not implement an incremental, the runner will use the default full backup.</td>
    </tr>
    <tr>
      <td>[redis] backup_namespace = None</td>
      <td>(StrOpt) Namespace to load backup strategies from.</td>
    </tr>
    <tr>
      <td>[redis] device_path = None</td>
      <td>(StrOpt) Device path for volume if volume support is enabled.</td>
    </tr>
    <tr>
      <td>[redis] replication_strategy = None</td>
      <td>(StrOpt) Default strategy for replication.</td>
    </tr>
    <tr>
      <td>[redis] restore_namespace = None</td>
      <td>(StrOpt) Namespace to load restore strategies from.</td>
    </tr>
    <tr>
      <td>[redis] volume_support = False</td>
      <td>(BoolOpt) Whether to provision a Cinder volume for datadir.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] cinder_url</td>
      <td>http://localhost:8776/v2</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] default_log_levels</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, iso8601=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN</td>
    </tr>
    <tr>
      <td>[DEFAULT] heat_url</td>
      <td>http://localhost:8004/v1</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] notification_service_id</td>
      <td>{'couchbase': 'fa62fe68-74d9-4779-a24e-36f19602c415', 'mongodb': 'c8c907af-7375-456f-b929-b637ff9209ee', 'mysql': '2f3ff068-2bfb-4f70-9a9d-a6bb65bc084b', 'redis': 'b216ffc5-1947-456c-a4cf-70f94c05f7d0', 'cassandra': '459a230d-4e97-4344-9067-2a54a310b0ed'}</td>
      <td>{'postgresql': 'ac277e0d-4f21-40aa-b347-1ea31e571720', 'couchbase': 'fa62fe68-74d9-4779-a24e-36f19602c415', 'mongodb': 'c8c907af-7375-456f-b929-b637ff9209ee', 'redis': 'b216ffc5-1947-456c-a4cf-70f94c05f7d0', 'mysql': '2f3ff068-2bfb-4f70-9a9d-a6bb65bc084b', 'cassandra': '459a230d-4e97-4344-9067-2a54a310b0ed'}</td>
    </tr>
    <tr>
      <td>[DEFAULT] nova_compute_url</td>
      <td>http://localhost:8774/v2</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] swift_url</td>
      <td>http://localhost:8080/v1/AUTH_</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] trove_conductor_workers</td>
      <td>1</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] update_status_on_fail</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[couchbase] backup_strategy</td>
      <td>None</td>
      <td>CbBackup</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] revocation_cache_time</td>
      <td>300</td>
      <td>10</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] backup_namespace</td>
      <td>[redis] backup_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_strategy</td>
      <td>[mysql] backup_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] restore_namespace</td>
      <td>[mysql] restore_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] restore_namespace</td>
      <td>[mongodb] restore_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] restore_namespace</td>
      <td>[redis] restore_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_namespace</td>
      <td>[cassandra] backup_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_strategy</td>
      <td>[redis] backup_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_incremental_strategy</td>
      <td>[couchbase] backup_incremental_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_namespace</td>
      <td>[mongodb] backup_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_strategy</td>
      <td>[cassandra] backup_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] restore_namespace</td>
      <td>[percona] restore_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_namespace</td>
      <td>[couchbase] backup_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] restore_namespace</td>
      <td>[couchbase] restore_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_incremental_strategy</td>
      <td>[cassandra] backup_incremental_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_incremental_strategy</td>
      <td>[mongodb] backup_incremental_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_incremental_strategy</td>
      <td>[percona] backup_incremental_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_strategy</td>
      <td>[mongodb] backup_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_incremental_strategy</td>
      <td>[mysql] backup_incremental_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] restore_namespace</td>
      <td>[cassandra] restore_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] hostname_require_ipv4</td>
      <td>[DEFAULT] hostname_require_valid_ip</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_namespace</td>
      <td>[mysql] backup_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_strategy</td>
      <td>[percona] backup_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_incremental_strategy</td>
      <td>[redis] backup_incremental_strategy</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_namespace</td>
      <td>[percona] backup_namespace</td>
    </tr>
    <tr>
      <td>[DEFAULT] backup_strategy</td>
      <td>[couchbase] backup_strategy</td>
    </tr>
  </table>
</section>
