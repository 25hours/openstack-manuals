<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="ceilometer-conf-changes-liberty">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated, and deprecated options in Liberty for Telemetry</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] batch_polled_samples = True</td>
      <td>(BoolOpt) To reduce polling agent load, samples are sent to the notification agent in a batch. To gain higher throughput at the cost of load set this to False.</td>
    </tr>
    <tr>
      <td>[DEFAULT] ceilometer_control_exchange = ceilometer</td>
      <td>(StrOpt) Exchange name for ceilometer notifications.</td>
    </tr>
    <tr>
      <td>[DEFAULT] dns_control_exchange = central</td>
      <td>(StrOpt) Exchange name for DNS notifications.</td>
    </tr>
    <tr>
      <td>[DEFAULT] executor_thread_pool_size = 64</td>
      <td>(IntOpt) Size of executor thread pool.</td>
    </tr>
    <tr>
      <td>[DEFAULT] magnum_control_exchange = magnum</td>
      <td>(StrOpt) Exchange name for Magnum notifications.</td>
    </tr>
    <tr>
      <td>[DEFAULT] password = </td>
      <td>(StrOpt) Password for Redis server (optional).</td>
    </tr>
    <tr>
      <td>[DEFAULT] pipeline_polling_interval = 20</td>
      <td>(IntOpt) Polling interval for pipeline file configuration in seconds.</td>
    </tr>
    <tr>
      <td>[DEFAULT] port = 6379</td>
      <td>(IntOpt) Use this port to connect to redis host.</td>
    </tr>
    <tr>
      <td>[DEFAULT] refresh_event_pipeline_cfg = False</td>
      <td>(BoolOpt) Refresh Event Pipeline configuration on-the-fly.</td>
    </tr>
    <tr>
      <td>[DEFAULT] refresh_pipeline_cfg = False</td>
      <td>(BoolOpt) Refresh Pipeline configuration on-the-fly.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_poll_timeout = 1</td>
      <td>(IntOpt) The default number of seconds that poll should wait. Poll raises timeout exception when timeout expired.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_zmq_all_req_rep = True</td>
      <td>(BoolOpt) Use REQ/REP pattern for all methods CALL/CAST/FANOUT.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_zmq_concurrency = eventlet</td>
      <td>(StrOpt) Type of concurrency used. Either "native" or "eventlet"</td>
    </tr>
    <tr>
      <td>[DEFAULT] watch_log_file = False</td>
      <td>(BoolOpt) (Optional) Uses logging handler designed to watch file system. When log file is moved or removed this handler will open a new log file with specified path instantaneously. It makes sense only if log-file option is specified and Linux platform is used. This option is ignored if log_config_append is set.</td>
    </tr>
    <tr>
      <td>[DEFAULT] zmq_use_broker = True</td>
      <td>(BoolOpt) Shows whether zmq-messaging uses broker or not.</td>
    </tr>
    <tr>
      <td>[alarm] alarm_max_actions = -1</td>
      <td>(IntOpt) Maximum count of actions for each state of an alarm, non-positive number means no limit.</td>
    </tr>
    <tr>
      <td>[api] aodh_is_enabled = None</td>
      <td>(BoolOpt) Set True to redirect alarms URLs to aodh. Default autodetection by querying keystone.</td>
    </tr>
    <tr>
      <td>[api] aodh_url = None</td>
      <td>(StrOpt) The endpoint of Aodh to redirect alarms URLs to Aodh API. Default autodetection by querying keystone.</td>
    </tr>
    <tr>
      <td>[api] default_api_return_limit = 100</td>
      <td>(IntOpt) Default maximum number of items returned by API request.</td>
    </tr>
    <tr>
      <td>[api] gnocchi_is_enabled = None</td>
      <td>(BoolOpt) Set True to disable resource/meter/sample URLs. Default autodetection by querying keystone.</td>
    </tr>
    <tr>
      <td>[api] workers = 1</td>
      <td>(IntOpt) Number of workers for api, default value is 1.</td>
    </tr>
    <tr>
      <td>[collector] enable_rpc = False</td>
      <td>(BoolOpt) Enable the RPC functionality of collector. This functionality is now deprecated in favour of notifier publisher and queues.</td>
    </tr>
    <tr>
      <td>[collector] workers = 1</td>
      <td>(IntOpt) Number of workers for collector service. default value is 1.</td>
    </tr>
    <tr>
      <td>[cors] allow_credentials = True</td>
      <td>(BoolOpt) Indicate that the actual request can include user credentials</td>
    </tr>
    <tr>
      <td>[cors] allow_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which header field names may be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors] allow_methods = GET, POST, PUT, DELETE, OPTIONS</td>
      <td>(ListOpt) Indicate which methods can be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors] allowed_origin = None</td>
      <td>(StrOpt) Indicate whether this resource may be shared with the domain received in the requests "origin" header.</td>
    </tr>
    <tr>
      <td>[cors] expose_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which headers are safe to expose to the API. Defaults to HTTP Simple Headers.</td>
    </tr>
    <tr>
      <td>[cors] max_age = 3600</td>
      <td>(IntOpt) Maximum cache age of CORS preflight requests.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allow_credentials = True</td>
      <td>(BoolOpt) Indicate that the actual request can include user credentials</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allow_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which header field names may be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allow_methods = GET, POST, PUT, DELETE, OPTIONS</td>
      <td>(ListOpt) Indicate which methods can be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allowed_origin = None</td>
      <td>(StrOpt) Indicate whether this resource may be shared with the domain received in the requests "origin" header.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] expose_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which headers are safe to expose to the API. Defaults to HTTP Simple Headers.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] max_age = 3600</td>
      <td>(IntOpt) Maximum cache age of CORS preflight requests.</td>
    </tr>
    <tr>
      <td>[database] alarm_history_time_to_live = -1</td>
      <td>(IntOpt) Number of seconds that alarm histories are kept in the database for (&lt;= 0 means forever).</td>
    </tr>
    <tr>
      <td>[dispatcher_gnocchi] archive_policy = low</td>
      <td>(StrOpt) The archive policy to use when the dispatcher create a new metric.</td>
    </tr>
    <tr>
      <td>[dispatcher_gnocchi] archive_policy_file = gnocchi_archive_policy_map.yaml</td>
      <td>(StrOpt) The Yaml file that defines per metric archive policies.</td>
    </tr>
    <tr>
      <td>[dispatcher_gnocchi] filter_project = gnocchi</td>
      <td>(StrOpt) Gnocchi project used to filter out samples generated by Gnocchi service activity</td>
    </tr>
    <tr>
      <td>[dispatcher_gnocchi] filter_service_activity = True</td>
      <td>(BoolOpt) Filter out samples generated by Gnocchi service activity</td>
    </tr>
    <tr>
      <td>[dispatcher_gnocchi] resources_definition_file = gnocchi_resources.yaml</td>
      <td>(StrOpt) The Yaml file that defines mapping between samples and gnocchi resources/metrics</td>
    </tr>
    <tr>
      <td>[dispatcher_gnocchi] url = http://localhost:8041</td>
      <td>(StrOpt) URL to Gnocchi.</td>
    </tr>
    <tr>
      <td>[hardware] meter_definitions_file = snmp.yaml</td>
      <td>(StrOpt) Configuration file for defining hardware snmp meters.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] region_name = None</td>
      <td>(StrOpt) The region in which the identity server can be found.</td>
    </tr>
    <tr>
      <td>[meter] meter_definitions_cfg_file = meters.yaml</td>
      <td>(StrOpt) Configuration file for defining meter notifications.</td>
    </tr>
    <tr>
      <td>[notification] pipeline_processing_queues = 10</td>
      <td>(IntOpt) Number of queues to parallelize workload across. This value should be larger than the number of active notification agents for optimal results.</td>
    </tr>
    <tr>
      <td>[notification] workers = 1</td>
      <td>(IntOpt) Number of workers for notification service, default value is 1.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] password = </td>
      <td>(StrOpt) Password for message broker authentication</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] sasl_config_dir = </td>
      <td>(StrOpt) Path to directory that contains the SASL configuration</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] sasl_config_name = </td>
      <td>(StrOpt) Name of configuration file (without .conf suffix)</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] sasl_mechanisms = </td>
      <td>(StrOpt) Space separated list of acceptable SASL mechanisms</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] username = </td>
      <td>(StrOpt) User name for message broker authentication</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] send_single_reply = False</td>
      <td>(BoolOpt) Send a single AMQP reply to call message. The current behaviour since oslo-incubator is to send two AMQP replies - first one with the payload, a second one to ensure the other have finish to send the payload. We are going to remove it in the N release, but we must keep backward compatible at the same time. This option provides such compatibility - it defaults to False in Liberty and can be turned on for early adopters with a new installations or for testing. Please note, that this option will be removed in the Mitaka release.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_reconnect_timeout = 60</td>
      <td>(IntOpt) How long to wait before considering a reconnect attempt to have failed. This value should not be longer than rpc_response_timeout.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] send_single_reply = False</td>
      <td>(BoolOpt) Send a single AMQP reply to call message. The current behaviour since oslo-incubator is to send two AMQP replies - first one with the payload, a second one to ensure the other have finish to send the payload. We are going to remove it in the N release, but we must keep backward compatible at the same time. This option provides such compatibility - it defaults to False in Liberty and can be turned on for early adopters with a new installations or for testing. Please note, that this option will be removed in the Mitaka release.</td>
    </tr>
    <tr>
      <td>[oslo_middleware] secure_proxy_ssl_header = X-Forwarded-Proto</td>
      <td>(StrOpt) The HTTP Header that will be used to determine what the original request protocol scheme was, even if it was hidden by an SSL termination proxy.</td>
    </tr>
    <tr>
      <td>[vmware] ca_file = None</td>
      <td>(StrOpt) CA bundle file to use in verifying the vCenter server certificate.</td>
    </tr>
    <tr>
      <td>[vmware] insecure = False</td>
      <td>(BoolOpt) If true, the vCenter server certificate is not verified. If false, then the default CA truststore is used for verification. This option is ignored if "ca_file" is set.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] default_log_levels</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, requests.packages.urllib3.util.retry=WARN, urllib3.util.retry=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN, taskflow=WARN</td>
    </tr>
    <tr>
      <td>[DEFAULT] logging_exception_prefix</td>
      <td>%(asctime)s.%(msecs)03d %(process)d TRACE %(name)s %(instance)s</td>
      <td>%(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_zmq_matchmaker</td>
      <td>local</td>
      <td>redis</td>
    </tr>
    <tr>
      <td>[DEFAULT] use_syslog_rfc_format</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[DEFAULT] verbose</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[matchmaker_redis] password</td>
      <td>None</td>
      <td></td>
    </tr>
    <tr>
      <td>[notification] disable_non_metric_meters</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] heartbeat_timeout_threshold</td>
      <td>0</td>
      <td>60</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] api_workers</td>
      <td>[api] workers</td>
    </tr>
    <tr>
      <td>[DEFAULT] notification_workers</td>
      <td>[notification] workers</td>
    </tr>
    <tr>
      <td>[DEFAULT] database_connection</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] collector_workers</td>
      <td>[collector] workers</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_thread_pool_size</td>
      <td>[DEFAULT] executor_thread_pool_size</td>
    </tr>
    <tr>
      <td>[DEFAULT] log_format</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] use_syslog</td>
      <td>None</td>
    </tr>
  </table>
</section>
