<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="ironic-conf-changes-liberty">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Liberty for Bare metal service</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] executor_thread_pool_size = 64</td>
      <td>(IntOpt) Size of executor thread pool.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[agent] agent_erase_devices_iterations = 1</td>
      <td>(IntOpt) Number of iterations to be run for erasing devices.</td>
    </tr>
    <tr>
      <td>[agent] post_deploy_get_power_state_retries = 6</td>
      <td>(IntOpt) Number of times to retry getting power state to check if bare metal node has been powered off after a soft power off.</td>
    </tr>
    <tr>
      <td>[agent] post_deploy_get_power_state_retry_interval = 5</td>
      <td>(IntOpt) Amount of time (in seconds) to wait between polling power state after trigger soft poweroff.</td>
    </tr>
    <tr>
      <td>[cisco_ucs] action_interval = 5</td>
      <td>(IntOpt) Amount of time in seconds to wait in between power operations</td>
    </tr>
    <tr>
      <td>[cisco_ucs] max_retry = 6</td>
      <td>(IntOpt) Number of times a power operation needs to be retried</td>
    </tr>
    <tr>
      <td>[deploy] http_root = /httpboot</td>
      <td>(StrOpt) ironic-conductor node's HTTP root path.</td>
    </tr>
    <tr>
      <td>[deploy] http_url = None</td>
      <td>(StrOpt) ironic-conductor node's HTTP server URL. Example: http://192.1.2.3:8080</td>
    </tr>
    <tr>
      <td>[drac] client_retry_count = 5</td>
      <td>(IntOpt) In case there is a communication failure, the DRAC client is going to resend the request as many times as defined in this setting.</td>
    </tr>
    <tr>
      <td>[drac] client_retry_delay = 5</td>
      <td>(IntOpt) In case there is a communication failure, the DRAC client is going to wait for as many seconds as defined in this setting before resending the request.</td>
    </tr>
    <tr>
      <td>[inspector] enabled = False</td>
      <td>(BoolOpt) whether to enable inspection using ironic-inspector</td>
    </tr>
    <tr>
      <td>[inspector] service_url = None</td>
      <td>(StrOpt) ironic-inspector HTTP endpoint. If this is not set, the ironic-inspector client default (http://127.0.0.1:5050) will be used.</td>
    </tr>
    <tr>
      <td>[inspector] status_check_period = 60</td>
      <td>(IntOpt) period (in seconds) to check status of nodes on inspection</td>
    </tr>
    <tr>
      <td>[irmc] remote_image_server = None</td>
      <td>(StrOpt) IP of remote image server</td>
    </tr>
    <tr>
      <td>[irmc] remote_image_share_name = share</td>
      <td>(StrOpt) share name of remote_image_server</td>
    </tr>
    <tr>
      <td>[irmc] remote_image_share_root = /remote_image_share_root</td>
      <td>(StrOpt) Ironic conductor node's "NFS" or "CIFS" root path</td>
    </tr>
    <tr>
      <td>[irmc] remote_image_share_type = CIFS</td>
      <td>(StrOpt) Share type of virtual media, either "NFS" or "CIFS"</td>
    </tr>
    <tr>
      <td>[irmc] remote_image_user_domain = </td>
      <td>(StrOpt) Domain name of remote_image_user_name</td>
    </tr>
    <tr>
      <td>[irmc] remote_image_user_name = None</td>
      <td>(StrOpt) User name of remote_image_server</td>
    </tr>
    <tr>
      <td>[irmc] remote_image_user_password = None</td>
      <td>(StrOpt) Password of remote_image_user_name</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] send_single_reply = False</td>
      <td>(BoolOpt) Send a single AMQP reply to call message. The current behaviour since oslo-incubator is to send two AMQP replies - first one with the payload, a second one to ensure the other have finish to send the payload. We are going to remove it in the N release, but we must keep backward compatible at the same time. This option provides such compatibility - it defaults to False in Liberty and can be turned on for early adopters with a new installations or for testing. Please note, that this option will be removed in M release.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_reconnect_timeout = 60</td>
      <td>(IntOpt) How long to wait before considering a reconnect attempt to have failed. This value should not be longer than rpc_response_timeout.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] send_single_reply = False</td>
      <td>(BoolOpt) Send a single AMQP reply to call message. The current behaviour since oslo-incubator is to send two AMQP replies - first one with the payload, a second one to ensure the other have finish to send the payload. We are going to remove it in the N release, but we must keep backward compatible at the same time. This option provides such compatibility - it defaults to False in Liberty and can be turned on for early adopters with a new installations or for testing. Please note, that this option will be removed in M release.</td>
    </tr>
    <tr>
      <td>[oslo_versionedobjects] fatal_exception_format_errors = False</td>
      <td>(BoolOpt) Make exception message format errors fatal</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] default_log_levels</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, requests.packages.urllib3.util.retry=WARN, urllib3.util.retry=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN, taskflow=WARN</td>
    </tr>
    <tr>
      <td>[DEFAULT] logging_exception_prefix</td>
      <td>%(asctime)s.%(msecs)03d %(process)d TRACE %(name)s %(instance)s</td>
      <td>%(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s</td>
    </tr>
    <tr>
      <td>[DEFAULT] tempdir</td>
      <td>None</td>
      <td>/tmp</td>
    </tr>
    <tr>
      <td>[DEFAULT] use_syslog_rfc_format</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[DEFAULT] verbose</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] heartbeat_timeout_threshold</td>
      <td>0</td>
      <td>60</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] rpc_thread_pool_size</td>
      <td>[DEFAULT] executor_thread_pool_size</td>
    </tr>
    <tr>
      <td>[DEFAULT] log_format</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] use_syslog</td>
      <td>None</td>
    </tr>
  </table>
</section>
