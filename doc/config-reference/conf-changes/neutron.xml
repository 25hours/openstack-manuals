<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="neutron-conf-changes-liberty">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated, and deprecated options in Liberty for OpenStack Networking</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] dns_domain = openstacklocal</td>
      <td>(StrOpt) Domain to use for building the hostnames</td>
    </tr>
    <tr>
      <td>[DEFAULT] dnsmasq_base_log_dir = None</td>
      <td>(StrOpt) Base log dir for dnsmasq logging. The log contains DHCP and DNS log information and is useful for debugging issues with either DHCP or DNS. If this section is null, disable dnsmasq log.</td>
    </tr>
    <tr>
      <td>[DEFAULT] enable_new_agents = True</td>
      <td>(BoolOpt) Agent starts with admin_state_up=False when enable_new_agents=False. In the case, user's resources will not be scheduled automatically to the agent until admin changes admin_state_up to True.</td>
    </tr>
    <tr>
      <td>[DEFAULT] enable_snat_by_default = True</td>
      <td>(BoolOpt) Define the default value of enable_snat if not provided in external_gateway_info.</td>
    </tr>
    <tr>
      <td>[DEFAULT] endpoint_url = None</td>
      <td>(StrOpt) Neutron endpoint URL, if not set will use endpoint from the keystone catalog along with endpoint_type</td>
    </tr>
    <tr>
      <td>[DEFAULT] executor_thread_pool_size = 64</td>
      <td>(IntOpt) Size of executor thread pool.</td>
    </tr>
    <tr>
      <td>[DEFAULT] force_metadata = False</td>
      <td>(BoolOpt) Force to use DHCP to get Metadata on all networks.</td>
    </tr>
    <tr>
      <td>[DEFAULT] ipam_driver = None</td>
      <td>(StrOpt) IPAM driver to use.</td>
    </tr>
    <tr>
      <td>[DEFAULT] password = </td>
      <td>(StrOpt) Password for Redis server (optional).</td>
    </tr>
    <tr>
      <td>[DEFAULT] pd_confs = $state_path/pd</td>
      <td>(StrOpt) Location to store IPv6 PD files.</td>
    </tr>
    <tr>
      <td>[DEFAULT] pd_dhcp_driver = dibbler</td>
      <td>(StrOpt) Service to handle DHCPv6 Prefix delegation.</td>
    </tr>
    <tr>
      <td>[DEFAULT] port = 6379</td>
      <td>(IntOpt) Use this port to connect to redis host.</td>
    </tr>
    <tr>
      <td>[DEFAULT] prefix_delegation_driver = dibbler</td>
      <td>(StrOpt) Driver used for ipv6 prefix delegation. This needs to be an entry point defined in the neutron.agent.linux.pd_drivers namespace. See setup.cfg for entry points included with the neutron source.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_poll_timeout = 1</td>
      <td>(IntOpt) The default number of seconds that poll should wait. Poll raises timeout exception when timeout expired.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_zmq_all_req_rep = True</td>
      <td>(BoolOpt) Use REQ/REP pattern for all methods CALL/CAST/FANOUT.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_zmq_concurrency = eventlet</td>
      <td>(StrOpt) Type of concurrency used. Either "native" or "eventlet"</td>
    </tr>
    <tr>
      <td>[DEFAULT] vendor_pen = 8888</td>
      <td>(StrOpt) A decimal value as Vendor's Registered Private Enterprise Number as required by RFC3315 DUID-EN.</td>
    </tr>
    <tr>
      <td>[DEFAULT] watch_log_file = False</td>
      <td>(BoolOpt) (Optional) Uses logging handler designed to watch file system. When log file is moved or removed this handler will open a new log file with specified path instantaneously. It makes sense only if log-file option is specified and Linux platform is used. This option is ignored if log_config_append is set.</td>
    </tr>
    <tr>
      <td>[DEFAULT] zmq_use_broker = True</td>
      <td>(BoolOpt) Shows whether zmq-messaging uses broker or not.</td>
    </tr>
    <tr>
      <td>[AGENT] agent_type = Open vSwitch agent</td>
      <td>(StrOpt) Selects the Agent Type reported</td>
    </tr>
    <tr>
      <td>[AGENT] drop_flows_on_start = False</td>
      <td>(BoolOpt) Reset flow table on start. Setting this to True will cause brief traffic interruption.</td>
    </tr>
    <tr>
      <td>[AGENT] log_agent_heartbeats = False</td>
      <td>(BoolOpt) Log agent heartbeats</td>
    </tr>
    <tr>
      <td>[AGENT] tunnel_csum = False</td>
      <td>(BoolOpt) Set or un-set the tunnel header checksum  on outgoing IP packet carrying GRE/VXLAN tunnel.</td>
    </tr>
    <tr>
      <td>[LINUX_BRIDGE] bridge_mappings = </td>
      <td>(ListOpt) List of &lt;physical_network&gt;:&lt;physical_bridge&gt;</td>
    </tr>
    <tr>
      <td>[OVS] datapath_type = system</td>
      <td>(StrOpt) OVS datapath to use.</td>
    </tr>
    <tr>
      <td>[OVS] of_connect_timeout = 30</td>
      <td>(IntOpt) Timeout in seconds to wait for the local switch connecting the controller. Used only for 'native' driver.</td>
    </tr>
    <tr>
      <td>[OVS] of_interface = ovs-ofctl</td>
      <td>(StrOpt) OpenFlow interface to use.</td>
    </tr>
    <tr>
      <td>[OVS] of_listen_address = 127.0.0.1</td>
      <td>(IPOpt) Address to listen on for OpenFlow connections. Used only for 'native' driver.</td>
    </tr>
    <tr>
      <td>[OVS] of_listen_port = 6633</td>
      <td>(IntOpt) Port to listen on for OpenFlow connections. Used only for 'native' driver.</td>
    </tr>
    <tr>
      <td>[OVS] of_request_timeout = 10</td>
      <td>(IntOpt) Timeout in seconds to wait for a single OpenFlow request. Used only for 'native' driver.</td>
    </tr>
    <tr>
      <td>[QUOTAS] quota_rbac_entry = 10</td>
      <td>(IntOpt) Default number of RBAC entries allowed per tenant. A negative value means unlimited.</td>
    </tr>
    <tr>
      <td>[QUOTAS] track_quota_usage = True</td>
      <td>(BoolOpt) Keep in track in the database of current resourcequota usage. Plugins which do not leverage the neutron database should set this flag to False</td>
    </tr>
    <tr>
      <td>[agent] extensions = </td>
      <td>(ListOpt) Extensions list to use</td>
    </tr>
    <tr>
      <td>[cors] allow_credentials = True</td>
      <td>(BoolOpt) Indicate that the actual request can include user credentials</td>
    </tr>
    <tr>
      <td>[cors] allow_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which header field names may be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors] allow_methods = GET, POST, PUT, DELETE, OPTIONS</td>
      <td>(ListOpt) Indicate which methods can be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors] allowed_origin = None</td>
      <td>(StrOpt) Indicate whether this resource may be shared with the domain received in the requests "origin" header.</td>
    </tr>
    <tr>
      <td>[cors] expose_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which headers are safe to expose to the API. Defaults to HTTP Simple Headers.</td>
    </tr>
    <tr>
      <td>[cors] max_age = 3600</td>
      <td>(IntOpt) Maximum cache age of CORS preflight requests.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allow_credentials = True</td>
      <td>(BoolOpt) Indicate that the actual request can include user credentials</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allow_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which header field names may be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allow_methods = GET, POST, PUT, DELETE, OPTIONS</td>
      <td>(ListOpt) Indicate which methods can be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allowed_origin = None</td>
      <td>(StrOpt) Indicate whether this resource may be shared with the domain received in the requests "origin" header.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] expose_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which headers are safe to expose to the API. Defaults to HTTP Simple Headers.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] max_age = 3600</td>
      <td>(IntOpt) Maximum cache age of CORS preflight requests.</td>
    </tr>
    <tr>
      <td>[keystone_authtoken] region_name = None</td>
      <td>(StrOpt) The region in which the identity server can be found.</td>
    </tr>
    <tr>
      <td>[ml2] external_network_type = None</td>
      <td>(StrOpt) Default network type for external networks when no provider attributes are specified. By default it is None, which means that if provider attributes are not specified while creating external networks then they will have the same type as tenant networks. Allowed values for external_network_type config option depend on the network type values configured in type_drivers config option.</td>
    </tr>
    <tr>
      <td>[ml2_type_geneve] max_header_size = 50</td>
      <td>(IntOpt) Geneve encapsulation header size is dynamic, this value is used to calculate the maximum MTU for the driver.this is the sum of the sizes of the outer ETH + IP + UDP + GENEVE header sizes</td>
    </tr>
    <tr>
      <td>[ml2_type_geneve] vni_ranges = </td>
      <td>(ListOpt) Comma-separated list of &lt;vni_min&gt;:&lt;vni_max&gt; tuples enumerating ranges of Geneve VNI IDs that are available for tenant network allocation</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] password = </td>
      <td>(StrOpt) Password for message broker authentication</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] sasl_config_dir = </td>
      <td>(StrOpt) Path to directory that contains the SASL configuration</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] sasl_config_name = </td>
      <td>(StrOpt) Name of configuration file (without .conf suffix)</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] sasl_mechanisms = </td>
      <td>(StrOpt) Space separated list of acceptable SASL mechanisms</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] username = </td>
      <td>(StrOpt) User name for message broker authentication</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] send_single_reply = False</td>
      <td>(BoolOpt) Send a single AMQP reply to call message. The current behaviour since oslo-incubator is to send two AMQP replies - first one with the payload, a second one to ensure the other have finish to send the payload. We are going to remove it in the N release, but we must keep backward compatible at the same time. This option provides such compatibility - it defaults to False in Liberty and can be turned on for early adopters with a new installations or for testing. Please note, that this option will be removed in the Mitaka release.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_reconnect_timeout = 60</td>
      <td>(IntOpt) How long to wait before considering a reconnect attempt to have failed. This value should not be longer than rpc_response_timeout.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] send_single_reply = False</td>
      <td>(BoolOpt) Send a single AMQP reply to call message. The current behaviour since oslo-incubator is to send two AMQP replies - first one with the payload, a second one to ensure the other have finish to send the payload. We are going to remove it in the N release, but we must keep backward compatible at the same time. This option provides such compatibility - it defaults to False in Liberty and can be turned on for early adopters with a new installations or for testing. Please note, that this option will be removed in the Mitaka release.</td>
    </tr>
    <tr>
      <td>[oslo_middleware] secure_proxy_ssl_header = X-Forwarded-Proto</td>
      <td>(StrOpt) The HTTP Header that will be used to determine what the original request protocol scheme was, even if it was hidden by an SSL termination proxy.</td>
    </tr>
    <tr>
      <td>[oslo_policy] policy_default_rule = default</td>
      <td>(StrOpt) Default rule. Enforced when a requested rule is not found.</td>
    </tr>
    <tr>
      <td>[oslo_policy] policy_dirs = ['policy.d']</td>
      <td>(MultiStrOpt) Directories where policy configuration files are stored. They can be relative to any directory in the search path defined by the config_dir option, or absolute paths. The file defined by policy_file must exist for these directories to be searched.  Missing or empty directories are ignored.</td>
    </tr>
    <tr>
      <td>[oslo_policy] policy_file = policy.json</td>
      <td>(StrOpt) The JSON file that defines policies.</td>
    </tr>
    <tr>
      <td>[oslo_versionedobjects] fatal_exception_format_errors = False</td>
      <td>(BoolOpt) Make exception message format errors fatal</td>
    </tr>
    <tr>
      <td>[qos] notification_drivers = message_queue</td>
      <td>(ListOpt) Drivers list to use to send the update notification</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] api_workers</td>
      <td>0</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] default_log_levels</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, requests.packages.urllib3.util.retry=WARN, urllib3.util.retry=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, requests.packages.urllib3.util.retry=WARN, urllib3.util.retry=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN, taskflow=WARN</td>
    </tr>
    <tr>
      <td>[DEFAULT] dhcp_delete_namespaces</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[DEFAULT] endpoint_type</td>
      <td>publicURL</td>
      <td>adminURL</td>
    </tr>
    <tr>
      <td>[DEFAULT] logging_exception_prefix</td>
      <td>%(asctime)s.%(msecs)03d %(process)d TRACE %(name)s %(instance)s</td>
      <td>%(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s</td>
    </tr>
    <tr>
      <td>[DEFAULT] network_scheduler_driver</td>
      <td>neutron.scheduler.dhcp_agent_scheduler.ChanceScheduler</td>
      <td>neutron.scheduler.dhcp_agent_scheduler.WeightScheduler</td>
    </tr>
    <tr>
      <td>[DEFAULT] router_delete_namespaces</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[DEFAULT] router_scheduler_driver</td>
      <td>neutron.scheduler.l3_agent_scheduler.ChanceScheduler</td>
      <td>neutron.scheduler.l3_agent_scheduler.LeastRoutersScheduler</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_workers</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_zmq_matchmaker</td>
      <td>local</td>
      <td>redis</td>
    </tr>
    <tr>
      <td>[DEFAULT] use_syslog_rfc_format</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[DEFAULT] verbose</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[AGENT] prevent_arp_spoofing</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[QUOTAS] quota_driver</td>
      <td>neutron.db.quota_db.DbQuotaDriver</td>
      <td>neutron.db.quota.driver.DbQuotaDriver</td>
    </tr>
    <tr>
      <td>[matchmaker_redis] password</td>
      <td>None</td>
      <td></td>
    </tr>
    <tr>
      <td>[ml2] type_drivers</td>
      <td>local, flat, vlan, gre, vxlan</td>
      <td>local, flat, vlan, gre, vxlan, geneve</td>
    </tr>
    <tr>
      <td>[ml2_sriov] agent_required</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] heartbeat_timeout_threshold</td>
      <td>0</td>
      <td>60</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] use_syslog</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_thread_pool_size</td>
      <td>[DEFAULT] executor_thread_pool_size</td>
    </tr>
    <tr>
      <td>[ml2_sriov] agent_required</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] log_format</td>
      <td>None</td>
    </tr>
  </table>
</section>
