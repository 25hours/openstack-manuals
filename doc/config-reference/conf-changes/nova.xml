<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="nova-conf-changes-liberty">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Liberty for OpenStack Compute</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] executor_thread_pool_size = 64</td>
      <td>(IntOpt) Size of executor thread pool.</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[DEFAULT] secure_proxy_ssl_header = None</td>
      <td>(StrOpt) The HTTP header used to determine the scheme for the original request, even if it was removed by an SSL terminating proxy. Typical value is "HTTP_X_FORWARDED_PROTO".</td>
    </tr>
    <tr>
      <td>[DEFAULT] update_resources_interval = 0</td>
      <td>(IntOpt) Interval in seconds for updating compute resources. A number less than 0 means to disable the task completely. Leaving this at the default of 0 will cause this to run at the default periodic interval. Setting it to any positive value will cause it to run at approximately that number of seconds.</td>
    </tr>
    <tr>
      <td>[cors] allow_credentials = True</td>
      <td>(BoolOpt) Indicate that the actual request can include user credentials</td>
    </tr>
    <tr>
      <td>[cors] allow_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which header field names may be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors] allow_methods = GET, POST, PUT, DELETE, OPTIONS</td>
      <td>(ListOpt) Indicate which methods can be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors] allowed_origin = None</td>
      <td>(StrOpt) Indicate whether this resource may be shared with the domain received in the requests "origin" header.</td>
    </tr>
    <tr>
      <td>[cors] expose_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which headers are safe to expose to the API. Defaults to HTTP Simple Headers.</td>
    </tr>
    <tr>
      <td>[cors] max_age = 3600</td>
      <td>(IntOpt) Maximum cache age of CORS preflight requests.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allow_credentials = True</td>
      <td>(BoolOpt) Indicate that the actual request can include user credentials</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allow_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which header field names may be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allow_methods = GET, POST, PUT, DELETE, OPTIONS</td>
      <td>(ListOpt) Indicate which methods can be used during the actual request.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] allowed_origin = None</td>
      <td>(StrOpt) Indicate whether this resource may be shared with the domain received in the requests "origin" header.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] expose_headers = Content-Type, Cache-Control, Content-Language, Expires, Last-Modified, Pragma</td>
      <td>(ListOpt) Indicate which headers are safe to expose to the API. Defaults to HTTP Simple Headers.</td>
    </tr>
    <tr>
      <td>[cors.subdomain] max_age = 3600</td>
      <td>(IntOpt) Maximum cache age of CORS preflight requests.</td>
    </tr>
    <tr>
      <td>[hyperv] power_state_check_timeframe = 60</td>
      <td>(IntOpt) The timeframe to be checked for instance power state changes.</td>
    </tr>
    <tr>
      <td>[hyperv] power_state_event_polling_interval = 2</td>
      <td>(IntOpt) Instance power state change event polling frequency.</td>
    </tr>
    <tr>
      <td>[mks] enabled = False</td>
      <td>(BoolOpt) Enable MKS related features</td>
    </tr>
    <tr>
      <td>[mks] mksproxy_base_url = http://127.0.0.1:6090/</td>
      <td>(StrOpt) Location of MKS web console proxy, in the form "http://127.0.0.1:6090/"</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] send_single_reply = False</td>
      <td>(BoolOpt) Send a single AMQP reply to call message. The current behaviour since oslo-incubator is to send two AMQP replies - first one with the payload, a second one to ensure the other have finish to send the payload. We are going to remove it in the N release, but we must keep backward compatible at the same time. This option provides such compatibility - it defaults to False in Liberty and can be turned on for early adopters with a new installations or for testing. Please note, that this option will be removed in M release.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_reconnect_timeout = 60</td>
      <td>(IntOpt) How long to wait before considering a reconnect attempt to have failed. This value should not be longer than rpc_response_timeout.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] send_single_reply = False</td>
      <td>(BoolOpt) Send a single AMQP reply to call message. The current behaviour since oslo-incubator is to send two AMQP replies - first one with the payload, a second one to ensure the other have finish to send the payload. We are going to remove it in the N release, but we must keep backward compatible at the same time. This option provides such compatibility - it defaults to False in Liberty and can be turned on for early adopters with a new installations or for testing. Please note, that this option will be removed in M release.</td>
    </tr>
    <tr>
      <td>[oslo_middleware] secure_proxy_ssl_header = X-Forwarded-Proto</td>
      <td>(StrOpt) The HTTP Header that will be used to determine what the original request protocol scheme was, even if it was hidden by an SSL termination proxy.</td>
    </tr>
    <tr>
      <td>[oslo_versionedobjects] fatal_exception_format_errors = False</td>
      <td>(BoolOpt) Make exception message format errors fatal</td>
    </tr>
    <tr>
      <td>[vmware] ca_file = None</td>
      <td>(StrOpt) Specify a CA bundle file to use in verifying the vCenter server certificate.</td>
    </tr>
    <tr>
      <td>[vmware] console_delay_seconds = None</td>
      <td>(IntOpt) Set this value if affected by an increased network latency causing repeated characters when typing in a remote console.</td>
    </tr>
    <tr>
      <td>[vmware] insecure = False</td>
      <td>(BoolOpt) If true, the vCenter server certificate is not verified. If false, then the default CA truststore is used for verification. This option is ignored if "ca_file" is set.</td>
    </tr>
    <tr>
      <td>[vmware] serial_port_proxy_uri = None</td>
      <td>(StrOpt) Identifies a proxy service that provides network access to the serial_port_service_uri. This option is ignored if serial_port_service_uri is not specified.</td>
    </tr>
    <tr>
      <td>[vmware] serial_port_service_uri = None</td>
      <td>(StrOpt) Identifies the remote system that serial port traffic will be sent to. If this is not set, no serial ports will be added to the created VMs.</td>
    </tr>
    <tr>
      <td>[vnc] enabled = True</td>
      <td>(BoolOpt) Enable VNC related features</td>
    </tr>
    <tr>
      <td>[vnc] keymap = en-us</td>
      <td>(StrOpt) Keymap for VNC</td>
    </tr>
    <tr>
      <td>[vnc] novncproxy_base_url = http://127.0.0.1:6080/vnc_auto.html</td>
      <td>(StrOpt) Location of VNC console proxy, in the form "http://127.0.0.1:6080/vnc_auto.html"</td>
    </tr>
    <tr>
      <td>[vnc] vncserver_listen = 127.0.0.1</td>
      <td>(StrOpt) IP address on which instance vncservers should listen</td>
    </tr>
    <tr>
      <td>[vnc] vncserver_proxyclient_address = 127.0.0.1</td>
      <td>(StrOpt) The address to which proxy clients (like nova-xvpvncproxy) should connect</td>
    </tr>
    <tr>
      <td>[vnc] xvpvncproxy_base_url = http://127.0.0.1:6081/console</td>
      <td>(StrOpt) Location of nova xvp VNC console proxy, in the form "http://127.0.0.1:6081/console"</td>
    </tr>
    <tr>
      <td>[workarounds] handle_virt_lifecycle_events = True</td>
      <td>(BoolOpt) Whether or not to handle events raised from the compute driver's 'emit_event' method. These are lifecycle events raised from compute drivers that implement the method. An example of a lifecycle event is an instance starting or stopping. If the instance is going through task state changes due to an API operation, like resize, the events are ignored. However, this is an advanced feature which allows the hypervisor to signal to the compute service that an unexpected state change has occurred in an instance and the instance can be shutdown automatically - which can inherently race in reboot operations or when the compute service or host is rebooted, either planned or due to an unexpected outage. Care should be taken when using this and sync_power_state_interval is negative since then if any instances are out of sync between the hypervisor and the Nova database they will have to be synchronized manually. See https://bugs.launchpad.net/bugs/1444630</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] compute_available_monitors</td>
      <td>['nova.compute.monitors.all_monitors']</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] default_log_levels</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, requests.packages.urllib3.util.retry=WARN, urllib3.util.retry=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN, urllib3.connectionpool=WARN, websocket=WARN, requests.packages.urllib3.util.retry=WARN, urllib3.util.retry=WARN, keystonemiddleware=WARN, routes.middleware=WARN, stevedore=WARN, taskflow=WARN</td>
    </tr>
    <tr>
      <td>[DEFAULT] logging_exception_prefix</td>
      <td>%(asctime)s.%(msecs)03d %(process)d TRACE %(name)s %(instance)s</td>
      <td>%(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s</td>
    </tr>
    <tr>
      <td>[DEFAULT] use_syslog_rfc_format</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[DEFAULT] verbose</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[cells] mute_weight_multiplier</td>
      <td>-10.0</td>
      <td>-10000.0</td>
    </tr>
    <tr>
      <td>[libvirt] remove_unused_kernels</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[osapi_v3] enabled</td>
      <td>False</td>
      <td>True</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] heartbeat_timeout_threshold</td>
      <td>0</td>
      <td>60</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] network_device_mtu</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] vnc_keymap</td>
      <td>[vnc] keymap</td>
    </tr>
    <tr>
      <td>[ironic] admin_auth_token</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] vnc_enabled</td>
      <td>[vnc] enabled</td>
    </tr>
    <tr>
      <td>[DEFAULT] use_syslog</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] xvpvncproxy_base_url</td>
      <td>[vnc] xvpvncproxy_base_url</td>
    </tr>
    <tr>
      <td>[ironic] client_log_level</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[neutron] admin_username</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[neutron] auth_strategy</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] novncproxy_base_url</td>
      <td>[vnc] novncproxy_base_url</td>
    </tr>
    <tr>
      <td>[DEFAULT] compute_available_monitors</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[neutron] admin_user_id</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[neutron] admin_tenant_id</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] log_format</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] vncserver_proxyclient_address</td>
      <td>[vnc] vncserver_proxyclient_address</td>
    </tr>
    <tr>
      <td>[workarounds] destroy_after_evacuate</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[neutron] admin_tenant_name</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[osapi_v3] enabled</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_thread_pool_size</td>
      <td>[DEFAULT] executor_thread_pool_size</td>
    </tr>
    <tr>
      <td>[DEFAULT] vncserver_listen</td>
      <td>[vnc] vncserver_listen</td>
    </tr>
    <tr>
      <td>[neutron] admin_password</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[DEFAULT] share_dhcp_address</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[libvirt] remove_unused_kernels</td>
      <td>None</td>
    </tr>
    <tr>
      <td>[neutron] admin_auth_url</td>
      <td>None</td>
    </tr>
  </table>
</section>
