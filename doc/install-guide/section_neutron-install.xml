<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="neutron-install-network-node"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:html="http://www.w3.org/1999/xhtml" version="5.0">
  <title>Install Networking Services on the network node</title>
  <note>
    <para>Before you start, set up your machine to be a dedicated
      network node. Dedicated network nodes should have the following
      NICs: the management NIC (called
        <replaceable>MGMT_INTERFACE</replaceable>), the data NIC
      (called <replaceable>DATA_INTERFACE</replaceable>), and the
      external NIC (called
        <replaceable>EXTERNAL_INTERFACE</replaceable>).</para>
    <para>The management network handles communication between nodes.
      The data network handles communication coming to and from VMs.
      The external NIC connects the network node to the outside world,
      so your VMs can have connectivity to the outside world.</para>
    <para>All NICs should have static IPs. However, the data and
      external NICs have some special set up. For details about your
      chosen Neutron plug-in, see <xref
        linkend="install-neutron.install-plug-in"/>.</para>
  </note>
  <warning os="rhel;centos">
    <para>By default, the <literal>system-config-firewall</literal>
      automated firewall configuration tool is in place on RHEL. This
      graphical interface (and a curses-style interface with
        <literal>-tui</literal> on the end of the name) enables you to
      configure IP tables as a basic firewall. You should disable it
      when you work with Neutron unless you are familiar with the
      underlying network technologies, as, by default, it blocks
      various types of network traffic that are important to Neutron.
      To disable it, simple launch the program and clear the
        <guilabel>Enabled</guilabel> check box.</para>
    <para>After you successfully set up OpenStack with Neutron, you
      can re-enable and configure the tool. However, during Neutron
      set up, disable the tool to make it easier to debug network
      issues.</para>
  </warning>
  <procedure>
    <step>
      <para>Install the OpenStack Networking service on the controller
        node:</para>
      <screen os="ubuntu"><prompt>#</prompt> <userinput>apt-get install neutron-server neutron-dhcp-agent neutron-plugin-openvswitch neutron-l3-agent</userinput></screen>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install openstack-neutron</userinput></screen>
      <screen os="opensuse;sles"><prompt>#</prompt> <userinput>zypper install openstack-neutron openstack-neutron-l3-agent openstack-neutron-dhcp-agent</userinput></screen>
    </step>
    <step>
      <para>Enable packet forwarding and disable packet destination
        filtering so that the network node can coordinate traffic for
        the VMs. Edit the <filename>/etc/sysctl.conf</filename> file,
        as follows:</para>
      <programlisting language="ini">net.ipv4.ip_forward=1
net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0</programlisting>
      <note>
        <para>When dealing with system network-related configurations,
          you might need to restart the network service to get the
          configurations to take effect. Do so with the following
          command:</para>
        <screen os="ubuntu"><prompt>#</prompt> <userinput>service networking restart</userinput></screen>
        <screen os="rhel;centos;fedora;opensuse;sles"><prompt>#</prompt> <userinput>service network restart</userinput></screen>
      </note>
    </step>
    <step>
      <para>Create a <literal>neutron</literal> database by logging
        into as root using the password you set earlier:</para>
      <screen><prompt>#</prompt> <userinput>mysql -u root -p</userinput><prompt>mysql></prompt> <userinput>CREATE DATABASE neutron;</userinput><prompt>mysql></prompt> <userinput>GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' \
IDENTIFIED BY '<replaceable>NEUTRON_DBPASS</replaceable>';</userinput><prompt>mysql></prompt> <userinput>GRANT ALL PRIVILEGES ON keystone.* TO 'neutron'@'%' \
IDENTIFIED BY '<replaceable>NEUTRON_DBPASS</replaceable>';</userinput></screen>
    </step>
    <step>
      <para>Create the required user, service, and endpoint so that
        Neutron can interface with the Identity Service,
        Keystone.</para>
      <para>To list the tenant IDs:</para>
      <screen><prompt>#</prompt> <userinput>keystone tenant-list</userinput>  </screen>
      <para>To list role IDs:</para>
      <screen><prompt>#</prompt> <userinput>keystone role-list</userinput></screen>
      <para>Create a neutron user:</para>
      <screen><prompt>#</prompt> <userinput>keystone user-create --name=neutron --pass=<replaceable>NEUTRON_PASS</replaceable> --email=<replaceable>neutron@example.com</replaceable></userinput>   </screen>
      <para>Add the user role to the neutron user:</para>
      <screen><prompt>#</prompt> <userinput>keystone user-role-add --user=neutron --tenant=service --role=admin</userinput> </screen>
      <para>Create the neutron service:</para>
      <screen><prompt>#</prompt> <userinput>keystone service-create --name=neutron --type=network \
     --description="OpenStack Networking Service"</userinput>  </screen>
      <para>Create the neutron endpoint. Note the
          <literal>id</literal> property for the service returned in
        the previous step and use it to create the endpoint:</para>
      <screen><prompt>#</prompt> <userinput>keystone endpoint-create --region RegionOne \
                               --service-id <replaceable>the_service_id_above</replaceable> \
                               --publicurl http://<replaceable>controller</replaceable>:9696 \
                               --adminurl http://<replaceable>controller</replaceable>:9696 \
                               --internalurl http://<replaceable>controller</replaceable>:9696</userinput></screen>
    </step>
    <step>
      <para>Configure networking core. Edit the
          <filename>/etc/neutron/neutron.conf</filename> file by
        copying the following under
          <literal>keystone_authtoken</literal> section:</para>
      <programlisting language="ini">[keystone_authtoken]
auth_host = controller
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = neutron
admin_password = <replaceable>NEUTRON_PASS</replaceable></programlisting>
    </step>
    <step>
      <para>Edit the database URL under the
          <literal>[database]</literal> section:</para>
      <programlisting language="ini">[database]
connection = mysql://neutron:NEUTRON_DBPASS@controller/neutron</programlisting>
    </step>
    <step>
      <para>Edit the <filename>/etc/neutron/api-paste.ini</filename>
        file by copying the following statements under
          <literal>[filter:authtoken]</literal> section:</para>
      <programlisting language="ini">[filter:authtoken]
paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory
auth_host=controller
admin_user=neutron
admin_tenant_name=service
admin_password=<replaceable>NEUTRON_PASS</replaceable></programlisting>
    </step>
    <step>
      <para>You can now install and configure your networking plug-in.
        Neutron uses the networking plug-in to perform the actual
        software-defined networking. There are several options for
        this. Choose one, follow the <link
          linkend="install-neutron.install-plug-in"
          >instructions</link> in the linked section, and then return
        here.</para>
    </step>
  </procedure>
  <para>Now that you've installed and configured a plug-in (you did do
    that, right?), it is time to configure the main part of
    Neutron.</para>
  <procedure>
    <step>
      <para>Configure Neutron core. Edit the
          <filename>/etc/neutron/neutron.conf</filename> file by
        copying the following statements under
          <literal>keystone_authtoken</literal> section:</para>
      <programlisting language="ini">[keystone_authtoken]
auth_host = controller
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = neutron
admin_password = <replaceable>NEUTRON_PASS</replaceable></programlisting>
    </step>
    <step>
      <para>Edit the database URL under the
          <literal>[database]</literal> section:</para>
      <programlisting language="ini">[database]
connection = mysql://neutron:<replaceable>NEUTRON_DBPASS</replaceable>@controller/neutron</programlisting>
    </step>
    <step>
      <para>Edit the <filename>/etc/neutron/api-paste.ini</filename>
        file by copying the following statements under
          <literal>[filter:authtoken]</literal> section:</para>
      <programlisting language="ini">[filter:authtoken]
paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory
auth_host=controller
admin_user=neutron
admin_tenant_name=service
admin_password=<replaceable>NEUTRON_PASS</replaceable></programlisting>
    </step>
    <step>
      <para>Install DHCP Agent, Metadata Agent, <systemitem
          role="service">dnsmasq</systemitem>
        <systemitem role="service">neutron-dhcp-agent</systemitem>
        <systemitem role="service"
        >neutron-l3-agent</systemitem>.</para>
    </step>
    <step>
      <para>Tell the DHCP agent. Enter the following command:</para>
      <screen><prompt>#</prompt> <userinput>service neutron-dhcp-agent restart</userinput><prompt>#</prompt> <userinput>service neutron-l3-agent restart</userinput></screen>
    </step>
    <step>
      <para>Neutron has support for plug-ins for this purpose, but in
        general you just use the Dnsmasq plug-in. Edit the
          <filename>/etc/neutron/dhcp_agent.ini</filename>
        file:</para>
      <programlisting language="ini">dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq</programlisting>
    </step>
    <step>
      <para>Restart the rest of Neutron:</para>
      <screen><prompt>#</prompt> <userinput>service neutron-dhcp-agent restart</userinput><prompt>#</prompt> <userinput>service neutron-l3-agent restart</userinput></screen>
      <!-- TODO(sross): enable Neutron metadata as well? -->
    </step>
    <step>
      <para><link linkend="install-neutron.configure-networks"
          >Configure the base networks</link> and return here.</para>
    </step>
  </procedure>
  <section xml:id="install-neutron.install-plug-in">
    <title>Install and configure the Neutron plug-ins</title>
    <section xml:id="install-neutron.install-plug-in.ovs">
      <title>Install the Open vSwitch (OVS) plug-in</title>
      <para>Now, you can install, and then configure, our networking
        plug-in. The networking plug-in is what Neutron uses to
        perform the actual software-defined networking. There are
        several options for this.</para>
      <para>Switch Over to the Network Node and continue with the
        following instructions for installing the OVS plug-in, if you
        want to use any other plug-in, follow the <link
          linkend="install-neutron.install-plug-in"
          >instructions</link> in the linked section, and skip the OVS
        section or else continue with the OVS section.</para>
      <procedure>
        <step>
          <para>Install the Open vSwitch plug-in and its
            dependencies:</para>
          <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>apt-get install neutron-plugin-openvswitch</userinput></screen>
          <screen os="rhel;fedora;centos"><prompt>#</prompt> <userinput>yum install openstack-neutron-openvswitch</userinput></screen>
          <screen os="opensuse;sles;"><prompt>#</prompt> <userinput>zypper install openstack-neutron-openvswitch-agent</userinput></screen>
        </step>
        <step>
          <para>Start Open vSwitch and and configure it to start when the system boots:</para>
          <screen os="ubuntu;debian;rhel;fedora;centos"><prompt>#</prompt> <userinput>service openvswitch start</userinput>
<prompt>#</prompt> <userinput>chkconfig openvswitch on</userinput></screen>
          <screen os="opensuse;sles"><prompt>#</prompt> <userinput>service openvswitch-switch start</userinput>
<prompt>#</prompt> <userinput>chkconfig openvswitch-switch on</userinput></screen>
        </step>
        <step>
          <para>You must configure Open vSwitch whether you use VLANs
            or GRE tunneling. You must add the
              <literal>br-int</literal> integration bridge (this
            connects to the VMs) and the <literal>br-ex</literal>
            external bridge (this connects to the outside
            world).</para>
          <screen>
            <prompt>#</prompt> <userinput>ovs-vsctl add-br br-int</userinput>
            <prompt>#</prompt> <userinput>ovs-vsctl add-br br-ex</userinput>
          </screen>
        </step>
        <step>
          <para>Add a <emphasis role="italic">port</emphasis>
            (connection) from the interface
              <replaceable>EXTERNAL_INTERFACE</replaceable> to
            br-ex.</para>
          <screen><prompt>#</prompt> <userinput>ovs-vsctl add-port br-ex EXTERNAL_INTERFACE</userinput>       </screen>
        </step>
        <step>
          <para>Configure
              <replaceable>EXTERNAL_INTERFACE</replaceable> to not
            have an IP address and to be in promiscuous mode.
            Additionally, you must set the newly created
              <literal>br-ex</literal> interface to have the IP
            address that formerly belonged to
              <replaceable>EXTERNAL_INTERFACE</replaceable>.</para>
          <para os="rhel;fedora;centos">Edit the
              <filename>/etc/sysconfig/network-scripts/ifcfg-EXTERNAL_INTERFACE</filename>
            file:</para>
          <programlisting language="ini" os="rhel;fedora;centos">DEVICE_INFO_HERE
ONBOOT=yes
BOOTPROTO=none
PROMISC=yes</programlisting>
        </step>
        <step os="rhel;fedora;centos">
          <para>Edit the
              <filename>/etc/sysconfig/network-scripts/ifcfg-br-ex</filename>
            file:</para>
          <programlisting language="ini">DEVICE=br-ex
TYPE=Bridge
ONBOOT=no
BOOTPROTO=none
IPADDR=EXTERNAL_INTERFACE_IP
NETMASK=EXTERNAL_INTERFACE_NETMASK
GATEWAY=EXTERNAL_INTERFACE_GATEWAY</programlisting>
        </step>
        <!-- TODO(sross): support other distros -->
        <step>
          <para>Configure the settings for the particular plug-ins.
            You must set some general <acronym>OVS</acronym>
            configuration options whether you use VLANs or GRE
            tunneling. You must tell L3 agent and DHCP agent you are
            using <acronym>OVS</acronym>. Edit the
              <filename>/etc/neutron/l3_agent.ini</filename> and
              <filename>/etc/neutron/dhcp_agent.ini</filename> files
            (respectively):</para>
          <programlisting language="ini">interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver</programlisting>
        </step>
        <step>
          <para>Similarly, you must also tell Neutron core to use
              <acronym>OVS</acronym> by editing
              <filename>/etc/neutron/neutron.conf</filename>:</para>
          <programlisting language="ini">core_plugin = neutron.plugins.openvswitch.ovs_neutron_plugin.OVSNeutronPluginV2</programlisting>
        </step>
        <step>
          <para>Tell the L3 and DHCP agents that you want to use
            namespaces. To do so, edit the
              <filename>/etc/neutron/l3_agent.ini</filename> and
              <filename>/etc/neutron/dhcp_agent.ini</filename> files,
            respectively:</para>
          <programlisting language="ini">use_namespaces = True</programlisting>

          <para os="rhel;centos">Additionally, if you a using certain
            kernels with partial support for namespaces (such as some
            recent versions of RHEL (not RHOS) and CentOS), you need
            to enable veth support, by editing the above files
            again:</para>
          <programlisting language="ini" os="rhel;centos">ovs_use_veth = True</programlisting>
        </step>
        <step>
          <para>Tell the <acronym>OVS</acronym> plug-in how to connect
            to the database. To do so, edit the
              <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>
            file:</para>
          <programlisting language="ini">[database]
connection = mysql://neutron:NEUTRON_DBPASS@controller/neutron</programlisting>
        </step>
        <step>
          <para>Now, we must decide which type of networking
            technology we wish to use to create the virtual
            networks.  Neutron has support for GRE tunneling, VLANs,
            and VXLANs.  Currently, this guide supports GRE
            tunneling and VLANs.</para>
          <para>
            <link linkend="install-neutron.install-plug-in.ovs.gre"
              >GRE tunneling</link> is simpler to set up, since it
            does not require any special configuration from
            any physical network hardware.  However, it is its own
            type of protocol, and thus is harder to filter, if you
            are concerned about filtering traffic on the physical
            network.  Additionally, the configuration given here
            does not use namespaces, meaning you can have only one
            router per network node (however, this can be overcome
            by enabling namespacing, and potentially veth, as
            specified in the section detailing how to use VLANs
            with <acronym>OVS</acronym>).</para>
          <para>On the other hand,
            <link linkend="install-neutron.install-plug-in.ovs.vlan"
              >VLAN tagging</link> modifies the ethernet header of
            packets, meaning that packets can be filtered on the
            physical network via normal methods.  However, not all
            NICs handle the increased packet size of VLAN-tagged
            packets well, and additional configuration may need to
            be made on physical network hardware to ensure that your
            Neutron VLANs do not interfere with any other VLANs on
            your network, and to ensure that any physical network
            hardware between nodes does not strip VLAN tags.</para>

          <note>
            <para>While this guide currently enables network
              namespaces by default, you can disable them if you have
              issues or your kernel does not support them. To do so,
              edit the <filename>/etc/neutron/l3_agent.ini</filename>
              and <filename>/etc/neutron/dhcp_agent.ini</filename>
              files (respectively):</para>
            <programlisting language="ini">use_namespaces = False</programlisting>
            <para>Additionally, edit the
                <filename>/etc/neutron/neutron.conf</filename> file to
              tell Neutron that overlapping IP address should not be
              enabled:</para>
            <programlisting language="ini">allow_overlapping_ips = False</programlisting>
            <para>Note that with network namespaces disabled, you will
              only be able to have one router per network node, and
              overlapping IP addresses will not be supported.</para>
            <para>You must complete additional steps after you create
              the initial Neutron virtual networks and router.</para>
          </note>
        </step>
        <!-- TODO(sross): support provider networks?  you need to modify things above for this to work -->
        <step>
          <para>You can configure a firewall. If you do not wish to
            enforce firewall rules (called <firstterm>security
              groups</firstterm> by Neutron), you can use the
              <literal>neutron.agent.firewall.NoopFirewall</literal>.
            Otherwise, you can choose to use one of the Neutron
            firewall plug-ins. To use the Hybrid OVS-IPTables driver
            (the most common choice), edit
              <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>:</para>
          <programlisting language="ini">[securitygroup]
# Firewall driver for realizing neutron security group function.
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver</programlisting>
          <warning>
            <para>You must use at least the No-Op firewall. Otherwise,
              Horizon and other OpenStack services cannot get and set
              required VM boot options.</para>
          </warning>
        </step>
        <!-- TODO(sross): document other firewall options -->
        <step>
          <para>Restart the <acronym>OVS</acronym> plug-in:</para>
          <screen><prompt>#</prompt> <userinput>service neutron-openvswitch-agent restart</userinput></screen>
        </step>
        <step>
          <para>Now, return whence you came!</para>
        </step>
      </procedure>
      <section xml:id="install-neutron.install-plug-in.ovs.gre">
        <title>Configure the Neutron <acronym>OVS</acronym> plug-in
          for GRE tunneling</title>
        <procedure>
          <step>
            <para>Tell the <acronym>OVS</acronym> plug-in to use GRE
              tunneling, using an integration bridge of
                <literal>br-int</literal> and a tunneling bridge of
                <literal>br-tun</literal>, and to use a local IP for
              the tunnel of
              <replaceable>DATA_INTERFACE</replaceable>'s IP. Edit
                <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>:</para>
            <programlisting language="ini">[ovs]
tenant_network_type = gre
tunnel_id_ranges = 1:1000
enable_tunneling = True
integration_bridge = br-int
tunnel_bridge = br-tun
local_ip = DATA_INTERFACE_IP</programlisting>
          </step>
          <step>
            <para>Return to the <acronym>OVS</acronym> general
              instruction</para>
          </step>
        </procedure>
      </section>
      <section xml:id="install-neutron.install-plug-in.ovs.vlan">
        <title>Configure the Neutron <acronym>OVS</acronym> plug-in
          for VLANs</title>
        <procedure>
          <step>
            <para>Tell <acronym>OVS</acronym> to use VLANS. Edit the
                <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>
              file:</para>
            <programlisting language="ini">[ovs]
          tenant_network_type = vlan
          network_vlan_ranges = physnet1:1:4094
          bridge_mappings = physnet1:br-DATA_INTERFACE</programlisting>
          </step>
          <step>
            <para>Create the bridge for
                <replaceable>DATA_INTERFACE</replaceable> and add
                <replaceable>DATA_INTERFACE</replaceable> to
              it:</para>
            <screen><prompt>#</prompt> <userinput>ovs-vsctl add-br br-DATA_INTERFACE</userinput>
          <prompt>#</prompt> <userinput>ovs-vsctl add-port br-DATA_INTERFACE DATA_INTERFACE</userinput></screen>
            <!-- TODO(sross): verify this next part -->
          </step>
          <step>
            <para>Now that you have added
                <replaceable>DATA_INTERFACE</replaceable> to a bridge,
              you must transfer its IP address over to the bridge.
              This is done in a manner similar to the way
                <replaceable>EXTERNAL_INTERFACE</replaceable>'s IP
              address was transfered to <literal>br-ex</literal>.
              However, in this case, you do not need to turn
              promiscuous mode on.</para>
          </step>
          <step>
            <para>Return to the <acronym>OVS</acronym> general
              instruction.</para>
          </step>
        </procedure>
      </section>
    </section>
  </section>
  <section xml:id="install-neutron.configure-networks">
    <title>Create the base Neutron networks</title>
    <note>
      <para>In the following sections, the text
          <replaceable>SPECIAL_OPTIONS</replaceable> may occur.
        Replace this text with any options specific to your networking
        plug-in choices. See <link
          linkend="install-neutron.configure-networks.plug-in-specific"
          >here</link> to check if your plug-in needs any special
        options.</para>
    </note>
    <procedure>
      <step>
        <para>Create the external network, called
            <literal>ext-net</literal> (or something else, your
          choice). This network represents a slice of the outside
          world. VMs are not directly linked to this network; instead,
          they are on sub-networks and are assigned floating IPs from
          this network's subnet's pool of floating IPs. Neutron routes
          the traffic appropriately.</para>
        <screen><prompt>#</prompt> <userinput>neutron net-create ext-net -- --router:external=True SPECIAL_OPTIONS</userinput></screen>
      </step>
      <step>
        <para>Next, you create the associated subnet. It should have
          the same gateway as
            <replaceable>EXTERNAL_INTERFAE</replaceable> would have
          had, and the same CIDR details as well. It does not have
          DHCP, because it represents a slice of the external
          world:</para>
        <screen><prompt>#</prompt> <userinput>neutron subnet-create ext-net --allocation-pool start=FLOATING_IP_START,end=FLOATING_IP_END --gateway=EXTERNAL_INTERFACE_GATEWAY --enable_dhcp=False EXTERNAL_INTERFACE_CIDR</userinput></screen>
      </step>
      <step>
        <para>Create one or more initial tenants. Choose one (you'll
          call it <replaceable>DEMO_TENANT</replaceable>) to use for
          the following parts.</para>
        <para>Create the router attached to the external network. This
          router routes traffic to the internal subnets as appropriate
          (you may wish to create it under the a given tenant, in
          which case you should append <literal>--tenant-id
            DEMO_TENANT_ID</literal> to the command).</para>
        <screen><prompt>#</prompt> <userinput>neutron router-create ext-to-int</userinput></screen>
      </step>
      <step>
        <para>Connect the router to <literal>ext-net</literal> by
          setting the router's gateway as
          <literal>ext-net</literal>:</para>
        <screen><prompt>#</prompt> <userinput>neutron router-gateway-set EXT_TO_INT_ID EXT_NET_ID</userinput></screen>
      </step>
      <step>
        <para>Create an internal network for
            <replaceable>DEMO_TENANT</replaceable> (and associated
          subnet over an arbitrary internal IP range, say,
            <literal>10.5.5.0/24</literal>), and connect it to the
          router by setting it as a port:</para>
        <screen><prompt>#</prompt> <userinput>neutron net-create --tenant-id DEMO_TENANT_ID demo-net SPECIAL_OPTIONS</userinput>
<prompt>#</prompt> <userinput>neutron subnet-create --tenant-id DEMO_TENANT_ID demo-net 10.5.5.0/24 --gateway 10.5.5.1</userinput>
<prompt>#</prompt> <userinput>neutron router-interface-add EXT_TO_INT_ID DEMO_NET_SUBNET_ID</userinput></screen>
      </step>
      <step>
        <para>Check your plug-in special options page for remaining
          steps. Then, return whence you came.</para>
      </step>
    </procedure>
    <section
      xml:id="install-neutron.configure-networks.plug-in-specific">
      <title>plug-in-specific Neutron networks options</title>
      <section
        xml:id="install-neutron.configure-networks.plug-in-specific.ovs">
        <title>Open vSwitch Network configuration options</title>
        <section
          xml:id="install-neutron.configure-networks.plug-in-specific.ovs.gre">
          <title>GRE tunneling network options</title>
          <note>
            <para>While this guide currently enables network
              namespaces by default, you can disable them if you have
              issues or your kernel does not support them. If you
              disabled namespaces, you must perform some additional
              configuration for the L3 agent.</para>
            <para>After you create all the networks, tell the L3 agent
              what the external network ID is, as well as the ID of
              the router associated with this machine (because you are
              not using namespaces, there can be only one router for
              each machine). To do this, edit the
                <filename>/etc/neutron/l3_agent.ini</filename>
              file:</para>
            <programlisting language="ini">gateway_external_network_id = <replaceable>EXT_NET_ID</replaceable>
router_id = <replaceable>EXT_TO_INT_ID</replaceable></programlisting>
            <para>Then, restart the L3 agent</para>
            <screen><prompt>#</prompt> <userinput>service neutron-l3-agent restart</userinput></screen>
          </note>
          <para>When creating networks, you should use the
            options:</para>
          <screen><userinput>--provider:network_type gre --provider:segmentation_id SEG_ID</userinput></screen>
          <para><replaceable>SEG_ID</replaceable> should be
              <literal>2</literal> for the external network, and just
            any unique number inside the tunnel range specified before
            for any other network.</para>
          <note>
            <para>These options are not needed beyond the first
              network, as Neutron automatically increments the
              segmentation id and copy the network type option for any
              additional networks.</para>
          </note>
          <para>Return to the starting point.</para>
        </section>
        <section
          xml:id="install-neutron.configure-networks.plug-in-specific.ovs.vlan">
          <title>VLAN network options</title>
          <para>When creating networks, use the following
            options:</para>
          <screen><userinput>--provider:network_type vlan --provider:physical_network physnet1 --provider:segmentation_id SEG_ID</userinput>         </screen>
          <para><replaceable>SEG_ID</replaceable> should be
              <literal>2</literal> for the external network, and just
            any unique number inside the vlan range specified before
            for any other network.</para>
          <note>
            <para>These options are not needed beyond the first
              network, as Neutron automatically increments the
              segmentation ID and copies the network type and physical
              network options for any additional networks.</para>
          </note>
          <warning>
            <para>Some NICs have Linux drivers that do not handle
              VLANs properly. See the
                <literal>ovs-vlan-bug-workaround</literal> and
                <literal>ovs-vlan-test</literal> man pages for more
              information. Additionally, you may try turning off
                <literal>rx-vlan-offload</literal> and
                <literal>tx-vlan-offload</literal> using
                <literal>ethtool</literal> on the
                <replaceable>DATA_INTERFACE</replaceable>.
              Additionally, VLAN tags add an additional 4 bytes on to
              the packet size. If your NICs cannot handle large
              packets, make sure to set the MTU 4 lower than normal on
              the <replaceable>DATA_INTERFACE</replaceable>.</para>
            <para>If you run OpenStack inside a virtualized
              environment (for testing purposes), switching to the
                <literal>virtio</literal> NIC type (or a similar
              technology if you are not using KVM/QEMU) may solve the
              issue.</para>
          </warning>
        </section>
      </section>
    </section>
  </section>
  <section xml:id="install-neutron.dedicated-compute-node">
    <title>Install required networking support on a dedicated compute
      node</title>
    <note>
      <para>This is for any node that runs compute services but does
        not run the full network stack.</para>
    </note>
    <warning os="rhel;centos">
      <para>By default, the <literal>system-config-firewall</literal>
        automated firewall configuration tool is in place on RHEL.
        This graphical interface (and a curses-style interface with
          <literal>-tui</literal> on the end of the name) enables you
        to configure IP tables as a basic firewall. You should disable
        it when you work with Neutron unless you are familiar with the
        underlying network technologies, as, by default, it blocks
        various types of network traffic that are important to
        Neutron. To disable it, simple launch the program and clear
        the <guilabel>Enabled</guilabel> check box.</para>
      <para>After you successfully set up OpenStack with Neutron, you
        can re-enable and configure the tool. However, during Neutron
        set up, disable the tool to make it easier to debug network
        issues.</para>
    </warning>
    <!--
    <note>
      <para>Before you start, make sure your compute node is set up according to <link linkend="">common setup</link> directions.</para>
    </note>
    -->
    <procedure>
      <step>
        <para>Disable packet destination filtering (route
          verification) to let the networking services route traffic
          to the VMs. Edit the <filename>/etc/sysctl.conf</filename>
          file and restart networking:</para>
        <programlisting language="ini">net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0</programlisting>
      </step>
      <step>
        <para>Install and configure plug-in components. To install and
          configure your plug-in, see <xref
            linkend="install-neutron.install-plugin-compute"/>.</para>
      </step>
      <step>
        <para>Configure the main part of Neutron. Edit the
            <filename>/etc/neutron/neutron.conf</filename>
          file:</para>
        <programlisting language="ini">auth_host = CONTROLLER_NODE_MGMT_IP
admin_tenant_name = service
admin_user = neutron
admin_password = ADMIN_PASSWORD
auth_url = http://CONTROLLER_NODE_MGMT_IP:35357/v2.0
auth_strategy = keystone
rpc_backend = YOUR_RPC_BACKEND
PUT_YOUR_RPC_BACKEND_SETTINGS_HERE_TOO</programlisting>
      </step>
    </procedure>
    <section xml:id="install-neutron.install-plugin-compute">
      <title>Install and configure the Neutron plug-ins on the
        dedicated compute node</title>
      <section xml:id="install-neutron.install-plugin-compute.ovs">
        <title>Install the Open vSwitch (OVS) plug-in on the dedicated
          compute node</title>
        <procedure>
          <step>
            <para>Install the Open vSwitch plug-in and its
              dependencies.</para>
            <screen os="rhel;fedora;centos"><prompt>#</prompt> <userinput>yum install openstack-neutron-openvswitch</userinput></screen>
            <screen os="opensuse;sles"><prompt>#</prompt> <userinput>zypper install openstack-neutron-openvswitch-agent</userinput></screen>
          </step>
          <step>
          <para>Start Open vSwitch and and configure it to start when the system boots:</para>
          <screen os="ubuntu;debian;rhel;fedora;centos"><prompt>#</prompt> <userinput>service openvswitch start</userinput>
<prompt>#</prompt> <userinput>chkconfig openvswitch on</userinput></screen>
          <screen os="opensuse;sles"><prompt>#</prompt> <userinput>service openvswitch-switch start</userinput>
<prompt>#</prompt> <userinput>chkconfig openvswitch-switch on</userinput></screen>
          </step>
          <step>
            <para>You must configure Open vSwitch whether you use
              VLANs or GRE tunneling. You must add the
                <literal>br-int</literal> integration bridge, which
              connects to the VMs.</para>
            <screen><prompt>#</prompt> <userinput>ovs-vsctl add-br br-int</userinput></screen>
          </step>
          <step>
            <para>Configure the settings for the particular plug-ins.
              You must set some general <acronym>OVS</acronym>
              configuration options whether you use VLANs or GRE
              tunneling. You must tell Neutron core to use
                <acronym>OVS</acronym>. Edit the
                <filename>/etc/neutron/neutron.conf</filename>
              file:</para>
            <programlisting language="ini">core_plugin = neutron.plugins.openvswitch.ovs_neutron_plugin.OVSNeutronPluginV2</programlisting>
          </step>
          <step>
            <para>Tell the <acronym>OVS</acronym> plug-in how to
              connect to the database. Edit the
                <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>
              file:</para>
            <programlisting language="ini">[database]
connection = mysql://neutron:NEUTRON_DBPASS@controller/neutron</programlisting>
          </step>
          <step>
            <para>Configure the network type that you chose when you
              configured the network node, which is <link
                linkend="install-neutron.install-plugin-compute.ovs.gre"
                >GRE tunneling</link> or <link
                linkend="install-neutron.install-plugin-compute.ovs.vlan"
                >VLANs</link>.</para>
          </step>
          <!-- TODO(sross): support provider networks?  you need to modify things above for this to work -->
          <step>
            <para>You can configure a firewall. If you do not wish to
              enforce firewall rules (called <firstterm>security
                groups</firstterm> by Neutron), you can use the
                <literal>neutron.agent.firewall.NoopFirewall</literal>.
              Otherwise, you can choose to use one of the Neutron
              firewall plug-ins. To use the Hybrid OVS-IPTables driver
              (the most common choice), edit the
                <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>
              file:</para>
            <programlisting language="ini">[securitygroup]
# Firewall driver for realizing neutron security group function.
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver</programlisting>
            <warning>
              <para>You must use at least the No-Op firewall.
                Otherwise, Horizon and other OpenStack services cannot
                get and set required VM boot options.</para>
            </warning>
          </step>
          <!-- TODO(sross): document other firewall options -->
          <step>
            <para>After you complete OVS configuration <emphasis>and
                the core Neutron configuration after this
                section</emphasis>, restart the Neutron Open vSwitch
              agent:</para>
            <screen><prompt>#</prompt> <userinput>service neutron-openvswitch-agent restart</userinput></screen>
          </step>
          <step>
            <para>Return where you started.</para>
          </step>
        </procedure>
        <section
          xml:id="install-neutron.install-plugin-compute.ovs.gre">
          <title>Configure the Neutron <acronym>OVS</acronym> plug-in
            for GRE tunneling on the dedicated compute node</title>
          <procedure>
            <step>
              <para>Tell the <acronym>OVS</acronym> plug-in to use GRE
                tunneling with a <literal>br-int</literal> integration
                bridge, a <literal>br-tun</literal> tunneling bridge,
                and a local IP for the tunnel of
                  <replaceable>DATA_INTERFACE</replaceable>'s IP. Edit
                the
                  <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>
                file:</para>
              <programlisting language="ini">[ovs]
tenant_network_type = gre
tunnel_id_ranges = 1:1000
enable_tunneling = True
integration_bridge = br-int
tunnel_bridge = br-tun
local_ip = DATA_INTERFACE_IP</programlisting>
            </step>
            <step>
              <para>Now, return to the <acronym>OVS</acronym> general
                instructions.</para>
            </step>
          </procedure>
        </section>
        <section
          xml:id="install-neutron.install-plugin-compute.ovs.vlan">
          <title>Configure the Neutron <acronym>OVS</acronym> plug-in
            for VLANs (work in progress)</title>
          <!-- NOTE(sross): this is a WIP, and has yet to be tested.  Additionally, a plug-in install guide specific to compute nodes will have to be written -->
          <procedure>
            <step>
              <para>Tell <acronym>OVS</acronym> to use VLANS. Edit the
                  <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>
                file:</para>
              <programlisting language="ini">[ovs]
tenant_network_type = vlan
network_vlan_ranges = physnet1:1:4094
bridge_mappings = physnet1:br-DATA_INTERFACE</programlisting>
            </step>
            <step>
              <para>Create the bridge for
                  <replaceable>DATA_INTERFACE</replaceable> and add
                  <replaceable>DATA_INTERFACE</replaceable> to
                it:</para>
              <screen><prompt>#</prompt> <userinput>ovs-vsctl add-br br-DATA_INTERFACE</userinput>
<prompt>#</prompt> <userinput>ovs-vsctl add-port br-DATA_INTERFACE DATA_INTERFACE</userinput></screen>
            </step>
            <step>
              <para>Return to the <acronym>OVS</acronym> general
                instruction.</para>
            </step>
          </procedure>
        </section>
      </section>
    </section>
  </section>
  <section xml:id="install-neutron.dedicated-controller-node">
    <title>Install Networking support on a dedicated controller
      node</title>
    <warning os="rhel;centos">
      <para>By default, the <literal>system-config-firewall</literal>
        automated firewall configuration tool is in place on RHEL.
        This graphical interface (and a curses-style interface with
          <literal>-tui</literal> on the end of the name) enables you
        to configure IP tables as a basic firewall. You should disable
        it when you work with Neutron unless you are familiar with the
        underlying network technologies, as, by default, it blocks
        various types of network traffic that are important to
        Neutron. To disable it, simple launch the program and clear
        the <guilabel>Enabled</guilabel> check box.</para>
      <para>After you successfully set up OpenStack with Neutron, you
        can re-enable and configure the tool. However, during Neutron
        set up, disable the tool to make it easier to debug network
        issues.</para>
    </warning>
    <procedure>
      <step>
        <para>Install the main Neutron server, Neutron libraries for
          python, and the neutron command-line interface (CLI):</para>
        <screen os="fedora;rhel;centos"><prompt>#</prompt> <userinput>yum install openstack-neutron python-neutron python-neutronclient</userinput></screen>
        <screen os="opensuse;sles"><prompt>#</prompt> <userinput>zypper install openstack-neutron python-neutron python-neutronclient</userinput></screen>
        <!-- TODO(sross): support other distros -->
      </step>
      <step>
        <para>Set up the Neutron server, as usual. Make sure to do the
          core server component set up (RPC back end configuration,
          auth_strategy, and so on). Configure the Neutron copy of the
            <filename>api-paste.ini</filename> at
            <filename>/etc/neutron/api-paste.ini</filename>
          file:</para>
        <programlisting language="ini">[filter:authtoken]
EXISTING_STUFF_HERE
admin_tenant_name = service
admin_user = neutron
admin_password = ADMIN_PASSWORD</programlisting>
      </step>
      <step>
        <para>Configure the plug-in you chose when you configured the
          Network node. Follow the <link
            linkend="install-neutron.install-plug-in-controller"
            >instructions</link> and return.</para>
      </step>
      <step>
        <para>Tell Nova about Neutron. Specifically, you must tell
          Nova about the Neutron endpoint and that it handles firewall
          issues, so a firewall is not required through Nova. Edit the
            <filename>/etc/nova/nova.conf</filename> file:</para>
        <programlisting language="ini">network_api_class=nova.network.neutronv2.api.API
neutron_url=http://CONTROLLER_MGMT_IP:9696
neutron_auth_strategy=keystone
neutron_admin_tenant_name=service
neutron_admin_username=neutron
neutron_admin_password=password
neutron_admin_auth_url=http://CONTROLLER_MGMT_IP:35357/v2.0
firewall_driver=nova.virt.firewall.NoopFirewallDriver
security_group_api=neutron</programlisting>
      </step>
      <step>
        <para>Start neutron-server:</para>
        <screen><prompt>#</prompt> <userinput>service neutron-server start</userinput></screen>
        <note>
          <para>Make sure that the plug-in restarted successfully. If
            you get errors about a missing
              <filename>plugin.ini</filename> file, make a symlink
            that points to
              <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>
            with the name
              <filename>/etc/neutron/plugins.ini</filename>.</para>
        </note>
      </step>
    </procedure>
    <section xml:id="install-neutron.install-plug-in-controller">
      <title>Install and configure the Neutron plug-ins on the
        dedicated controller Node</title>
      <section xml:id="install-neutron.install-plug-in-controller.ovs">
        <title>Install the Open vSwitch (OVS) plug-in on the dedicated
          controller node</title>
        <procedure>
          <step>
            <para>Install the Open vSwitch plug-in:</para>
            <screen os="rhel;fedora;centos"><prompt>#</prompt> <userinput>yum install openstack-neutron-openvswitch</userinput></screen>
            <screen os="opensuse;sles"><prompt>#</prompt> <userinput>zypper install openstack-neutron-openvswitch-agent</userinput></screen>
            <!-- TODO(sross): support other distros -->
          </step>
          <step>
            <para>Configure the settings for the particular plug-ins.
              You must set some general <acronym>OVS</acronym>
              configuration options whether you use VLANs or GRE
              tunneling. You must tell Neutron core to use
                <acronym>OVS</acronym>. Edit the
                <filename>/etc/neutron/neutron.conf</filename>
              file:</para>
            <programlisting language="ini">core_plugin = neutron.plugins.openvswitch.ovs_neutron_plugin.OVSNeutronPluginV2</programlisting>
          </step>
          <step>
            <para>Tell the <acronym>OVS</acronym> plug-in how to
              connect to the database. Edit the
                <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>
              file:</para>
            <programlisting language="ini">[database]
connection = mysql://neutron:NEUTRON_DBPASS@controller/neutron</programlisting>
          </step>
          <step>
            <para>Configure the network type that you chose when you
              configured the network node. <link
                linkend="install-neutron.install-plug-in-controller.ovs.gre"
                >GRE tunneling</link> or <link
                linkend="install-neutron.install-plug-in-controller.ovs.vlan"
                >VLANs</link>.</para>
            <!-- TODO(sross): support provider networks?  you need to modify things above for this to work -->
            <!-- TODO(sross): document firewall? -->
            <note>
              <para>Notice that the dedicated controller node does not
                actually need to run the Open vSwitch agent or run
                Open vSwitch itself.</para>
            </note>
          </step>
          <step>
            <para>Return where you started.</para>
          </step>
        </procedure>
        <section
          xml:id="install-neutron.install-plug-in-controller.ovs.gre">
          <title>Configure the Neutron <acronym>OVS</acronym> plug-in
            for GRE Tunneling on the dedicated compute node</title>
          <procedure>
            <step>
              <para>Tell the <acronym>OVS</acronym> plug-in to use GRE
                tunneling. Edit the
                  <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>
                file:</para>
              <programlisting language="ini">[ovs]
tenant_network_type = gre
tunnel_id_ranges = 1:1000
enable_tunneling = True</programlisting>
            </step>
            <step>
              <para>Return to the <acronym>OVS</acronym> general
                instructions.</para>
            </step>
          </procedure>
        </section>
        <section
          xml:id="install-neutron.install-plug-in-controller.ovs.vlan">
          <title>Configure the Neutron <acronym>OVS</acronym> plug-in
            for VLANs</title>
          <!-- NOTE(sross): this is a WIP, and has yet to be tested.  Additionally, a plug-in install guide specific to compute nodes will have to be written -->
          <procedure>
            <step>
              <para>Tell <acronym>OVS</acronym> to use VLANS. Edit the
                  <filename>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini</filename>
                file, as follows:</para>
              <programlisting language="ini">[ovs]
tenant_network_type = vlan
network_vlan_ranges = physnet1:1:4094</programlisting>
            </step>
            <step>
              <para>Return to the <acronym>OVS</acronym> general
                instructions.</para>
            </step>
          </procedure>
        </section>
      </section>
    </section>
  </section>
</section>
