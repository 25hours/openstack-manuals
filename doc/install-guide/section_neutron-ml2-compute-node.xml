<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="neutron-ml2-compute-node">
  <title>Configure compute node</title>
  <para>Before you install and configure OpenStack Networking, you
    must enable certain kernel networking functions.</para>
  <procedure>
    <title>To enable kernel networking functions</title>
    <step>
      <para>Edit the <filename>/etc/sysctl.conf</filename> file and
        add the following lines:</para>
      <programlisting>net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0</programlisting>
    </step>
    <step>
      <para>Implement the changes:</para>
      <screen><prompt>#</prompt> <userinput>sysctl -p</userinput></screen>
    </step>
  </procedure>
  <procedure os="ubuntu;rhel;centos;fedora;sles;opensuse">
    <title>To install the Networking components</title>
    <step>
      <screen os="ubuntu"><prompt>#</prompt> <userinput>apt-get install neutron-plugin-ml2 neutron-plugin-openvswitch-agent \
  openvswitch-datapath-dkms</userinput></screen>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install openstack-neutron-ml2 openstack-neutron-openvswitch</userinput></screen>
      <screen os="sles;opensuse"><prompt>#</prompt> <userinput>zypper install openstack-neutron-openvswitch-agent</userinput></screen>
      <note os="ubuntu">
        <para>Ubuntu installations that use Linux kernel version 3.11
          or later do not require the
            <emphasis>openvswitch-datapath-dkms</emphasis>
          package.</para>
      </note>
      <note os="sles;opensuse">
        <para>SUSE does not use a separate ML2 plug-in package.</para>
      </note>
    </step>
  </procedure>

  <procedure os="debian">
    <title>To install and configure the Networking components</title>
    <step>
      <screen><prompt>#</prompt> <userinput>apt-get install neutron-plugin-openvswitch-agent openvswitch-datapath-dkms</userinput></screen>
      <note>
        <para>Debian does not use a separate ML2 plug-in package.</para>
      </note>
    </step>
    <step>
      <para>Respond to prompts for <link
          linkend="debconf-dbconfig-common">database
        management</link>, <link linkend="debconf-keystone_authtoken"
          >Identity service credentials</link>, <link
          linkend="debconf-api-endpoints">service endpoint
          registration</link>, and <link linkend="debconf-rabbitmq"
          >message broker credentials</link>.</para>
    </step>
    <step>
       <para>Select the ML2 plug-in:</para>
       <informalfigure>
        <mediaobject>
          <imageobject>
            <imagedata scale="50"
              fileref="figures/debconf-screenshots/neutron_1_plugin_selection.png"
            />
          </imageobject>
        </mediaobject>
      </informalfigure>
      <note>
        <para>Selecting the ML2 plug-in also populates the
          <option>service_plugins</option> and
          <option>allow_overlapping_ips</option> keys in the
          <filename>/etc/neutron/neutron.conf</filename> file with the
          appropriate values.</para>
      </note>
    </step>
  </procedure>
  <procedure os="ubuntu;rhel;centos;fedora;sles;opensuse">
    <title>To configure the Networking common components</title>
    <para>The Networking common component configuration includes the
      authentication mechanism, message broker, and plug-in.</para>
    <step>
      <para>Configure Networking to use the Identity service for
        authentication:</para>
      <substeps>
        <step>
          <para>Edit the
              <filename>/etc/neutron/neutron.conf</filename> file and
            add the following key to the <literal>[DEFAULT]</literal>
            section:</para>
          <programlisting language="ini">[DEFAULT]
...
auth_strategy = keystone</programlisting>
          <para>Add the following keys to the
              <literal>[keystone_authtoken]</literal> section:</para>
          <programlisting language="ini">[keystone_authtoken]
...
auth_uri = http://<replaceable>controller</replaceable>:5000
auth_host = <replaceable>controller</replaceable>
auth_protocol = http
auth_port = 35357
admin_tenant_name = service
admin_user = neutron
admin_password = <replaceable>NEUTRON_PASS</replaceable></programlisting>
          <para>Replace <replaceable>NEUTRON_PASS</replaceable> with
            the password you chose for the <literal>neutron</literal>
            user in the Identity service.</para>
        </step>
      </substeps>
    </step>
    <step>
      <para>Configure Networking to use the message broker:</para>
      <substeps>
        <step>
          <para>Edit the
              <filename>/etc/neutron/neutron.conf</filename> file and
            add the following keys to the <literal>[DEFAULT]</literal>
            section:</para>
          <para>Replace <replaceable>RABBIT_PASS</replaceable> with
            the password you chose for the <literal>guest</literal>
            account in <application>RabbitMQ</application>.</para>
          <programlisting language="ini">[DEFAULT]
...
rpc_backend = neutron.openstack.common.rpc.impl_kombu
rabbit_host = <replaceable>controller</replaceable>
rabbit_password = <replaceable>RABBIT_PASS</replaceable></programlisting>
        </step>
      </substeps>
    </step>
    <step>
      <para>Configure Networking to use the Modular Layer 2 (ML2)
        plug-in and associated services:</para>
      <substeps>
        <step>
          <para>Edit the
              <filename>/etc/neutron/neutron.conf</filename> file and
            add the following keys to the <literal>[DEFAULT]</literal>
            section:</para>
          <programlisting language="ini">[DEFAULT]
...
core_plugin = ml2
service_plugins = router
allow_overlapping_ips = True</programlisting>
          <note>
            <para>To assist with troubleshooting, add<literal>verbose
                = True</literal> to the <literal>[DEFAULT]</literal>
              section in the
                <filename>/etc/neutron/neutron.conf</filename>
              file.</para>
          </note>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure>
    <title>To configure the Modular Layer 2 (ML2) plug-in</title>
    <para>The ML2 plug-in uses the Open vSwitch (OVS) mechanism
      (agent) to build the virtual networking framework for
      instances.</para>
    <step>
      <para>Edit the
          <filename>/etc/neutron/plugins/ml2/ml2_conf.ini</filename>
        file and add the following keys to the
          <literal>[ml2]</literal> section:</para>
      <programlisting language="ini">[ml2]
...
type_drivers = gre
tenant_network_types = gre
mechanism_drivers = openvswitch</programlisting>
      <para>Add the following keys to the
          <literal>[ml2_type_gre]</literal> section:</para>
      <programlisting language="ini">[ml2_type_gre]
...
tunnel_id_ranges = 1:1000</programlisting>
      <para>Add the <literal>[ovs]</literal> section and the following
        keys to it:</para>
      <para>Replace
          <replaceable>INSTANCE_TUNNELS_INTERFACE_IP_ADDRESS</replaceable>
        with the IP address of the instance tunnels network interface
        on your compute node.</para>
      <programlisting language="ini">[ovs]
...
local_ip = <replaceable>INSTANCE_TUNNELS_INTERFACE_IP_ADDRESS</replaceable>
tunnel_type = gre
enable_tunneling = True</programlisting>
      <para>Add the <literal>[securitygroup]</literal> section and the
        following keys to it:</para>
      <programlisting language="ini">[securitygroup]
...
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
enable_security_group = True</programlisting>
    </step>
  </procedure>
  <procedure>
    <title>To configure the Open vSwitch (OVS) service</title>
    <para>The OVS service provides the underlying virtual networking framework
      for instances.</para>
    <step os="rhel;centos;fedora">
      <para>Start the OVS service and configure it to start when the
        system boots:</para>
      <screen><prompt>#</prompt> <userinput>service openvswitch start</userinput>
<prompt>#</prompt> <userinput>chkconfig openvswitch on</userinput></screen>
    </step>
    <step os="sles;opensuse">
      <para>Start the OVS service and configure it to start when the
        system boots:</para>
      <screen><prompt>#</prompt> <userinput>service openvswitch-switch start</userinput>
<prompt>#</prompt> <userinput>chkconfig openvswitch-switch on</userinput></screen>
    </step>
    <step os="debian;ubuntu">
      <para>Restart the OVS service:</para>
      <screen><prompt>#</prompt> <userinput>service openvswitch-switch restart</userinput></screen>
    </step>
  </procedure>
  <procedure>
    <title>To configure Compute to use Networking</title>
    <para>By default, distribution packages configure Compute to use
      legacy networking. You must reconfigure Compute to manage
      networks through Networking.</para>
    <step>
      <para>Edit the <filename>/etc/nova/nova.conf</filename> and add
        the following keys to the <literal>[DEFAULT]</literal>
        section:</para>
      <para>Replace <replaceable>NEUTRON_PASS</replaceable> with the
        password you chose for the <literal>neutron</literal> user in
        the Identity service.</para>
      <programlisting language="ini">[DEFAULT]
...
network_api_class = nova.network.neutronv2.api.API
neutron_url = http://<replaceable>controller</replaceable>:9696
neutron_auth_strategy = keystone
neutron_admin_tenant_name = service
neutron_admin_username = neutron
neutron_admin_password = <replaceable>NEUTRON_PASS</replaceable>
neutron_admin_auth_url = http://<replaceable>controller</replaceable>:35357/v2.0
linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver
security_group_api = neutron</programlisting>
      <note>
        <para>By default, Compute uses an internal firewall service.
          Since Networking includes a firewall service, you must
          disable the Compute firewall service by using the
            <literal>nova.virt.firewall.NoopFirewallDriver</literal>
          firewall driver.</para>
      </note>
    </step>
  </procedure>
  <procedure>
    <title>To finalize the installation</title>
    <step os="rhel;centos;fedora">
      <para>The Networking service initialization scripts expect a
        symbolic link <filename>/etc/neutron/plugin.ini</filename>
        pointing to the configuration file associated with your chosen
        plug-in. Using the ML2 plug-in, for example, the symbolic link
        must point to
          <filename>/etc/neutron/plugins/ml2/ml2_conf.ini</filename>.
        If this symbolic link does not exist, create it using the
        following commands:</para>
      <screen><prompt>#</prompt> <userinput>ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</userinput></screen>
    </step>
    <step os="sles;opensuse">
      <para>The Networking service initialization scripts expect the
        variable <literal>NEUTRON_PLUGIN_CONF</literal> in the
          <filename>/etc/sysconfig/neutron</filename> file to
        reference the configuration file associated with your chosen
        plug-in. Using ML2, for example, edit the
          <filename>/etc/sysconfig/neutron</filename> file and add the
        following:</para>
      <programlisting>NEUTRON_PLUGIN_CONF="/etc/neutron/plugins/ml2/ml2_conf.ini"</programlisting>
    </step>
    <step>
      <para>Restart the Compute service:</para>
      <screen os="rhel;centos;fedora;sles;opensuse"><prompt>#</prompt> <userinput>service openstack-nova-compute restart</userinput></screen>
      <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>service nova-compute restart</userinput></screen>
    </step>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>Start the Open vSwitch (OVS) agent and configure it to
        start when the system boots:</para>
      <screen os="rhel;centos;fedora;sles;opensuse"><prompt>#</prompt> <userinput>service openstack-neutron-openvswitch-agent start</userinput>
<prompt>#</prompt> <userinput>chkconfig openstack-neutron-openvswitch-agent on</userinput></screen>
    </step>
    <step os="ubuntu;debian">
      <para>Restart the Open vSwitch (OVS) agent:</para>
      <screen><prompt>#</prompt> <userinput>service neutron-plugin-openvswitch-agent restart</userinput></screen>
    </step>
  </procedure>
</section>
