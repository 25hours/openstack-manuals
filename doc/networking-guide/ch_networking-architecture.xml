<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.0"
    xml:id="ch_networking-architecture">
    <title>Networking architecture</title>
    <para>
      A standard network architecture design includes a cloud controller
      host, a network gateway host, and a number of hypervisors for hosting
      virtual machines. The cloud controller and network gateway can be on
      the same host. However, if you expect VMs to send significant traffic
      to or from the Internet, a dedicated network gateway host helps avoid
      CPU contention between the
      <systemitem class="service">neutron-l3-agent</systemitem> and other
      OpenStack services that forward packets.
    </para>
    <para>
      You can run OpenStack Networking across multiple physical devices. It
      is also possible to run all service daemons on a single physical host
      for evaluation purposes, however this is not generally robust enough
      for production purposes. For greater redundancy, you can run each
      service on a dedicated physical host and replicate any essential
      services across multiple hosts.
    </para>
    <para>
      For more information about networking architecture options, see the
      <link
      xlink:href="http://docs.openstack.org/openstack-ops/content/network_design.html"
      >Network Design</link> section of the
      <citetitle>OpenStack Operations Guide</citetitle>.
      <!-- Bring this content directly in rather than referring to it. LKB -->
  </para>
    <!-- <mediaobject>
        <imageobject>
            <imagedata scale="50" fileref="../../common/figures/Neutron-PhysNet-Diagram.png"/>
        </imageobject>
      </mediaobject>-->
    <para>
      A standard OpenStack Networking deployment usually includes one or more of
      the following physical networks:
    </para>
    <!--Lana has edited up to here. LKB-->


                <table rules="all">
                    <caption>General distinct physical data center
                        networks</caption>
                    <col width="20%"/>
                    <col width="80%"/>
                    <thead>
                        <tr>
                            <th>Network</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><emphasis role="bold">Management
                                   network</emphasis></td>
                            <td>Provides internal communication between
                            OpenStack components. IP addresses on this network
                            should be reachable only within the data
                            center.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">Data
                                   network</emphasis></td>
                            <td>Provides VM data communication within
                                the cloud deployment. The IP
                                addressing requirements of this
                                network depend on the Networking
                                plug-in that is used.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">External
                                   network</emphasis></td>
                            <td>Provides VMs with Internet access in
                                some deployment scenarios. Anyone on
                                the Internet can reach IP addresses on
                                this network.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">API
                                   network</emphasis></td>
                            <td>Exposes all OpenStack APIs, including
                                the Networking API, to tenants. IP
                                addresses on this network should be
                                reachable by anyone on the
                                Internet. The API network might be the
                                same as the external network, because
                                it is possible to create an
                                external-network subnet that has
                                allocated IP ranges that use less than
                                the full range of IP addresses in an
                                IP block.</td>
                        </tr>
                    </tbody>
                </table>
        <section xml:id="tenant-provider-networks">
    <title>Tenant and provider networks</title>
    <para>
        The following diagram presents an overview of the tenant and provider
        network types, and illustrates how they interact within the overall
        Networking topology:
    </para>

   <!-- <figure>
    <title>Tenant and provider networks</title>
        <mediaobject>
                <imageobject>
                <imagedata scale="90"
                fileref="../../common/figures/NetworkTypes.png"/>
                </imageobject>
        </mediaobject>
    </figure>-->

   <formalpara>
        <title>Tenant networks</title>
    <para>Users create tenant networks for connectivity within projects;
    they are fully isolated by default and are not shared with other projects.
    Networking supports a range of tenant network types:
    </para>
    </formalpara>

        <variablelist>
            <varlistentry>
                <term>Flat</term>
                <listitem>
                    <para>All instances reside on the same network, which can
                    also be shared with the hosts. No VLAN tagging or other
                    network segregation takes place.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Local</term>
                <listitem>
                    <para>Instances reside on the local compute host and are
                        effectively isolated from any external networks.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>VLAN</term>
                <listitem>
                    <para>Networking allows users to create multiple provider
                    or tenant networks using VLAN IDs (802.1Q tagged) that
                    correspond to VLANs present in the physical network. This
                    allows instances to communicate with each other across
                    the environment. They can also communicate with dedicated
                    servers, firewalls, load balancers, and other networking
                    infrastructure on the same layer 2 VLAN.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>VXLAN and GRE</term>
                <listitem>
                    <para>VXLAN and GRE use network overlays to support private
                    communication between instances. A Networking router is
                    required to enable traffic to traverse outside of the GRE or
                    VXLAN tenant network. A router is also required to connect
                    directly-connected tenant networks with external networks,
                    including the Internet; the router provides the ability to
                    connect to instances directly from an external network using
                    floating IP addresses.</para>
                </listitem>
            </varlistentry>
        </variablelist>

    <formalpara>
    <title>Provider networks</title>
    <para>The OpenStack administrator creates provider networks. These networks
    map to existing physical networks in the data center. Useful
    network types in this category are flat (untagged) and VLAN (802.1Q
    tagged). It is possible to allow provider networks to be shared among
    tenants as part of the network creation process.</para>
    </formalpara>
</section>
    <section xml:id="NSX_overview">
        <title>VMware NSX integration</title>
        <para>OpenStack Networking uses the NSX plug-in for Networking to
        integrate with an existing VMware vCenter deployment. When installed on
        the network nodes, the NSX plug-in enables a NSX controller to centrally
        manage configuration settings and push them to managed network nodes.
        Network nodes are considered managed when they're added as hypervisors
        to the NSX controller.</para>
        <para>The following diagram depicts an example NSX deployment and
        illustrates the route inter-VM traffic takes between separate Compute
        nodes. Note the placement of the VMware NSX plug-in and the
        <systemitem class="service">neutron-server</systemitem> service on the
        network node. The NSX controller features centrally with a green line to
        the network node to indicate the management relationship:</para>
        <!--<figure>
            <title>VMware NSX overview</title>
            <mediaobject>
                <imageobject>
                    <imagedata
                        fileref="../../common/figures/vmware_nsx.png"
                        format="PNG" contentwidth="6in"/>
                </imageobject>
            </mediaobject>
        </figure>-->
    </section>

    <xi:include href="section_architecture-overview.xml"/>
    <xi:include href="section_architecture-server.xml"/>
    <xi:include href="section_architecture-plug-in.xml"/>
    <xi:include href="section_architecture-agents.xml"/>
</chapter>
