<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="getting_credentials_cli">
    <title>Getting Credentials for a CLI</title>
<para>Before you can issue commands with a command-line-interface, you must ensure that your environment contains the necessary variables
so that you can prove to the CLI who you are and what credentials you have to issue the commands.</para>
<procedure>
    <title>To authenticate a user to interact with CLIs</title>
    <step>
    <title>Set environment variables</title>
    <para>You can either edit your bash profile to add and set
        environment variables or use an openrc file downloaded
        from an OpenStack Dashboard.</para>
    <para>Either edit your .bash_profile file:</para>
    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> nano ~/.bash_profile </programlisting>
    <para>Add the following lines to the bash profile. Edit
        the values for the <command>OS_USERNAME</command>,
        <command>OS_PASSWORD</command>, and
        <command>OS_TENANT_NAME</command>
        variables:</para>
    <programlisting><?db-font-size 75%?>export OS_USERNAME=<varname>username</varname>
export OS_PASSWORD=<varname>password</varname>
export OS_TENANT_NAME=<varname>tenant</varname>
export OS_AUTH_URL=https://identity.api.rackspacecloud.com/v2.0/ #an example, insert your endpoint here
export NOVACLIENT_DEBUG=1
export NOVA_VERSION=2</programlisting>
    <para>Or download an openrc file from the OpenStack
        Dashboard:</para>
    <programlisting><?db-font-size 75%?>
#!/bin/bash

# With the addition of Keystone, to use an openstack cloud you should
# authenticate against keystone, which returns a **Token** and **Service
# Catalog**.  The catalog contains the endpoint for all services the
# user/tenant has access to - including nova, glance, keystone, swift.
#
# *NOTE*: Using the 2.0 *auth api* does not mean that compute api is 2.0.  We
# will use the 1.1 *compute api*
export OS_AUTH_URL=http://10.0.100.102:5000/v2.0

# With the addition of Keystone we have standardized on the term **tenant**
# as the entity that owns the resources.
export OS_TENANT_ID=feacce5a1fc347f88cfc0dee838429d6
export OS_TENANT_NAME=<varname>tenant</varname>

# In addition to the owning entity (tenant), openstack stores the entity
# performing the action as the **user**.
export OS_USERNAME=<varname>username</varname>

# With Keystone you pass the keystone password.
echo "Please enter your OpenStack Password: "
read -s OS_PASSWORD_INPUT
export OS_PASSWORD=$OS_PASSWORD_INPUT

            </programlisting>
    <para>Source the file:</para>
    <programlisting>
source openrc.sh
            </programlisting>
    <para>Enter your OpenStack password when prompted.</para>
    <para>The following table describes the environment
        variables:<table rules="all">
            <caption>Client Environment Variables</caption>
            <col width="25%"/>
            <col width="75%"/>
            <thead>
                <tr>
                    <th>Environment Variable</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>OS_USERNAME</td>
                    <td>Your OpenStack username.</td>
                </tr>
                <!--<tr>
                    <td>NOVA_RAX_AUTH</td>
                    <td>Set to <literal>1</literal> to enter
                    your API key instead of your password
                    in the <command>OS_PASSWORD</command>
                    variable. </td>
                    </tr>-->
                <tr>
                    <td>OS_PASSWORD</td>
                    <td>Your OpenStack user password.</td>
                </tr>
                <tr>
                    <td>OS_TENANT_ID</td>
                    <td><para>Your tenant ID, usually
                        provided with your
                        username.</para></td>
                </tr>
                <tr>
                    <td>OS_TENANT_NAME</td>
                    <td><para>Your tenant name, usually
                        provided with your
                        username.</para></td>
                </tr>
                <tr>
                    <td>OS_AUTH_URL</td>
                    <td><para>The endpoint for the Identity
                        Service (keystone), which the nova
                        client uses for authentication.
                        Include the trailing forward slash
                        (<literal>/)</literal> in the URL.
                        Otherwise, you receive a 404
                        error.</para></td>
                </tr>
                <!--<tr>
                    <td>NOVA_SERVICE_NAME</td>
                    <td>The Cloud service name that you want
                    the nova client to access. Set to
                    <literal>cloudServersOpenStack</literal>
                    to access the Cloud Servers
                    service.</td>
                    </tr>-->
                <tr>
                    <td>NOVACLIENT_DEBUG</td>
                    <td>Set to <literal>1</literal> to show
                        the underlying cURL commands with
                        embedded API requests in the command
                        responses. Otherwise, omit this
                        variable.</td>
                </tr>
                <tr>
                    <td>NOVA_VERSION</td>
                    <td>The version of the API. Set to
                        <literal>2</literal>.</td>
                </tr>
            </tbody>
        </table></para>
    <para>After you set the variables, save the file. </para>
</step>
<step>
    <title>Set permissions on and source the bash
        profile</title>
    <para>Because the bash profile contains a password, set
        permissions on it so other people cannot read
        it:</para>
    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> chmod 600 ~/.bash_profile </programlisting>
    <para>To source the variables to make them available in
        your current shell, run the following command:</para>
    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> source ~/.bash_profile </programlisting>
</step></procedure>
</section>

