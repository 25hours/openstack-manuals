<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:html="http://www.w3.org/1999/xhtml" version="5.0"
    xml:id="neutron_client">
    <?dbhtml stop-chunking?>
    <title>neutron command-line client</title>
    <para>Learn how to use the neutron commands.</para>
    <section xml:id="neutron_overview_command">
        <title>Command arguments</title>
        <para>The neutron client command arguments and options are:</para>
        <itemizedlist>
            <listitem>
                <para><emphasis role="bold">Known
                    arguments</emphasis>. Listed in the help usage
                    text for the command.</para>
            </listitem>

            <listitem xml:id="neutron_overview_command_pos">
                <para><emphasis role="bold">Positional
                        arguments</emphasis>. Mandatory arguments that

                    must be specified in a specific order.</para>
            </listitem>
            <listitem xml:id="neutron_overview_command_unknown">
                <para><emphasis role="bold">Unknown
                    options</emphasis>. Complement the known
                    arguments.</para>
                <para>To define an unknown option, use the
                    format:</para>
                <screen><userinput>--optionname [type=int|bool|dict...][list=true] [optionvalue]*</userinput></screen>
                <para>You can specify multiple option values for an
                    option name. When no option value is specified,
                    the option defaults to <literal>bool</literal>
                    with a value of <literal>true</literal>.</para>
                <para>The type is python built-in type, such as

                        <literal>int</literal>,
                        <literal>bool</literal>,
                        <literal>float</literal>,
                        <literal>dict</literal>, and
                        <literal>string</literal>, which is the

                    default. You can use unknown options to provide
                    values for creating, updating a resource and to
                    provide filters to list resources. It is also
                    useful to implement API extension when the known
                    options are not included in the command. You can
                    use the pseudo argument <literal>--</literal> if
                    the options that follow require the use of an
                    unknown options parser.</para>
            </listitem>
        </itemizedlist>
    </section>
    <section xml:id="neutron_overview_cliff">
        <title>Features from cliff</title>
        <section xml:id="neutron_overview_cliff_interactive">
            <title>Interactive mode</title>

            <para>If no command is specified, the neutron client goes
                into interactive mode:</para>
            <screen><prompt>$</prompt> <userinput>neutron --os-username admin --os-password password --os-tenant-name admin --os-auth-url http://localhost:5000/v2.0</userinput></screen>
            <screen><userinput>(neutron) help</userinput></screen>
            <screen><computeroutput>Shell commands (type help &lt;topic&gt;):
===================================
cmdenvironment  edit  hi       l   list  pause  r    save  shell      show
ed              help  history  li  load  py     run  set   shortcuts

Undocumented commands:
======================
EOF  eof  exit  q  quit

Application commands (type help &lt;topic&gt;):
=========================================
=========================================
agent-delete                   net-external-list           subnet-create
agent-list                     net-gateway-connect         subnet-delete
agent-show                     net-gateway-create          subnet-list
agent-update                   net-gateway-delete          subnet-show
dhcp-agent-list-hosting-net    net-gateway-disconnect      subnet-update
dhcp-agent-network-add         net-gateway-list
dhcp-agent-network-remove      net-gateway-show
ext-list                       net-gateway-update
ext-show                       net-list
floatingip-associate           net-list-on-dhcp-agent
floatingip-create              net-show
floatingip-delete              net-update
floatingip-disassociate        port-create
floatingip-list                port-delete
floatingip-show                port-list
help                           port-show
l3-agent-list-hosting-router   port-update
l3-agent-router-add            queue-create
l3-agent-router-remove         queue-delete
lb-healthmonitor-associate     queue-list
lb-healthmonitor-create        queue-show
lb-healthmonitor-delete        quota-delete
lb-healthmonitor-disassociate  quota-list
lb-healthmonitor-list          quota-show
lb-healthmonitor-show          quota-update
lb-healthmonitor-update        router-create
lb-member-create               router-delete
lb-member-delete               router-gateway-clear
lb-member-list                 router-gateway-set
lb-member-show                 router-interface-add
lb-member-update               router-interface-delete
lb-pool-create                 router-list
lb-pool-delete                 router-list-on-l3-agent
lb-pool-list                   router-port-list
lb-pool-show                   router-show
lb-pool-stats                  router-update
lb-pool-update                 security-group-create
lb-vip-create                  security-group-delete
lb-vip-delete                  security-group-list
lb-vip-list                    security-group-rule-create
lb-vip-show                    security-group-rule-delete
lb-vip-update                  security-group-rule-list
net-create                     security-group-rule-show
net-delete                     security-group-show
            </computeroutput></screen>
<screen><prompt>(neutron)</prompt> <userinput>net-list</userinput></screen>
            <screen><computeroutput>+--------------------------------------+----------------+--------------------------------------+
| id                                   | name           | subnets                              |
+--------------------------------------+----------------+--------------------------------------+
| 11fc08b7-c3b2-4b0c-bd04-66e279d9c470 | public_net1    | 13cc61f6-b33b-495a-a49f-83bdc9e439ab |
| 22f53ed1-3f3d-49c7-9162-7ba94d9c0a7e | private_mynet1 | b5a9b952-dd4f-445a-89c5-f15d0707b8bd |
| 2a405f54-aea0-47d7-8a43-4d5129e22b35 | test1          |                                      |
| d322e1ae-e068-4249-b9b3-7ed8b820bfa2 | mynetwork      |                                      |
+--------------------------------------+----------------+--------------------------------------+</computeroutput></screen>

        </section>
        <section xml:id="neutron_overview_cliff_oFormat">
            <title>Output format</title>
            <para>We can use <literal>-h</literal> after each command
                to show the usage of each command:</para>
            <screen><prompt>(neutron)</prompt> <userinput>net-list -h</userinput></screen>
            <screen>usage: neutron net-list [-h] [-f {csv,html,json,table,yaml}] [-c COLUMN]

                        [--quote {all,minimal,none,nonnumeric}]
                        [--request-format {json,xml}] [-D] [-F FIELD]
                        [-P SIZE] [--sort-key FIELD] [--sort-dir {asc,desc}]

List networks that belong to a given tenant.

optional arguments:
  -h, --help            show this help message and exit
  --request-format {json,xml}
                        the xml or json request format
  -D, --show-details    show detailed info
  -F FIELD, --field FIELD
                        specify the field(s) to be returned by server, can be
                        repeated
  -P SIZE, --page-size SIZE
                        specify retrieve unit of each request, then split one
                        request to several requests
  --sort-key FIELD      sort list by specified fields (This option can be
                        repeated), The number of sort_dir and sort_key should
                        match each other, more sort_dir specified will be
                        omitted, less will be filled with asc as default
                        direction
  --sort-dir {asc,desc}
                        sort list in specified directions (This option can be
                        repeated)

output formatters:
  output formatter options

  -f {csv,html,json,table,yaml}, --format {csv,html,json,table,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric
               </screen>
            <para>We can see the output formatters cliff provides to
                each command. By default, the output format is

                    <literal>table</literal>. Now we choose
                    <literal>csv</literal> output to run the command
                    <literal>net-list</literal>:</para>

            <screen><prompt>(neutron)</prompt> <userinput>net-list -f csv</userinput></screen>
            <screen>"id","name","subnets"
"11fc08b7-c3b2-4b0c-bd04-66e279d9c470","public_net1","13cc61f6-b33b-495a-a49f-83bdc9e439ab"
"22f53ed1-3f3d-49c7-9162-7ba94d9c0a7e","private_mynet1","b5a9b952-dd4f-445a-89c5-f15d0707b8bd"
"2a405f54-aea0-47d7-8a43-4d5129e22b35","test1",""
"d322e1ae-e068-4249-b9b3-7ed8b820bfa2","mynetwork",""            </screen>
        </section>
        <section xml:id="neutron_overview_cliff_column">
            <title>Column selection</title>
            <para>We can see <literal>-c COLUMN</literal> in previous
                usage output. It can be used to limit the output
                fields:</para>
            <screen><prompt>(neutron)</prompt> <userinput>net-list -c id -c name</userinput></screen>
            <screen>+--------------------------------------+----------------+
| id                                   | name           |
+--------------------------------------+----------------+
| 11fc08b7-c3b2-4b0c-bd04-66e279d9c470 | public_net1    |
| 22f53ed1-3f3d-49c7-9162-7ba94d9c0a7e | private_mynet1 |
| 2a405f54-aea0-47d7-8a43-4d5129e22b35 | test1          |
| d322e1ae-e068-4249-b9b3-7ed8b820bfa2 | mynetwork      |
+--------------------------------------+----------------+              </screen>
        </section>
    </section>
    <section xml:id="neutron_overview_API">
        <title>API features</title>
        <section xml:id="neutron_overview_API_fields">
            <title>Fields selection</title>
            <para>If there are <literal>‘fields’</literal> in request
                URL, V2.0 API will extract the list of fields to

                return. A sample of such URLs is:

                    <literal>http://localhost:9696/v2.0/networks.json?fields=id&amp;fields=name</literal></para>
            <para>Neutron client supports this feature by
                    <literal>-F</literal> option in known options part
                and <literal>--fields</literal> in unknown options
                part. For example, <literal>neutron -F id net-list --
                    --fields name</literal>. Only
                    <literal>xx-list</literal> and
                    <literal>xx-show</literal> commands support this

                feature.</para>
        </section>
        <section xml:id="neutron_overview_API_filtering">
            <title>Value filtering</title>
            <para>Any other fields except the
                <literal>‘fields’</literal> are used to filter
                resources. A sample of such URLs is
                <literal>http://localhost:9696/v2.0/networks.json?name=test1&amp;name=test2</literal>.
                By the current neutron server's sample DB plugin, the
                filtering has the same meaning as a SQL clause:
                <literal>name in [‘test1’, ‘test2’]</literal>.
                Neutron client supports this feature by any key
                options in unknown option part. For example
                <literal>neutron net-list -- --name test1
                    test2</literal>. Only <literal>xx-list</literal>
                commands support this feature.</para>
        </section>

    </section>
    <xi:include
        href="../../common/section_neutron_cli_manage_networks.xml"/>
    <xi:include
        href="../../openstack-user/src/section_neutron_cli_commands.xml"/>
</chapter>

