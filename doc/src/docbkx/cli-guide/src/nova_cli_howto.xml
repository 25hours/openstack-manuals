<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:html="http://www.w3.org/1999/xhtml"
    version="5.0"
    xml:id="nova-cli-reference">
    <?dbhtml stop-chunking?>
    <title>OpenStack Nova CLI Guide</title>
    <para>This section describes what  you can do with the OpenStack
        Nova client (CLI). </para>
    <section xml:id="nova_help">
        <title>Get Command, Parameter, and Subcommand Help</title>
        <para>Help for commands, parameters, and subcommands is
            available with the <command>nova help</command> command.
            <screen>
<prompt>$</prompt> <userinput>nova help</userinput>
            </screen></para>
        <para>Include the command name to get usage information about
            an individual command, as in the following example.
            <screen>
<prompt>$</prompt> <userinput>nova help actions</userinput>
usage: nova actions &lt;server>

Retrieve server actions.

Positional arguments:
  &lt;server>  Name or ID of server.
            </screen></para>
    </section>
    <section xml:id="listing">
        <title>List Instances, Images, and Flavors</title>
        <para>Before you can go about the business of building your cloud, you
            want to know what images are available to you by asking
            the image service what kinds of configurations are
            available. The image service could be compared to iTunes
            for your cloud - you can view the playlist of images
            before using your favorite image to create a new instance
            in the cloud. To get the list of images, their names,
            status, and ID, use this command:
            <screen>
<prompt>$</prompt> <userinput>nova image-list</userinput>
+--------------------------------------+----------------+--------+--------+
|                  ID                  |      Name      | Status | Server |
+--------------------------------------+----------------+--------+--------+
| 53b205cc-7abc-46eb-aa60-eabc449b4217 |  natty-image   | ACTIVE |        |
| 588d93af-645d-4312-a5b0-81347715a91b |   tty-image    | ACTIVE |        |
| ac6f83b7-078c-47bd-b4c2-4053282da49e | oneiric-image  | ACTIVE |        |
| e110fb7d-2a9e-4da5-923f-5565867ce87a | maverick-image | ACTIVE |        |
+--------------------------------------+----------------+--------+--------+
        </screen></para>
        <para>Next you need to know the relative sizes of each of these. </para>
        <para><screen>
<prompt>$</prompt> <userinput>nova flavor-list</userinput>
+----+-----------+-----------+------+-----------+------+-------+-------------+
| ID |    Name   | Memory_MB | Disk | Ephemeral | Swap | VCPUs | RXTX_Factor |
+----+-----------+-----------+------+-----------+------+-------+-------------+
| 1  |  m1.tiny  |    512    |  0   |     0     |      |   1   |     1.0     |
| 2  |  m1.small |    2048   |  10  |     20    |      |   1   |     1.0     |
| 3  | m1.medium |    4096   |  10  |     40    |      |   2   |     1.0     |
| 4  |  m1.large |    8192   |  10  |     80    |      |   4   |     1.0     |
| 5  | m1.xlarge |   16384   |  10  |    160    |      |   8   |     1.0     |
+----+-----------+-----------+------+-----------+------+-------+-------------+
    </screen></para>
        <para>You can also narrow down the list by using grep to find only the CentOS images with a command like this: </para>
        <para>
            <screen>
<prompt>$</prompt> <userinput>nova image-list | grep 'natty'</userinput>

| 12 | natty-server-cloudimg-amd64-kernel   | ACTIVE |        |
| 13 | natty-server-cloudimg-amd64          | ACTIVE |        |
</screen>
        </para>
    </section>
    <section xml:id="launch_instance">
        <title>Launch a New Instance</title>
        <para>Launching a new instance on OpenStack.</para>
        <section xml:id="launch_commands_used">
            <title>Commands Used</title>
            <para>This process uses the following commands: <itemizedlist>
                    <listitem>
                        <para><command>nova boot</command></para>
                    </listitem>
                    <listitem>
                        <para><command>nova list</command></para>
                    </listitem>
                    <listitem>
                        <para><command>nova show</command></para>
                    </listitem>
                </itemizedlist></para>
        </section>
        <section xml:id="launch_procedure">
            <title>Before Launch</title>
            
            <para>With the information about what is available to you, you can choose the combination of image and flavor to create your virtual servers and launch instances. </para></section>
        
        <xi:include href="nova_cli_boot.xml" />
        <section xml:id="boot_from_volume">
            <title>Launch from a Volume</title>
                <para>The Compute service has preliminary support for booting an instance from a
                    volume.</para>
                <simplesect>
                    <title>Creating a bootable volume</title>
                    <para>To create a bootable volume, mount the volume to an existing instance, and then
                        build a volume-backed image. Here is an example based on <link
                            xlink:href="https://github.com/openstack-dev/devstack/blob/master/exercises/boot_from_volume.sh"
                            >exercises/boot_from_volume.sh</link>. This example assumes that you have a
                        running instance with a 1GB volume mounted at <literal>/dev/vdc</literal>. These
                        commands will make the mounted volume bootable using a CirrOS image. As
                        root:<screen><prompt>#</prompt> <userinput>mkfs.ext3 -b 1024 /dev/vdc 1048576</userinput>
<prompt>#</prompt> <userinput>mkdir /tmp/stage</userinput>
<prompt>#</prompt> <userinput>mount /dev/vdc /tmp/stage</userinput>

<prompt>#</prompt> <userinput>cd /tmp</userinput>
<prompt>#</prompt> <userinput>wget https://launchpad.net/cirros/trunk/0.3.0/+download/cirros-0.3.0-x86_64-rootfs.img.gz</userinput>
<prompt>#</prompt> <userinput>gunzip cirros-0.3.0-x86_64-rootfs.img.gz</userinput>
<prompt>#</prompt> <userinput>mkdir /tmp/cirros</userinput>
<prompt>#</prompt> <userinput>mount /tmp/cirros-0.3.0-x86_64-rootfs.img /tmp/cirros</userinput>

<prompt>#</prompt> <userinput>cp -pr /tmp/cirros/* /tmp/stage</userinput>
<prompt>#</prompt> <userinput>umount /tmp/cirros</userinput>
<prompt>#</prompt> <userinput>sync</userinput>
<prompt>#</prompt> <userinput>umount /tmp/stage</userinput></screen></para>
                    <para>Detach the volume once you are done.</para>
                </simplesect>
                <simplesect>
                    <title>Booting an instance from the volume</title>
                    <para>To boot a new instance from the volume, use
                    the <command>nova boot</command> command with use
                    the <literal>--block-device-mapping</literal>
                    flag. The output for <command>nova help
                        boot</command> shows the following
                    documentation about this
                    flag:<screen><computeroutput> --block-device-mapping &lt;dev-name=mapping>
                        Block device mapping in the format
                        &lt;dev-name=&lt;id>:&lt;type>:&lt;size(GB)>:&lt;delete-on-terminate>.
 </computeroutput></screen></para>
                    <para>The command arguments are:<variablelist>
                        <varlistentry>
                            <term><literal>dev-name</literal></term>
                            <listitem>
                                <para>A device name where the volume will be attached in the system at
                                    <filename>/dev/<replaceable>dev_name</replaceable></filename>.
                                    This value is typically <literal>vda</literal>.</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><literal>id</literal></term>
                            <listitem>
                                <para>The ID of the volume to boot from, as shown in the output of
                                    <command>nova volume-list</command>.</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><literal>type</literal></term>
                            <listitem>
                                <para>This is either <literal>snap</literal>, which means that the
                                    volume was created from a snapshot, or anything other than
                                    <literal>snap</literal> (a blank string is valid). In the
                                    example above, the volume was not created from a snapshot, so we
                                    will leave this field blank in our example below.</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><literal>size (GB)</literal></term>
                            <listitem>
                                <para>The size of the volume, in GB. It is safe to leave this blank and
                                    have the Compute service infer the size.</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><literal>delete-on-terminate</literal></term>
                            <listitem>
                                <para>A boolean to indicate whether the volume should be deleted when
                                    the instance is terminated. True can be specified as
                                    <literal>True</literal> or <literal>1</literal>. False can be
                                    specified as <literal>False</literal> or
                                    <literal>0</literal>.</para>
                            </listitem>
                        </varlistentry>
                    </variablelist></para>
                    <para><note>
                        <para>Because of bug <link
                            xlink:href="https://bugs.launchpad.net/nova/+bug/1008622"
                            >#1008622</link>, you must specify an image when booting from a volume,
                            even though this image will not be used.</para>
                    </note>The following example will attempt boot from volume with
                        ID=<literal>13</literal>, it will not delete on terminate. Replace the
                        <literal>--image</literal> flag with a valid image on your system, and the
                        <literal>--key-name</literal> with a valid keypair
                        name:<screen><prompt>$</prompt> <userinput>nova boot --image <replaceable>f4addd24-4e8a-46bb-b15d-fae2591f1a35</replaceable> --flavor 2 --key-name <replaceable>mykey</replaceable> \
    --block-device-mapping vda=13:::0 boot-from-vol-test</userinput></screen></para>
                </simplesect>
                
            
            
            
        </section>
        <section xml:id="boot_from_iso">
            <title>Launch from ISO</title>
            <para>Text</para>
        </section>
        <section xml:id="boot_from_config_drive">
            <title>Launch from config drive</title>
            <para>Text</para>
        </section>
        <section xml:id="inserting_metadata">
            <title>Insert metadata during launch</title>
            <para>When booting a server, you can also add metadata, so
                that you can more easily identify it amongst your
                ever-growing elastic cloud. Use the
                    <literal>--meta</literal> option with a key=value
                pair, where you can make up the string for both the
                key and the value. For example, you could add a
                description and also the creator of the server.
                <screen>
<prompt>$</prompt> <userinput>nova boot --image=natty-image --flavor=2 smallimage2 --meta description='Small test image' --meta creator=joecool</userinput>
                </screen></para>
            <para>When viewing the server information, you can see the metadata included on the <literal>metadata</literal> line:
            <screen>
<prompt>$</prompt> <userinput>nova show smallimage2</userinput>
+------------------------+---------------------------------------------------------------+
|        Property        |                             Value                             |
+------------------------+---------------------------------------------------------------+
|   OS-DCF:diskConfig    |                             MANUAL                            |
| OS-EXT-STS:power_state |                               1                               |
| OS-EXT-STS:task_state  |                              None                             |
|  OS-EXT-STS:vm_state   |                             active                            |
|       accessIPv4       |                                                               |
|       accessIPv6       |                                                               |
|      config_drive      |                                                               |
|        created         |                      2012-05-16T20:48:23Z                     |
|         flavor         |                            m1.small                           |
|         hostId         |    de0c201e62be88c61aeb52f51d91e147acf6cf2012bb57892e528487   |
|           id           |              8ec95524-7f43-4cce-a754-d3e5075bf915             |
|         image          |                          natty-image                          |
|        key_name        |                                                               |
|        metadata        | {u'description': u'Small test image', u'creator': u'joecool'} |
|          name          |                          smallimage2                          |
|    private network     |                         172.16.101.11                         |
|        progress        |                               0                               |
|     public network     |                          10.4.113.11                          |
|         status         |                             ACTIVE                            |
|       tenant_id        |                e830c2fbb7aa4586adf16d61c9b7e482               |
|        updated         |                      2012-05-16T20:48:35Z                     |
|        user_id         |                de3f4e99637743c7b6d27faca4b800a9               |
+------------------------+---------------------------------------------------------------+
            </screen></para>
        </section>
    </section>
    
    <section xml:id="floating_ip">
        <title>Change Server Configuration</title>
        <para>After you have created a server, you may need to
            increase its size, change the image used to build it, or
            perform other configuration changes.</para>
        <section xml:id="floatingIP_commands_used">
            <title>Commands Used</title>
            <para>This process uses the following commands:
                <itemizedlist>
                    <listitem><para><command>nova resize*</command></para></listitem>
                    <listitem><para><command>nova rebuild</command></para></listitem>
                </itemizedlist>
            </para>
        </section>
        <section xml:id="floatingIP_1">
            <title>Increase or Decrease Server Size</title>
            <para>Server size is changed by applying a different
                flavor to the server. Before you begin, use nova
                flavor-list to review the flavors available to
                you.</para>
            <screen>
<prompt>$</prompt> <userinput>nova flavor-list</userinput>
+----+-----------+-----------+------+-----------+------+-------+-------------+
| ID |    Name   | Memory_MB | Disk | Ephemeral | Swap | VCPUs | RXTX_Factor |
+----+-----------+-----------+------+-----------+------+-------+-------------+
| 1  |  m1.tiny  |    512    |  0   |     0     |      |   1   |     1.0     |
| 2  |  m1.small |    2048   |  10  |     20    |      |   1   |     1.0     |
| 3  | m1.medium |    4096   |  10  |     40    |      |   2   |     1.0     |
| 4  |  m1.large |    8192   |  10  |     80    |      |   4   |     1.0     |
| 5  | m1.xlarge |   16384   |  10  |    160    |      |   8   |     1.0     |
+----+-----------+-----------+------+-----------+------+-------+-------------+
            </screen>
            <para>In this example, we'll take a server originally configured with the <code>m1.tiny</code> flavor and resize it to <code>m1.small</code>.</para>
            <screen>
<prompt>$</prompt> <userinput>nova show acdfb2c4-38e6-49a9-ae1c-50182fc47e35</userinput>
+------------------------+----------------------------------------------------------+
|        Property        |                          Value                           |
+------------------------+----------------------------------------------------------+
|   OS-DCF:diskConfig    |                          MANUAL                          |
| OS-EXT-STS:power_state |                            1                             |
| OS-EXT-STS:task_state  |                           None                           |
|  OS-EXT-STS:vm_state   |                          active                          |
|       accessIPv4       |                                                          |
|       accessIPv6       |                                                          |
|      config_drive      |                                                          |
|        created         |                   2012-05-09T15:47:48Z                   |
|         flavor         |                         m1.tiny                          |
|         hostId         | de0c201e62be88c61aeb52f51d91e147acf6cf2012bb57892e528487 |
|           id           |           acdfb2c4-38e6-49a9-ae1c-50182fc47e35           |
|         image          |                      maverick-image                      |
|        key_name        |                                                          |
|        metadata        |                            {}                            |
|          name          |                       resize-demo                        |
|    private network     |                       172.16.101.6                       |
|        progress        |                            0                             |
|     public network     |                        10.4.113.6                        |
|         status         |                          ACTIVE                          |
|       tenant_id        |             e830c2fbb7aa4586adf16d61c9b7e482             |
|        updated         |                   2012-05-09T15:47:59Z                   |
|        user_id         |             de3f4e99637743c7b6d27faca4b800a9             |
+------------------------+----------------------------------------------------------+
            </screen>
            <para>Use the resize command with the server's ID (6beefcf7-9de6-48b3-9ba9-e11b343189b3) and the ID of the desired flavor (2):</para>
            <screen>
<prompt>$</prompt> <userinput>nova resize 6beefcf7-9de6-48b3-9ba9-e11b343189b3 2</userinput>  
            </screen>
            <para>While the server is rebuilding, its status will be displayed as RESIZING. </para>
        </section>
    </section>
    <section xml:id="stop_start">
        <title>Stop and Start an Instance</title>
        <para>There are two methods for stopping and starting an
            instance: <itemizedlist>
                <listitem><para><command>nova pause</command> / <command>nova unpause</command></para></listitem>
                <listitem><para><command>nova suspend</command> / <command>nova resume</command></para></listitem>
            </itemizedlist></para>
        <section xml:id="pause_unpause">
            <title>Pause and Unpause</title>
            <para><command>nova pause</command> stores the state of
                the VM in RAM. A paused instance continues to run,
                albeit in a "frozen" state.</para>
        </section>
        <section xml:id="suspend_resume">
            <title>Suspend and Resume</title>
            <para><command>nova suspend</command> initiates a
                hypervisor-level suspend operation. Suspending an
                instance stores the state of the VM on disk; all
                memory is written to disk and the virtual machine is
                stopped. Suspending an instance is thus similar to
                placing a device in hibernation, and makes memory and
                vCPUs available. Administrators may want to suspend an
                instance for system maintenance, or if the instance is
                not frequently used.</para>
        </section>
    </section>

    <section xml:id="security_groups">
        <title>Manage Security Groups</title>
        <para>A security group is a named collection of network access rules that can be used to
            limit the types of traffic that have access to instances. When you spawn an instance,
            you can assign it to one or more groups. For each security group, the associated rules
            permit you to manage the allowed traffic to instances within the group. Any incoming
            traffic which is not matched by a rule is denied by default. At any time, it is possible
            to add or remove rules within a security group. Rules are automatically enforced as soon
            as they are created.</para>
        <para>Before you begin, use <command>nova
                secgroup-list</command> to view the available security
            groups (specify <literal>--all-tenants</literal> if you are a cloud administrator
            wanting to view all tenants' groups) . You can also view the rules for a security group
            with <command>nova secgroup-list-rules</command>.
        <screen>
<prompt>$</prompt> <userinput>nova secgroup-list</userinput>
+---------+-------------+
|   Name  | Description |
+---------+-------------+
| default |   default   |
+---------+-------------+

<prompt>$</prompt> <userinput>nova secgroup-list-rules default</userinput>
+-------------+-----------+---------+-----------+--------------+
| IP Protocol | From Port | To Port |  IP Range | Source Group |
+-------------+-----------+---------+-----------+--------------+
|     tcp     |     80    |    80   | 0.0.0.0/0 |              |
+-------------+-----------+---------+-----------+--------------+
        </screen>
        In this example, the default security group has been modified to allow HTTP traffic on the instance by permitting TCP traffic on Port 80.</para>
<section xml:id="secgroup_add-delete">
    <title>Add or delete a security group</title>
            <para>Security groups can be added with <command>nova
                    secgroup-create</command>. </para>
            <para>The following example shows the creation of the
                security group <literal>secure1</literal>. After the
                group is created, it can be viewed in the security
                group list.</para>
    <para>
        <screen>
<prompt>$</prompt> <userinput>nova secgroup-create secure1 "Test security group"</userinput>
+---------+---------------------+
|   Name  |     Description     |
+---------+---------------------+
| secure1 | Test security group |
+---------+---------------------+

<prompt>$</prompt> <userinput>nova secgroup-list</userinput>
+---------+---------------------+
|   Name  |     Description     |
+---------+---------------------+
| default |       default       |
| secure1 | Test security group |
+---------+---------------------+
</screen></para>
<para>Security groups can be deleted with <command>nova secgroup-delete</command>. The default
                security group cannot be deleted. The default security group contains these initial
                settings:<itemizedlist>
                    <listitem>
                        <para>All the traffic originated by the instances (outbound traffic) is
                            allowed</para>
                    </listitem>
                    <listitem>
                        <para>All the traffic destined to instances
                            (inbound traffic) is denied</para>
                    </listitem>
                    <listitem>
                        <para>All the instances inside the group are allowed to talk to each
                            other</para>
                    </listitem>
                </itemizedlist>
    <note>
        <para>You can add extra rules into the default security group for handling the egress
                        traffic. Rules are ingress only at this time. </para>
    </note>
            </para>
            <para>In the following example, the group
                    <literal>secure1</literal> is deleted. When you
                view the security group list, it no longer
                appears.</para>
            <para>
                <screen>
<prompt>$</prompt> <userinput>nova secgroup-delete secure1</userinput>
<prompt>$</prompt> <userinput>nova secgroup-list</userinput>
+---------+-------------+
|   Name  | Description |
+---------+-------------+
| default |   default   |
+---------+-------------+
        </screen>
            </para>
</section>
        <section xml:id="secgroup_rules">
            <title>Modify security group rules</title>
        <para>The security group rules control the incoming traffic that is allowed to the instances
                in the group, while all outbound traffic is automatically allowed. <note>
                    <para>It is not possible to change the default outbound behaviour.</para>
                </note>Every security group rule is a policy which allows you to specify inbound
                connections that are allowed to access the instance, by source address, destination
                port and IP protocol,(TCP, UDP or ICMP). Currently, ipv6 and other protocols cannot
                be managed with the security rules, making them permitted by default. To manage
                such, you can deploy a firewall in front of your OpenStack cloud to control other
                types of traffic. The command requires the following arguments for both TCP and UDP
                rules : <itemizedlist>
                    <listitem>
                        <para>&lt;secgroup&gt; ID of security group. </para>
                    </listitem>
                    <listitem>
                        <para>&lt;ip_proto&gt; IP protocol (icmp, tcp, udp). </para>
                    </listitem>
                    <listitem>
                        <para>&lt;from_port&gt; Port at start of range. </para>
                    </listitem>
                    <listitem>
                        <para>&lt;to_port&gt; Port at end of range. </para>
                    </listitem>
                    <listitem>
                        <para>&lt;cidr&gt; CIDR for address range.</para>
                    </listitem>
                </itemizedlist></para>
            <para>For ICMP rules, instead of specifying a begin and end port, you specify the
                allowed ICMP code and ICMP type: <itemizedlist>
                    <listitem>
                        <para>&lt;secgroup&gt; ID of security group. </para>
                    </listitem>
                    <listitem>
                        <para>&lt;ip_proto&gt; IP protocol (with icmp specified). </para>
                    </listitem>
                    <listitem>
                        <para>&lt;ICMP_code&gt; The ICMP code. </para>
                    </listitem>
                    <listitem>
                        <para>&lt;ICMP_type&gt; The ICMP type. </para>
                    </listitem>
                    <listitem>
                        <para>&lt;cidr&gt; CIDR for the source address range.</para>
                    </listitem>
                </itemizedlist>
                <note>
                    <para> Entering "-1" for both code and type
                        indicates that all ICMP codes and types should
                        be allowed.</para>
                </note>
            </para>
            <para>
                <note>
                    <title>The CIDR notation</title>
                    <para>That notation allows you to specify a base IP address and a suffix that
                        designates the number of significant bits in the IP address used to identify
                        the network. For example, by specifying a 88.170.60.32/27, you specify
                        88.170.60.32 as the <emphasis role="bold">base IP</emphasis> and 27 as the
                            <emphasis role="bold">suffix</emphasis>. Since you use an IPV4 format,
                        there are only 5 bits available for the host part (32 minus 27). The
                        0.0.0.0/0 notation means you allow the entire IPV4 range, meaning allowing
                        all  addresses.</para>
                </note></para>
            
            <para>For example, in order to allow any IP address to
                access to a web server running on one of your instance
                inside the default security
                group:<screen>
<prompt>$</prompt> <userinput>nova secgroup-add-rule default tcp 80 80 0.0.0.0/0</userinput>
+-------------+-----------+---------+-----------+--------------+
| IP Protocol | From Port | To Port |  IP Range | Source Group |
+-------------+-----------+---------+-----------+--------------+
|     tcp     |     80    |    80   | 0.0.0.0/0 |              |
+-------------+-----------+---------+-----------+--------------+
            </screen></para>
            <para>In order to allow any IP address to ping an instance
                inside the default security group (Code 0, Type 8 for
                the ECHO
                request.):<screen>
<prompt>$</prompt> <userinput>nova secgroup-add-rule default icmp 0 8 0.0.0.0/0</userinput>
+-------------+-----------+---------+-----------+--------------+
| IP Protocol | From Port | To Port |  IP Range | Source Group |
+-------------+-----------+---------+-----------+--------------+
|     icmp    |     0     |    8    | 0.0.0.0/0 |              |
+-------------+-----------+---------+-----------+--------------+
            </screen></para>
            <para>
                <screen>
<prompt>$</prompt> <userinput>nova secgroup-list-rules default</userinput>
+-------------+-----------+---------+-----------+--------------+
| IP Protocol | From Port | To Port |  IP Range | Source Group |
+-------------+-----------+---------+-----------+--------------+
|     tcp     |     80    |    80   | 0.0.0.0/0 |              |
|     icmp    |     0     |    8    | 0.0.0.0/0 |              |
+-------------+-----------+---------+-----------+--------------+
                </screen></para>
            <para>In order to delete a rule, you need to specify the exact same arguments you used
                to create it:<itemizedlist>
                    <listitem>
                        <para>&lt;secgroup&gt; ID of security group. </para>
                    </listitem>
                    <listitem>
                        <para>&lt;ip_proto&gt; IP protocol (icmp, tcp, udp). </para>
                    </listitem>
                    <listitem>
                        <para>&lt;from_port&gt; Port at start of range. </para>
                    </listitem>
                    <listitem>
                        <para>&lt;to_port&gt; Port at end of range. </para>
                    </listitem>
                    <listitem>
                        <para>&lt;cidr&gt; CIDR for address range. </para>
                    </listitem>
                </itemizedlist><screen>
<prompt>$</prompt> <userinput>nova secgroup-delete-rule default tcp 80 80 0.0.0.0/0</userinput>
                </screen>
            </para>
        </section>
    </section>
    <section xml:id="floating_ip_addresses">
        <title>Manage Floating IP Addresses</title>
        <para>A floating IP address is an IP address (typically
            public) that can be dynamically assigned to an instance.
            Pools of floating IP addresses are created outside of
            python-novaclient with the <command>nova-manage floating
                *</command> commands. Refer to "<uri xlink:href="http://docs.openstack.org/trunk/openstack-compute/admin/content/associating-public-ip.html">Configuring Public
            (Floating) IP Addresses</uri>" in the <emphasis>Openstack
                Compute Administration Manual</emphasis> for more
            information.</para>
        <para>Before you begin, use <command>nova
                floating-ip-pool-list</command> to determine what
            floating IP pools are available.
            <screen>
<prompt>$</prompt> <userinput>nova floating-ip-pool-list</userinput>
+------+
| name |
+------+
| nova |
+------+
        </screen>In
            this example, the only available pool is
                <literal>nova</literal>.</para>
<section xml:id="floating_ip_reserve_add"><title>Reserve and associate floating IP addresses</title>
    <para>You can reserve floating IP addresses with the
                <command>nova floating-ip-create</command> command.
            This command reserves the addresses for the tenant, but does not
            immediately associate that address with an
            instance.
        <screen>
<prompt>$</prompt> <userinput>nova floating-ip-create nova</userinput>
+--------------+-------------+----------+------+
|      Ip      | Instance Id | Fixed Ip | Pool |
+--------------+-------------+----------+------+
| 50.56.12.232 |     None    |   None   | nova |
+--------------+-------------+----------+------+
        </screen></para>
        <para>The floating IP address has been reserved, and can now
            be associated with an instance with the <command>nova
                add-floating-ip</command> command. For this example,
            we'll associate this IP address with an image called
                <literal>smallimage</literal>.
            <screen>
<prompt>$</prompt> <userinput>nova add-floating-ip smallimage 50.56.12.232</userinput>
        </screen>
            After the command is complete, you can confirm that the IP
            address has been associated with the <command>nova
                floating-ip-list</command> and
                <command>nova-list</command> commands.
            <screen>
<prompt>$</prompt> <userinput>nova floating-ip-list</userinput>
+--------------+--------------------------------------+------------+------+
|      Ip      |             Instance Id              |  Fixed Ip  | Pool |
+--------------+--------------------------------------+------------+------+
| 50.56.12.232 | 542235df-8ba4-4d08-90c9-b79f5a77c04f | 10.4.113.9 | nova |
+--------------+--------------------------------------+------------+------+
<prompt>$</prompt> <userinput>nova list</userinput>
+--------------------------------------+------------+--------+-------------------------------------------------------+
|                  ID                  |    Name    | Status |                        Networks                       |
+--------------------------------------+------------+--------+-------------------------------------------------------+
| 4bb825ea-ea43-4771-a574-ca86ab429dcb | tinyimage2 | ACTIVE |        public=10.4.113.6; private=172.16.101.6        |
| 542235df-8ba4-4d08-90c9-b79f5a77c04f | smallimage | ACTIVE | public=10.4.113.9, 50.56.12.232; private=172.16.101.9 |
+--------------------------------------+------------+--------+-------------------------------------------------------+
</screen>The
            first table shows that the 50.56.12.232 is now associated
            with the <literal>smallimage</literal> instance ID, and
            the second table shows the IP address included under
                <literal>smallimage</literal>'s public IP
            addresses.</para></section>
        <section xml:id="floating_ip_address_remove"><title>Remove and de-allocate a floating IP address</title>
        <para>To remove a floating IP address from an instance, use
                the <command>nova remove-floating-ip</command>
                command.
                <screen>
<prompt>$</prompt> <userinput>nova remove-floating-ip smallimage 50.56.12.232</userinput>
        </screen>
                After the command is complete, you can confirm that
                the IP address has been associated with the
                    <command>nova floating-ip-list</command> and
                    <command>nova-list</command> commands.
                <screen>
<prompt>$</prompt> <userinput>nova floating-ip-list</userinput>
+--------------+-------------+----------+------+
|      Ip      | Instance Id | Fixed Ip | Pool |
+--------------+-------------+----------+------+
| 50.56.12.232 |     None    |   None   | nova |
+--------------+-------------+----------+------+
<prompt>$</prompt> <userinput>nova list</userinput>
+--------------------------------------+------------+--------+-----------------------------------------+
|                  ID                  |    Name    | Status |                 Networks                |
+--------------------------------------+------------+--------+-----------------------------------------+
| 4bb825ea-ea43-4771-a574-ca86ab429dcb | tinyimage2 | ACTIVE | public=10.4.113.6; private=172.16.101.6 |
| 542235df-8ba4-4d08-90c9-b79f5a77c04f | smallimage | ACTIVE | public=10.4.113.9; private=172.16.101.9 |
+--------------------------------------+------------+--------+-----------------------------------------+
        </screen>
                You can now de-allocate the floating IP address,
                returning it to the pool so that it can be used by
                another tenant.
        <screen>
<prompt>$</prompt> <userinput>nova floating-ip-delete 50.56.12.232</userinput>
        </screen>
            In this example, 50.56.12.232 was the only IP address allocated to this tenant. Running <command>nova floating-ip-list</command> after the de-allocation is complete will return no results.</para>
        </section>
    </section>
    <section xml:id="images"><title>Manage Images</title>
    <para>Adding images and setting the access to them can be  managed
            in Glance, but you can create images by taking a snapshot
            of a running instance and view available images, set or
            delete image metadata, and delete an image, using the nova
            CLI.</para>
        
    </section>

    <section xml:id="volumes">
        <title>Manage Volumes</title>
        <para>Depending on the setup of your cloud provider, they may
            give you an endpoint to use to manage volumes, or there
            may be an extension under the covers. In either case, you
            can use the nova CLI to manage volumes.</para>
        <screen>
    volume-attach       Attach a volume to a server.
    volume-create       Add a new volume.
    volume-delete       Remove a volume.
    volume-detach       Detach a volume from a server.
    volume-list         List all the volumes.
    volume-show         Show details about a volume.
    volume-snapshot-create
                        Add a new snapshot.
    volume-snapshot-delete
                        Remove a snapshot.
    volume-snapshot-list
                        List all the snapshots.
    volume-snapshot-show
                        Show details about a snapshot.
    volume-type-create  Create a new volume type.
    volume-type-delete  Delete a specific flavor
    volume-type-list    Print a list of available 'volume types'.
        </screen>
    </section>
    <section xml:id="terminating">
        <title>Terminate an Instance</title>
        <para>When you no longer need an instance, use the
                <command>nova delete</command> command to terminate
            it. You can use the instance name or the ID string. You
            will not receive a notification indicating that the
            instance has been deleted, but if you run the
                <command>nova list</command> command, the instance
            will no longer appear in the list.</para>
        <para>In this example, we will delete the instance
                <literal>tinyimage</literal>, which is experiencing an
            error
            condition.<screen>
<prompt>$</prompt> <userinput>nova list</userinput>
+--------------------------------------+------------+--------+-------------------------------------------+
|                  ID                  |    Name    | Status |                  Networks                 |
+--------------------------------------+------------+--------+-------------------------------------------+
| 30ed8924-f1a5-49c1-8944-b881446a6a51 | tinyimage  | ERROR  | public=10.4.113.11; private=172.16.101.11 |
| 4bb825ea-ea43-4771-a574-ca86ab429dcb | tinyimage2 | ACTIVE |  public=10.4.113.6; private=172.16.101.6  |
| 542235df-8ba4-4d08-90c9-b79f5a77c04f | smallimage | ACTIVE |  public=10.4.113.9; private=172.16.101.9  |
+--------------------------------------+------------+--------+-------------------------------------------+
<prompt>$</prompt> <userinput>nova delete tinyimage</userinput>
<prompt>$</prompt> <userinput>nova list</userinput>
+--------------------------------------+------------+--------+-------------------------------------------+
|                  ID                  |    Name    | Status |                  Networks                 |
+--------------------------------------+------------+--------+-------------------------------------------+
| 4bb825ea-ea43-4771-a574-ca86ab429dcb | tinyimage2 | ACTIVE |  public=10.4.113.6; private=172.16.101.6  |
| 542235df-8ba4-4d08-90c9-b79f5a77c04f | smallimage | ACTIVE |  public=10.4.113.9; private=172.16.101.9  |
+--------------------------------------+------------+--------+-------------------------------------------+
        </screen></para>
    </section>
    <section xml:id="instance_console">
        <title>Get an Instance Console</title>
        <para>When you need to get a VNC console directly to a server,
            you can use the <code>nova get-vnc-console</code> command
            to connect.</para>
    </section>
</section>
