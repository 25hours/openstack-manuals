<?xml version="1.0" encoding="UTF-8"?>
        <para xmlns="http://docbook.org/ns/docbook" version="5.0">
        <table rules="all">
          <caption>Description of configuration options for baremetal</caption>
           <col width="50%"/>
           <col width="50%"/>
           <thead>
              <tr>
                  <td>Configuration option=Default value</td>
                  <td>(Type) Description</td>
              </tr>
          </thead>
          <tbody>
              <tr>
                       <td>db_backend=sqlalchemy</td>
                       <td>(StrOpt)The backend to use for db</td>
              </tr>
              <tr>
                       <td>db_backend=sqlalchemy</td>
                       <td>(StrOpt)The backend to use for bare-metal database</td>
              </tr>
              <tr>
                       <td>deploy_kernel=None</td>
                       <td>(StrOpt)Default kernel image ID used in deployment phase</td>
              </tr>
              <tr>
                       <td>deploy_ramdisk=None</td>
                       <td>(StrOpt)Default ramdisk image ID used in deployment phase</td>
              </tr>
              <tr>
                       <td>driver=nova.virt.baremetal.pxe.PXE</td>
                       <td>(StrOpt)Baremetal driver back-end (pxe or tilera)</td>
              </tr>
              <tr>
                       <td>driver=nova.cells.rpc_driver.CellsRPCDriver</td>
                       <td>(StrOpt)Cells communication driver to use</td>
              </tr>
              <tr>
                       <td>instance_type_extra_specs=[]</td>
                       <td>(ListOpt)a list of additional capabilities corresponding to instance_type_extra_specs for this compute host to advertise. Valid entries are name=value, pairs For example, "key1:val1, key2:val2"</td>
              </tr>
              <tr>
                       <td>ipmi_power_retry=5</td>
                       <td>(IntOpt)maximal number of retries for IPMI operations</td>
              </tr>
              <tr>
                       <td>net_config_template=$pybasedir/nova/virt/baremetal/net-dhcp.ubuntu.template</td>
                       <td>(StrOpt)Template file for injected network config</td>
              </tr>
              <tr>
                       <td>power_manager=nova.virt.baremetal.ipmi.IPMI</td>
                       <td>(StrOpt)Baremetal power management method</td>
              </tr>
              <tr>
                       <td>pxe_append_params=None</td>
                       <td>(StrOpt)additional append parameters for baremetal PXE boot</td>
              </tr>
              <tr>
                       <td>pxe_config_template=$pybasedir/nova/virt/baremetal/pxe_config.template</td>
                       <td>(StrOpt)Template file for PXE configuration</td>
              </tr>
              <tr>
                       <td>pxe_deploy_timeout=0</td>
                       <td>(IntOpt)Timeout for PXE deployments. Default: 0 (unlimited)</td>
              </tr>
              <tr>
                       <td>sql_connection=sqlite:////home/fifieldt/temp/nova/nova/openstack/common/db/$sqlite_db</td>
                       <td>(StrOpt)The SQLAlchemy connection string used to connect to the database</td>
              </tr>
              <tr>
                       <td>sql_connection=sqlite:///$state_path/baremetal_$sqlite_db</td>
                       <td>(StrOpt)The SQLAlchemy connection string used to connect to the bare-metal database</td>
              </tr>
              <tr>
                       <td>terminal=shellinaboxd</td>
                       <td>(StrOpt)path to baremetal terminal program</td>
              </tr>
              <tr>
                       <td>terminal_cert_dir=None</td>
                       <td>(StrOpt)path to baremetal terminal SSL cert(PEM)</td>
              </tr>
              <tr>
                       <td>terminal_pid_dir=$state_path/baremetal/console</td>
                       <td>(StrOpt)path to directory stores pidfiles of baremetal_terminal</td>
              </tr>
              <tr>
                       <td>tftp_root=/tftpboot</td>
                       <td>(StrOpt)Baremetal compute node's tftp root path</td>
              </tr>
              <tr>
                       <td>use_unsafe_iscsi=False</td>
                       <td>(BoolOpt)Do not set this out of dev/test environments. If a node does not have a fixed PXE IP address, volumes are exported with globally opened ACL</td>
              </tr>
              <tr>
                       <td>vif_driver=nova.virt.baremetal.vif_driver.BareMetalVIFDriver</td>
                       <td>(StrOpt)Baremetal VIF driver.</td>
              </tr>
              <tr>
                       <td>virtual_power_host_key=None</td>
                       <td>(StrOpt)ssh key for virtual power host_user</td>
              </tr>
              <tr>
                       <td>virtual_power_host_pass=</td>
                       <td>(StrOpt)password for virtual power host_user</td>
              </tr>
              <tr>
                       <td>virtual_power_host_user=</td>
                       <td>(StrOpt)user to execute virtual power commands as</td>
              </tr>
              <tr>
                       <td>virtual_power_ssh_host=</td>
                       <td>(StrOpt)ip or name to virtual power host</td>
              </tr>
              <tr>
                       <td>virtual_power_ssh_port=22</td>
                       <td>(IntOpt)Port to use for ssh to virtual power host</td>
              </tr>
              <tr>
                       <td>virtual_power_type=virsh</td>
                       <td>(StrOpt)base command to use for virtual power(vbox,virsh)</td>
              </tr>
       </tbody>
        </table>
        </para>