<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="ch_introduction-to-openstack-compute">
    <title>Introduction to OpenStack Block Storage</title>
    <para>OpenStack Block Storage provides persistent High Performance Block Storage resources that
        can be consumed by OpenStack Compute instances.  This includes secondary attached storage
        similar to Amazon's Elastic Block Storage (EBS).  In addition images can be written to a
        Block Storage device and specified for OpenStack Compute to use a bootable persistent
        instance.</para>
    <para>There are some differences from Amazon's EBS that one should be aware of.  OpenStack Block
        Storage is not a shared storage solution like NFS, but currently is designed so that the
        device is attached and in use by a single instance at a time.</para>
    <section xml:id="backend-storage-devices">
        <title>Backend Storage Devices</title>
        <para>OpenStack Block Storage requires some form of back-end storage that the service is
            built on.  The default implementation is to use LVM on a local Volume Group named
            "cinder-volumes".  In addition to the base driver implementation, OpenStack Block
            Storage also provides the means to add support for other storage devices to be utilized
            such as external Raid Arrays or other Storage appliances.</para>
    </section>
    <section xml:id="users-and-projects">
        <title>Users and Tenants (Projects)</title>
        <para>The OpenStack Block Storage system is designed to be used by many different cloud
            computing consumers or customers, basically tenants on a shared system, using role-based
            access assignments. Roles control the actions that a user is allowed to perform. In the
            default configuration, most actions do not require a particular role, but this is
            configurable by the system administrator editing the appropriate
                <filename>policy.json</filename> file that maintains the rules. A user's access to
            particular volumes is limited by tenant, but the username and password are assigned per
            user. Key pairs granting access to a volume are enabled per user, but quotas to control
            resource consumption across available hardware resources are per tenant. </para>
        <para>For tenants, quota controls are available to limit the:<itemizedlist>
                <listitem>
                    <para>Number of volumes which may be created</para>
                </listitem>
                <listitem>
                    <para>Number of snapshots which may be created</para>
                </listitem>
                <listitem>
                    <para>Total number of Giga Bytes allowed per tenant (shared between snapshots
                        and volumes)</para>
                </listitem>
            </itemizedlist></para>
    </section>
    <section xml:id="volumes-and-snapshots">
        <title>Volumes Snapshots and Backups</title>
        <para>This introduction provides a high level overview of the two basic resources offered by
            the OpenStack Block Storage service.  The first is Volumes and the second is Snapshots
            which are derived from Volumes.</para>
        <para>Volumes</para>
        <para>Volumes are allocated block storage resources that can be attached to instances as
            secondary storage or they can be used as the root store to boot instances.  Volumes are
            persistent R/W Block Storage devices most commonly attached to the Compute node via
            iSCSI.</para>
        <para>Snapshots</para>
        <para>A Snapshot in OpenStack Block Storage is a read-only point in time copy of a
            Volume.  The Snapshot can be created from a Volume that is currently in use (via the
            use of '--force True') or in an available state.  The Snapshot can then be used to
            create a new volume via create from snapshot.</para>
        <para>Backups</para>
        <para>A Backup is an archived copy of a Volume currently stored in Object Storage (Swift).</para>
	</section>
</chapter>
