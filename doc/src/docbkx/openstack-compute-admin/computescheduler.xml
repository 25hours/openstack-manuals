<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="ch_scheduling">
    <title>Scheduling</title>
    <para>Compute uses the <command>nova-scheduler</command> service to determine
how to dispatch compute and volume requests. For example, the 
<command>nova-scheduler</command> service determines which host 
a VM should launch on. The term "host" in the context of filters means a
physical node that has a <command>nova-compute</command> service running on
it. The scheduler is configurable through a variety of options.</para>
    <section xml:id="scheduler-filters">
        <title>Filters</title>
        <para>When the scheduler receives a request for a resource, it first
            applies filters to determine which hosts are eligible for 
            consideration when dispatching a resource. Filters are binary:
            either a host is accepted by the filter, or it is rejected. Hosts
            that are accepted by the filter are then processed by a different
            algorithm to decide which hosts to use for that request. 
        </para>
     <para>The <literal>scheduler_default_filters</literal> configuration option
      in <filename>nova.conf</filename> defines the list of filters
     that will be applied by the <command>nova-scheduler</command> service.
     The default setting is:
     <programlisting>
scheduler_default_filters=AvailabilityZoneFilter,RamFilter,ComputeFilter
     </programlisting>
</para>
        <para>The available filters are described below.</para>

    <section xml:id="allhostsfilter">
        <title>AllHostsFilter</title>
        <para>This is a no-op filter, it does not eliminate any of the available
            hosts.</para>
    </section>

    <section xml:id="availabilityzonefilter">
        <title>
            AvailabilityZoneFilter
        </title>
        <para>
            Filters hosts by availabilty zone. This filter must be enabled for
            the scheduler to respect availability zones in requests.
        </para>
    </section>

    <section xml:id="computefilter">
        <title>
            ComputeFilter
        </title>
        <para>
            Filters hosts by flavor (also knwn as instance type). The scheduler
            will check to ensure that a host has sufficient capabilities for
            the requested flavor. In general, this filter should always be
            enabled.
        </para>
    </section>

    <section xml:id="corefilter">
        <title>
            CoreFilter
        </title>
        <para>
            Only schedule instances on hosts if there are sufficient CPU cores
            available. If this filter is not set, the scheduler may overprovision
            a host based on cores (i.e., the virtual cores running on an instance
            may exceed the physical cores).
        </para>
    </section>

    <section xml:id="differenthostfilter">
            <title>DifferentHostFilter</title>
            <para>Schedule the instance on a different host from a
                set of instances. To take advantage of this filter, the requester
                must pass a scheduler hint, using  <literal>different_host</literal>
                as the keyand a list of instance uuids as the value. This
                filter is the opposite of the <literal>SameHostFilter</literal>. 
                Using the
                <command>nova</command> command-line tool, use the <literal>--hint</literal>
                flag:
<screen>
<prompt>$</prompt> <userinput>nova boot --image cedef40a-ed67-4d10-800e-17455edce175 --flavor 1 --hint different_host=[a0cf03a5-d921-4877-bb5c-86d26cf818e1,8c19174f-4220-44f0-824a-cd1eeef10287] server-1</userinput></screen>
With the API, use the <literal>os:scheduler_hints</literal> key:
<programlisting>
    {
    'server': {
        'name': 'server-1',
        'imageRef': 'cedef40a-ed67-4d10-800e-17455edce175',
        'flavorRef': '1'
    },
    'os:scheduler_hints': {
        'different_host': ['a0cf03a5-d921-4877-bb5c-86d26cf818e1',
                           '8c19174f-4220-44f0-824a-cd1eeef10287'],
    }
}
</programlisting>
            </para>
        </section>

    <section xml:id="isolatedhostsfilter">
        <title>
            IsolatedHostsFilter
        </title>
        <para>
            Allows the admin to define a special (isolated) set of images and
            a special (isolated) set of hosts, such that the isolated images
            can only run on the isolated hosts, and the isolated hosts can
            only run isolated images.
        </para>
        <para>
            The admin must specify the isolated set of images and hosts in
            the <filename>nova.conf</filename> file using the <literal>isolated_hosts</literal> 
            and <literal>isolated_images</literal> configuration options. For
            example:
            <programlisting>
isolated_hosts=server1,server2
isolated_images=342b492c-128f-4a42-8d3a-c5088cf27d13,ebd267a6-ca86-4d6c-9a0e-bd132d6b7d09
            </programlisting>
        </para>
    </section>

    <section xml:id="ramfilter">
        <title>RamFilter</title>
        <para>Only schedule instances on hosts if there is sufficient RAM
            available. If this filter is not set, the scheduler may
            overprovision a host based on RAM (i.e., the RAM allocated by
            virtual machine instances may exceed the physical RAM).</para>
        <para>This filter can be configured to allow a fixed amount of
            RAM overcommitment by using the <literal>ram_allocation_ratio</literal>
            configuration option in <filename>nova.conf</filename>. The default
            setting is:
<programlisting>
ram_allocation_ratio=1.5
</programlisting>
            With this setting, if there is 1GB of free RAM, the scheduler will
            allow instances up to size 1.5GB to be run on that instance.
        </para>
    </section>

        <section xml:id="samehostfilter">
            <title>SameHostFilter</title>
            <para>Schedule the instance on the same host as another instance
                in a set of of instances. To take advantage of this filter, the
                requester must pass a scheduler hint, using  <literal>same_host</literal>
                as the key and a list of instance uuids as the value. This
                filter is the opposite of the <literal>DifferentHostFilter</literal>. Using the
                <command>nova</command> command-line tool, use the <literal>--hint</literal>
                flag:
<screen>
<prompt>$</prompt> <userinput>nova boot --image cedef40a-ed67-4d10-800e-17455edce175 --flavor 1 --hint same_host=[a0cf03a5-d921-4877-bb5c-86d26cf818e1,8c19174f-4220-44f0-824a-cd1eeef10287] server-1</userinput></screen>
With the API, use the <literal>os:scheduler_hints</literal> key:
<programlisting>
    {
    'server': {
        'name': 'server-1',
        'imageRef': 'cedef40a-ed67-4d10-800e-17455edce175',
        'flavorRef': '1'
    },
    'os:scheduler_hints': {
        'same_host': ['a0cf03a5-d921-4877-bb5c-86d26cf818e1',
                      '8c19174f-4220-44f0-824a-cd1eeef10287'],
    }
}
</programlisting>
            </para>
        </section>

        <section xml:id="simplecidraffinityfilter">
            <title>SimpleCIDRAffinityFilter</title>
            <para>Schedule the instance based on host IP subnet range. To
                take advantage of this filter, the requester must specify a
                range of valid IP address in CIDR format, by passing two 
                scheduler hints:
            <variablelist>
              <varlistentry>
                <term><literal>build_near_host_ip</literal></term>
                <listitem><para>The first IP address in the subnet  (e.g., <literal>192.168.1.1</literal>)</para></listitem>
              </varlistentry>
              <varlistentry>
                <term><literal>cidr</literal></term>
                <listitem><para>The CIDR that corresponds to the subnet (e.g., <literal>/24</literal>)</para></listitem>
              </varlistentry>
            </variablelist>

                Using the
                <command>nova</command> command-line tool, use the <literal>--hint</literal>
                flag. For example, to specify the IP subnet <literal>192.168.1.1/24</literal></para>
<screen>
<prompt>$</prompt> <userinput>nova boot --image cedef40a-ed67-4d10-800e-17455edce175 --flavor 1 --hint build_near_host_ip=192.168.1.1 --hint cidr=/24 server-1</userinput></screen>
<para>With the API, use the <literal>os:scheduler_hints</literal> key:</para>
<programlisting>
    {
    'server': {
        'name': 'server-1',
        'imageRef': 'cedef40a-ed67-4d10-800e-17455edce175',
        'flavorRef': '1'
    },
    'os:scheduler_hints': {
        'build_near_host_ip': '192.168.1.1',
        'cidr': '24'
    }
}
</programlisting>
            
        </section>

    </section>

    </chapter>
