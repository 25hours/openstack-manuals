<?xml version="1.0" encoding="UTF-8"?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
  <table rules="all" >					       <!--xml:id="hypervisors-nova-conf"-->
        <caption>Description of nova.conf file configuration options
            for hypervisors</caption>
        <col width="50%"/>
        <col width="50%"/>
        <thead>
            <tr>
                <td>Configuration option=Default value</td>
                <td>(Type) Description</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    block_migration_flag=VIR_MIGRATE_UNDEFINE_SOURCE,VIR_MIGRATE_PEER2PEER,VIR_MIGRATE_NON_SHARED_INC </td>
                <td> (StrOpt) Define block migration behavior. </td>
            </tr>
            <tr>
                <td> checksum_base_images=false </td>
                <td> (BoolOpt) Used as an additional check to detect if cached images have become
                    corrupted. If true, the compute service will write checksums for image files in
                    the <filename>/var/lib/nova/instances/_base</filename> directory to disk, and do
                    periodic checks to verify that this checksum is valid. If the checksum fails to
                    validate, the failure is recorded to the log as an error, but no other action is
                    taken: it is assumed that an operator will monitor the logs and take appropriate
                    action. If false, image hashes are not verified.</td>
            </tr>
            <tr>
                <td> hyperv_attaching_volume_retry_count=10 </td>
                <td> (IntOpt) Number of times to retry attaching to a volume when using the Hyper-V hypervisor </td>
            </tr>
            <tr>
                <td> hyperv_wait_between_attach_retry=5 </td>
                <td> (IntOpt) To be written: found in /nova/virt/hyperv/volumeops.py </td>
            </tr>
            <tr>
                <td>libvirt_cpu_mode=&lt;None&gt; </td>
                <td> (StrOpt) Configures the guest CPU model exposed to the hypervisor. Valid
                    options are: custom, host-model, host-passthrough, none. If the hypervisor is
                    KVM or QEMU, the default value is host-model, otherwise the default value is
                    none.</td>
            </tr>
            <tr>
                <td>libvirt_cpu_model=&lt;None&gt; </td>
                <td> (StrOpt)  Specify the guest CPU model exposed to the hypervisor. This
                    configuration option is only applicable if <literal>libvirt_cpu_mode</literal>
                    is set to <literal>custom</literal>. Valid options: one of the named models
                    specified in <filename>/usr/share/libvirt/cpu_map.xml</filename>, e.g.:
                    Westmere, Nehalem, Opteron_G3. </td>
            </tr>
            <tr>
                <td>libvirt_disk_prefix=&lt;None&gt; </td>
                <td> (StrOpt) Override the default disk prefix for the
                    devices attached to a server, which is dependent
                    on libvirt_type. (valid options are: sd, xvd, uvd,
                    vd) </td>
            </tr>
            <tr>
                <td> libvirt_inject_key=true </td>
                <td> (BoolOpt) Inject the ssh public key at boot time
                </td>
            </tr>
            <tr>
                <td> libvirt_inject_partition=1 </td>
                <td> (IntOpt) The partition to inject to :
                    -2 => disable, -1 => inspect (libguestfs only),
                     0 => not partitioned, >0 => partition number'
                </td>
            </tr>
            <tr>
                <td><para> libvirt_images_type=default </para></td>
                <td><para> (StrOpt) Instance ephemeral storage backend format.
                    Acceptable values are: raw, qcow2, lvm, default.
                    If default is specified, then use_cow_images flag
		    is used instead of this one. Please note, that current
                    snapshot mechanism in OpenStack Compute works only with instances
                    backed with Qcow2 images. </para></td>
            </tr>
            <tr>
                <td><para> libvirt_images_volume_group=None </para></td>
                <td><para> (StrOpt) LVM Volume Group that is used
                    for instance ephemerals, when you specify
                    libvirt_images_type=lvm. </para></td>
            </tr>
	          <tr>
                <td> libvirt_inject_password=false </td>
                <td> (BoolOpt) Inject the admin password at boot time,
                    without an agent. </td>
            </tr>
      	    <tr>
                <td> libvirt_lvm_snapshot_size=1000 </td>
                <td> (IntOpt) The amount of storage (in megabytes) to
                 allocate for LVM snapshot copy-on-write blocks. </td>
            </tr>
            <tr>
                <td> libvirt_nonblocking=true </td>
                <td> (BoolOpt) Use a separated OS thread pool to
                    realize non-blocking libvirt calls </td>
            </tr>
            <tr>
                <td>libvirt_snapshots_directory=$instances_path/snapshots</td>
                <td> (StrOpt) Location where libvirt driver will store snapshots
                    before uploading them to image service</td>
            </tr>
            <tr>
                <td>libvirt_snapshot_compression=False</td>
                <td> (BoolOpt) Compresses snapshot images when possible.
                This currently applies exclusively to qcow2 images.</td>
            </tr>
            <tr>
                <td><para> libvirt_sparse_logical_volumes=false </para></td>
                <td><para> (BoolOpt) Create sparse (not fully allocated) LVM volumes
                    for instance ephemerals if you use LVM backend for them. </para></td>
            </tr>
            <tr>
                <td> libvirt_type=kvm </td>
                <td> (StrOpt) Libvirt domain type (valid options are:
                    kvm, lxc, qemu, uml, xen) </td>
            </tr>
            <tr>
                <td> libvirt_uri= </td>
                <td> (StrOpt) Override the default libvirt URI (which
                    is dependent on libvirt_type) </td>
            </tr>
            <tr>
                <td>
                    libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtGenericVifDriver </td>
                <td> (StrOpt) The libvirt VIF driver to configure the
                    VIFs. </td>
            </tr>
            <tr>
                <td>
                    <para>libvirt_volume_drivers="iscsi=nova.virt.libvirt.volume.LibvirtISCSIVolumeDriver,</para><para>local=nova.virt.libvirt.volume.LibvirtVolumeDriver,</para><para>fake=nova.virt.libvirt.volume.LibvirtFakeVolumeDriver,</para><para>rbd=nova.virt.libvirt.volume.LibvirtNetVolumeDriver,</para><para>sheepdog=nova.virt.libvirt.volume.LibvirtNetVolumeDriver,</para><para>glusterfs=nova.virt.libvirt.volume.LibvirtGlusterfsVolumeDriver"</para> </td>
                <td> (ListOpt) Libvirt handlers for remote volumes.
                </td>
            </tr>
            <tr>
                <td> libvirt_wait_soft_reboot_seconds=120 </td>
                <td> (IntOpt) Number of seconds to wait for instance
                    to shut down after soft reboot request is made. We
                    fall back to hard reboot if instance does not
                    shutdown within this window. </td>
            </tr>
            <tr>
                <td> limit_cpu_features=false</td>
                <td> (BoolOpt) Used by Hyper-V
                </td>
            </tr>
            <tr>
                <td> remove_unused_base_images=true </td>
                <td> (BoolOpt) Indicates whether unused base images should be removed
                </td>
            </tr>
            <tr>
                <td> remove_unused_kernels=false </td>
                <td> (BoolOpt) Should unused kernel images be removed?
                    If unused images should be removed set to true, if
                    not, set to false. This option is only safe to set
                    to true if all compute nodes have been updated to
                    support this option so that  older image cache
                    managers on remote compute nodes are prevented
                    from cleaning up kernels because they appear
                    unused. This will be enabled by default in a
                    future release. </td>
            </tr>
            <tr>
                <td> remove_unused_original_minimum_age_seconds=86400 </td>
                <td> (IntOpt) Unused unresized base images younger
                    than this will not be removed </td>
            </tr>
            <tr>
                <td> remove_unused_resized_minimum_age_seconds=3600 </td>
                <td> (IntOpt) Unused resized base images younger than
                    this will not be removed </td>
            </tr>
            <tr>
                <td>rescue_image_id=&lt;None&gt; </td>
                <td> (StrOpt) Rescue ami image </td>
            </tr>
            <tr>
                <td>rescue_kernel_id=&lt;None&gt; </td>
                <td> (StrOpt) Rescue aki image </td>
            </tr>
            <tr>
                <td>rescue_ramdisk_id=&lt;None&gt; </td>
                <td> (StrOpt) Rescue ari image </td>
            </tr>
            <tr>
                <td>snapshot_image_format=&lt;None&gt; </td>
                <td> (StrOpt) Snapshot image format (valid options are
                    : raw, qcow2, vmdk, vdi). Defaults to same as
                    source image </td>
            </tr>
            <tr>
                <td> use_usb_tablet=true </td>
                <td> (BoolOpt) Sync virtual and real mouse cursors in
                    Windows VMs </td>
            </tr>
            <tr>
                <td>libvirt integration</td>
                <td> </td>
            </tr>
            <tr>
                <td> libvirt_ovs_bridge=br-int </td>
                <td> (StrOpt) Name of Integration Bridge used by Open
                    vSwitch </td>
            </tr>
            <tr>
                <td> libvirt_use_virtio_for_bridges=false </td>
                <td> (BoolOpt) Use virtio for bridge interfaces </td>
            </tr>
            <tr>
                <td>VMWare integration</td>
                <td> </td>
            </tr>
            <tr>
                <td>vmwareapi_wsdl_loc=&lt;None&gt; </td>
                <td> (StrOpt) VIM Service WSDL Location e.g
                    http://&lt;server&gt;/vimService.wsdl, due to a
                    bug in vSphere ESX 4.1 default wsdl.
                     </td>
            </tr>
            <tr>
                <td>
                    vmware_vif_driver=nova.virt.vmwareapi.vif.VMWareVlanBridgeDriver </td>
                <td> (StrOpt) The VMWare VIF driver to configure the
                    VIFs. </td>
            </tr>
            <tr>
                <td> vmwareapi_api_retry_count=10 </td>
                <td> (FloatOpt) The number of times we retry on
                    failures, e.g., socket error, etc. Used only if
                    compute_driver is vmwareapi.VMWareESXDriver. </td>
            </tr>
            <tr>
                <td>vmwareapi_host_ip=&lt;None&gt; </td>
                <td> (StrOpt) URL for connection to VMWare ESX
                    host.Required if compute_driver is vmwareapi.VMWareESXDriver.
                </td>
            </tr>
            <tr>
                <td>vmwareapi_host_password=&lt;None&gt; </td>
                <td> (StrOpt) Password for connection to VMWare ESX
                    host. Used only if compute_driver is vmwareapi.VMWareESXDriver.
                </td>
            </tr>
            <tr>
                <td>vmwareapi_host_username=&lt;None&gt; </td>
                <td> (StrOpt) Username for connection to VMWare ESX
                    host. Used only if compute_driver is vmwareapi.VMWareESXDriver.
                </td>
            </tr>
            <tr>
                <td> vmwareapi_task_poll_interval=5.0 </td>
                <td> (FloatOpt) The interval used for polling of
                    remote tasks. Used only if compute_driver is
                    vmwareapi.VMWareESXDriver, </td>
            </tr>
            <tr>
                <td> vmwareapi_vlan_interface=vmnic0 </td>
                <td> (StrOpt) Physical ethernet adapter name for vlan
                    networking </td>
            </tr>
            <tr>
                <td> powervm_mgr_type=ivm </td>
                <td> (StrOpt) PowerVM system manager type (ivm, hmc) </td>
            </tr>
            <tr>
                <td> powervm_mgr=&lt;None&gt; </td>
                <td> (StrOpt) PowerVM manager host or ip </td>
            </tr>
            <tr>
                <td> powervm_vios=powervm_mgr </td>
                <td> (StrOpt) PowerVM VIOS host or ip if different from manager </td>
            </tr>
            <tr>
                <td> powervm_mgr_user=&lt;None&gt; </td>
                <td> (StrOpt) PowerVM manager user name </td>
            </tr>
            <tr>
                <td> powervm_mgr_passwd=&lt;None&gt; </td>
                <td> (StrOpt) PowerVM manager user password </td>
            </tr>
            <tr>
                <td> powervm_img_remote_path=&lt;None&gt; </td>
                <td> (StrOpt) PowerVM image remote path. Used to copy and store images
                    from Glance on the PowerVM VIOS LPAR. </td>
            </tr>
            <tr>
                <td> powervm_img_local_path=&lt;None&gt; </td>
                <td> (StrOpt) Local directory on the compute host to download glance
                    images to. </td>
            </tr>
        </tbody>
    </table>


</para>
