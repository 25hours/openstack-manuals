<?xml version="1.0" encoding="UTF-8"?>
<para xmlns= "http://docbook.org/ns/docbook" version= "5.0">
<table rules= "all">
    <caption>Description of nova.conf file configuration options
        for networking options</caption>
    <col width= "50%"/>
    <col width= "50%"/>
    <thead>
        <tr>
            <td><para>Configuration option=Default value</para></td>
            <td><para>(Type) Description</para></td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><para> allow_same_net_traffic=true </para></td>
            <td><para> (BoolOpt) Whether to allow network traffic from
                same network </para></td>
        </tr>
        <tr>
            <td><para> defer_iptables_apply=false </para></td>
            <td><para> (BoolOpt) Whether to batch up the application 
                      of IPTables rules during a host restart and 
                      apply all at the end of the init phase
            </para></td>
        </tr>
        <tr>
            <td><para> dhcp_lease_time=120 </para></td>
            <td><para> (IntOpt) Lifetime of a DHCP lease in seconds
            </para></td>
        </tr>
        <tr>
            <td><para> dhcpbridge=$bindir/nova-dhcpbridge </para></td>
            <td><para> (StrOpt) location of nova-dhcpbridge </para></td>
        </tr>
        <tr>
            <td><para>
                dhcpbridge_flagfile=/etc/nova/nova-dhcpbridge.conf </para></td>
            <td><para> (StrOpt) location of flagfile for dhcpbridge
            </para></td>
        </tr>
        <tr>
            <td><para> dmz_cidr=10.128.0.0/24 </para></td>
            <td><para> (StrOpt) dmz range that should be accepted </para></td>
        </tr>
        <tr>
            <td><para>dns_server=[] </para></td>
            <td><para> (MultiStrOpt) if set, uses specific dns server for
                dnsmasq. Can be specified multiple times. </para></td>
        </tr>
        <tr>
            <td><para>use_network_dns_servers=False </para></td>
            <td><para> (BoolOpt) if set, uses the dns server from the
                node's network settings for the servers in dnsmasq. </para></td>
        </tr>
        <tr>
            <td><para> dnsmasq_config_file= </para></td>
            <td><para> (StrOpt) Override the default dnsmasq settings
                with this file </para></td>
        </tr>
        <tr>
            <td><para>
                linuxnet_interface_driver=nova.network.linux_net.LinuxBridgeInterfaceDriver </para></td>
            <td><para> (StrOpt) Driver used to create ethernet devices.
            </para></td>
        </tr>
        <tr>
            <td><para> linuxnet_ovs_integration_bridge=br-int </para></td>
            <td><para> (StrOpt) Name of Open vSwitch bridge used with
                linuxnet </para></td>
        </tr>
        
        <tr>
            <td><para>network_device_mtu=&lt;None&gt; </para></td>
            <td><para> (StrOpt) MTU setting for vlan </para></td>
        </tr>
        <tr>
            <td><para> networks_path=$state_path/networks </para></td>
            <td><para> (StrOpt) Location to keep network config files
            </para></td>
        </tr>
        <tr>
            <td><para> public_interface=eth0 </para></td>
            <td><para> (StrOpt) Interface for public IP addresses </para></td>
        </tr>
        <tr>
            <td><para> routing_source_ip=$my_ip </para></td>
            <td><para> (StrOpt) Public IP of network host </para></td>
        </tr>
        <tr>
            <td><para> send_arp_for_ha=false </para></td>
            <td><para> (BoolOpt) send gratuitous ARPs for HA setup </para></td>
        </tr>
        <tr>
            <td><para> use_single_default_gateway=false </para></td>
            <td><para> (BoolOpt) Use single default gateway. Only first
                nic of vm will get default gateway from dhcp
                server </para></td>
        </tr>
        <tr>
            <td><para> auto_assign_floating_ip=false </para></td>
            <td><para> (BoolOpt) Autoassigning floating IP to VM </para></td>
        </tr>
        <tr>
            <td><para> cnt_vpn_clients=0 </para></td>
            <td><para> (IntOpt) Number of addresses reserved for vpn
                clients </para></td>
        </tr>
        <tr>
            <td><para> create_unique_mac_address_attempts=5 </para></td>
            <td><para> (IntOpt) Number of attempts to create unique mac
                address </para></td>
        </tr>
        <tr>
            <td><para> default_floating_pool=nova </para></td>
            <td><para> (StrOpt) Default pool for floating ips </para></td>
        </tr>
        <tr>
            <td><para> dhcp_domain=novalocal </para></td>
            <td><para> (StrOpt) domain to use for building the hostnames
            </para></td>
        </tr>
        <tr>
            <td><para> fake_call=false </para></td>
            <td><para> (BoolOpt) If True, skip using the queue and make
                local calls </para></td>
        </tr>
        <tr>
            <td><para> fixed_ip_disassociate_timeout=600 </para></td>
            <td><para> (IntOpt) Seconds after which a deallocated IP is
                disassociated </para></td>
        </tr>
        <tr>
            <td><para> fixed_range=10.0.0.0/8 </para></td>
            <td><para> (StrOpt) Fixed IP address block </para></td>
        </tr>
        
        <tr>
            <td><para> flat_injected=false </para></td>
            <td><para> (BoolOpt) Whether to attempt to inject network
                setup into guest </para></td>
        </tr>
        <tr>
            <td><para>flat_interface=&lt;None&gt; </para></td>
            <td><para> (StrOpt) FlatDhcp will bridge into this interface
                if set </para></td>
        </tr>
        <tr>
            <td><para>flat_network_bridge=&lt;None&gt; </para></td>
            <td><para> (StrOpt) Bridge for simple network instances
            </para></td>
        </tr>
        <tr>
            <td><para> flat_network_dns=8.8.4.4 </para></td>
            <td><para> (StrOpt) Dns for simple network </para></td>
        </tr>
        <tr>
            <td><para> floating_range=4.4.4.0/24 </para></td>
            <td><para> (StrOpt) Floating IP address block </para></td>
        </tr>
        <tr>
            <td><para> force_dhcp_release=false </para></td>
            <td><para> (BoolOpt) If True, send a dhcp release on
                instance termination </para></td>
        </tr>
        <tr>
            <td><para>gateway=&lt;None&gt; </para></td>
            <td><para> (StrOpt) Default IPv4 gateway </para></td>
        </tr>
        
        <tr>
            <td><para> l3_lib=nova.network.l3.LinuxNetL3 </para></td>
            <td><para> (StrOpt) Indicates underlying L3 management
                library </para></td>
        </tr>
        <tr>
            <td><para> multi_host=false </para></td>
            <td><para> (BoolOpt) Default value for multi_host in networks. 
                Enable when using nova networking (not quantum) on
                multiple compute nodes for creation and runtime efficiency.
                Also provides incremental fault tolerance.</para></td>
        </tr>
        <tr>
            <td><para> network_host=MGG2WEDRJM </para></td>
            <td><para> (StrOpt) Network host to use for IP allocation in
                flat modes </para></td>
        </tr>
        <tr>
            <td><para> network_size=256 </para></td>
            <td><para> (IntOpt) Number of addresses in each private
                subnet </para></td>
        </tr>
        <tr>
            <td><para> num_networks=1 </para></td>
            <td><para> (IntOpt) Number of networks to support </para></td>
        </tr>
        <tr>
            <td><para>vlan_interface=&lt;None&gt; </para></td>
            <td><para> (StrOpt) VLANs will bridge into this interface if
                set </para></td>
        </tr>
        <tr>
            <td><para> vlan_start=100 </para></td>
            <td><para> (IntOpt) First VLAN for private networks </para></td>
        </tr>
        <tr>
            <td><para> vpn_ip=$my_ip </para></td>
            <td><para> (StrOpt) Public IP for the cloudpipe VPN servers
            </para></td>
        </tr>
        <tr>
            <td><para> vpn_start=1000 </para></td>
            <td><para> (IntOpt) First VPN port for private networks
            </para></td>
        </tr>
        <tr>
            <td><para>CloudPipe specifics</para></td>
            <td/>
        </tr>
        <tr>
            <td><para>
                boot_script_template=$pybasedir/nova/cloudpipe/bootscript.template </para></td>
            <td><para> (StrOpt) Template for cloudpipe instance boot
                script </para></td>
        </tr>
        <tr>
            <td><para> dmz_mask=255.255.255.0 </para></td>
            <td><para> (StrOpt) Netmask to push into openvpn config
            </para></td>
        </tr>
        <tr>
            <td><para> dmz_net=10.0.0.0 </para></td>
            <td><para> (StrOpt) Network to push into openvpn config
            </para></td>
        </tr>
        <tr>
            <td><para> vpn_instance_type=m1.tiny </para></td>
            <td><para> (StrOpt) Instance type for vpn instances </para></td>
        </tr>
        <tr>
            <td><para>Quantum specifics</para></td>
            <td/>
        </tr>
        <tr>
            <td><para> network_api_class=nova.network.api.API </para></td>
            <td><para> (StrOpt) Defaults to nova-network. Must be modified to nova.network.quantumv2.api.API
                indicate that Quantum should be used rather than the
                traditional nova-network networking model. 
            </para></td>
        </tr>
        <tr>
            <td><para> quantum_url=http://127.0.0.1:9696 </para></td>
            <td><para> (IntOpt) URL for connecting to the Quantum networking service. 
                Indicates the hostname/IP and port of the Quantum server for
                your deployment.
            </para></td>
        </tr>
        <tr>
            <td><para> quantum_auth_strategy=keystone </para></td>
            <td><para> (StrOpt) Should be kept as
                default 'keystone' for all production deployments.
            </para></td>
        </tr>
            <tr>
                <td><para> quantum_admin_tenant_name=&lt;None&gt;
                    </para></td>
                <td><para> (StrOpt) Tenant name for connecting to
                        Quantum network services in admin context
                        through the OpenStack Identity service.
                    </para></td>
            </tr>
            <tr>
                <td><para> quantum_admin_username=&lt;None&gt;
                    </para></td>
                <td><para> (StrOpt) Username for connecting to Quantum
                        network services in admin context through the
                        OpenStack Identity service. </para></td>
            </tr>
        <tr>
            <td><para> quantum_admin_password=&lt;None&gt;
            </para></td>
            <td><para> (StrOpt) Password for connecting to Quantum
                network services in admin context through the
                OpenStack Identity service. </para></td>
        </tr>
        <tr>
            <td><para> quantum_admin_auth_url=&lt;None&gt;
            </para></td>
            <td><para> (StrOpt) Points to the OpenStack Identity server IP and port.
                This is the Identity (keystone)
                admin API server IP and port value, and not the Identity
                service API IP and port. </para></td>
        </tr>
        <tr>
            <td><para> quantum_region_name=&lt;None&gt;
            </para></td>
            <td><para> (StrOpt) Region name for connecting to quantum
                in admin context, through the OpenStack Identity service,
            </para></td>
        </tr>
        <tr>
            <td><para> quantum_extension_sync_interval=&lt;600&gt;
            </para></td>
            <td><para> (IntOpt) Some OpenStack Networking (quantum) extensions
                require Compute (nova) to pass in additional fields based on
                which extension the Networking (quantum) service is running.
                This is the number of seconds that nova will wait before
                requerying. </para></td>
        </tr>
    </tbody>
</table>
</para>
