<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix [
<!-- Some useful entities borrowed from HTML -->
<!ENTITY ndash  "&#x2013;">
<!ENTITY mdash  "&#x2014;">
<!ENTITY hellip "&#x2026;">
<!ENTITY plusmn "&#xB1;">

]>
<appendix xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="app_core">
    <title>Core Configuration File Options</title>
    <section xml:id="quantum_conf">
        <title>quantum.conf</title>
        <para>The configuration settings for the quantum services are found in <filename>/etc/quantum/quantum.conf</filename>.</para>
            <table rules="all">
                <caption>Debugging Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>debug=False </td>
                        <td>(BoolOpt) Print debugging output </td>
                    </tr>
                    <tr>
                        <td>verbose=False </td>
                        <td>(BoolOpt) Print more verbose output </td>
                    </tr>
                </tbody>
            </table>
    
        <table rules="all">
                <caption>Logging Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>log_config= </td>
                        <td>(StrOpt) If this option is specified, the
                            logging configuration file specified is
                            used and overrides any other logging
                            options specified. Please see the Python
                            logging module documentation for details
                            on logging configuration files. Print
                            debugging output </td>
                    </tr>
                    <tr>
                        <td>log_format=%(asctime)s %(levelname)8s
                            [%(name)s] %(message)s </td>
                        <td>(StrOpt) A logging.Formatter log message
                            format string which may use any of the
                            available logging.LogRecord attributes.
                        </td>
                    </tr>
                    <tr>
                        <td>log_date_format=%Y-%m-%d %H:%M:%S </td>
                        <td>(StrOpt) Format string for %(asctime)s in
                            log records. </td>
                    </tr>
                    <tr>
                        <td>log_file= </td>
                        <td>(StrOpt) (Optional) Name of log file to
                            output to.  If not set, logging will go to
                            stdout. </td>
                    </tr>
                    <tr>
                        <td>log_dir= </td>
                        <td>(StrOpt) (Optional) The directory to keep
                            log files in (will be prepended to
                            --logfile). </td>
                    </tr>
                    <tr>
                        <td>use_syslog=False </td>
                        <td>(BoolOpt) Use syslog for logging. </td>
                    </tr>
                    <tr>
                        <td>syslog_log_facility=LOG_USER </td>
                        <td>(StrOpt) syslog facility to receive log
                            lines </td>
                    </tr>
                </tbody>
            </table>
       <table rules="all">
                <caption>Service Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>bind_host=0.0.0.0 </td>
                        <td>(StrOpt) Server listening IP. </td>
                    </tr>
                    <tr>
                        <td>bind_port=9696 </td>
                        <td>(IntOpt) Server listening port. </td>
                    </tr>
                    <tr>
                        <td>api_paste_config=api-paste.ini </td>
                        <td>(StrOpt) The paste configuration file.
                            This is used to configure the WSGI
                            application. </td>
                    </tr>
                    <tr>
                        <td>api_extensions_path= </td>
                        <td>(StrOpt) Enables custom addition to be
                            made to the above configuration. </td>
                    </tr>
                    <tr>
                        <td>policy_file=policy.json </td>
                        <td>(StrOpt) JSON file representing policies
                            to access and view data. The usage and
                            format is discussed in more detail in the
                            Authentication and Authorization section.
                        </td>
                    </tr>
                    <tr>
                        <td>auth_strategy=keystone </td>
                        <td>(StrOpt) The strategy used for
                            authentication. The supported values are
                            ‘keystone’ and ‘noauth’. </td>
                    </tr>
                    <tr>
                        <td>
                            core_plugin=quantum.plugins.sample.SamplePlugin.FakePlugin </td>
                        <td>(StrOpt) The plugin to be loaded by the
                            service. </td>
                    </tr>
                </tbody>
            </table>
        
            <table rules="all">
                <caption>Base Plugin Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>base_mac=fa:16:3e:00:00:00 </td>
                        <td>(StrOpt) MAC addresses for a port are
                            generated. The first 3 octets will remain
                            unchanged. If the 4h octet is not 00, it
                            will also used. The others will be
                            randomly generated. </td>
                    </tr>
                    <tr>
                        <td>mac_generation_retries=16 </td>
                        <td>(IntOpt) The number of times the plugin
                            attempts to generate a unique MAC address.
                        </td>
                    </tr>
                    <tr>
                        <td>allow_bulk=True </td>
                        <td>(BoolOpt) Enable or disable bulk
                            create/update/delete operations. </td>
                    </tr>
                    <tr>
                        <td>max_dns_nameservers=5 </td>
                        <td>(IntOpt) The maximum amount of DNS
                            nameservers that can be configured per
                            subnet. </td>
                    </tr>
                    <tr>
                        <td>max_subnet_host_routes=20 </td>
                        <td>(IntOpt) The maximum amount of host routes
                            that can be configured per subnet. </td>
                    </tr>
                    <tr>
                        <td>state_path=. </td>
                        <td>(StrOpt) Top level directory for
                            configuration files. </td>
                    </tr>
                    <tr>
                        <td>dhcp_lease_duration=120 </td>
                        <td>(IntOpt) The default expiration time for a
                            DHCP address. This is in seconds. </td>
                    </tr>
                </tbody>
            </table>
        
        
            <table rules="all">
                <caption>Common RPC Message Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>control_exchange=quantum </td>
                        <td>(StrOpt) AMQP exchange to connect to if
                            using RabbitMQ or QPID </td>
                    </tr>
                    <tr>
                        <td>
                            rpc_back_end=quantum.openstack.common.rpc.impl_kombu </td>
                        <td>(StrOpt) The messaging module to use,
                            defaults to kombu. For qpid, make use of
                            quantum.openstack.common.rpc.impl_qpid
                        </td>
                    </tr>
                    <tr>
                        <td>rpc_thread_pool_size=64 </td>
                        <td>(IntOpt) Size of RPC thread pool. </td>
                    </tr>
                    <tr>
                        <td>rpc_conn_pool_size=30 </td>
                        <td>(IntOpt) Size of RPC connection pool.
                        </td>
                    </tr>
                    <tr>
                        <td>rpc_response_timeout=60 </td>
                        <td>(IntOpt) Seconds to wait for a response
                            from call or multicall </td>
                    </tr>
                    <tr>
                        <td>
                            allowed_rpc_exception_modules='quantum.openstack.common.exception',
                            'nova.exception' </td>
                        <td>(ListOpt) Modules of exceptions that are
                            permitted to be recreated upon receiving
                            exception data from an rpc call. </td>
                    </tr>
                    <tr>
                        <td>fake_rabbit=False </td>
                        <td>(BoolOpt) If passed, use a fake RabbitMQ
                            provider </td>
                    </tr>
                </tbody>
            </table>
       
            <table rules="all">
                <caption>Rabbit RPC Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>kombu_ssl_version= </td>
                        <td>(StrOpt) SSL version to use (valid only if
                            SSL enabled). </td>
                    </tr>
                    <tr>
                        <td>kombu_ssl_keyfile= </td>
                        <td>(StrOpt) SSL key file (valid only if SSL
                            enabled) </td>
                    </tr>
                    <tr>
                        <td>kombu_ssl_certfile= </td>
                        <td>(StrOpt) SSL cert file (valid only if SSL
                            enabled) </td>
                    </tr>
                    <tr>
                        <td>kombu_ssl_ca_certs= </td>
                        <td>(StrOpt) SSL certification authority file
                            (valid only if SSL enabled) </td>
                    </tr>
                    <tr>
                        <td>rabbit_host=localhost </td>
                        <td>(StrOpt) IP address of the RabbitMQ
                            installation </td>
                    </tr>
                    <tr>
                        <td>rabbit_password=guest </td>
                        <td>            Password of the RabbitMQ
                            server </td>
                    </tr>
                    <tr>
                        <td>rabbit_port=5672 </td>
                        <td>(IntOpt) Port where RabbitMQ server is
                            running/listening </td>
                    </tr>
                    <tr>
                        <td>rabbit_userid=guest </td>
                        <td>(StrOpt) User ID used for RabbitMQ
                            connections </td>
                    </tr>
                    <tr>
                        <td>rabbit_virtual_host=/ </td>
                        <td>(StrOpt) Location of a virtual RabbitMQ
                            installation. </td>
                    </tr>
                    <tr>
                        <td>rabbit_max_retries=0 </td>
                        <td>(IntOpt) Maximum retries with trying to
                            connect to RabbitMQ. The default of 0
                            implies an infinite retry count </td>
                    </tr>
                    <tr>
                        <td>rabbit_retry_interval=1 </td>
                        <td>(IntOpt) RabbitMQ connection retry
                            interval </td>
                    </tr>
                </tbody>
            </table>
        
            <table rules="all">
                <caption>QPID RPC Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>qpid_hostname=localhost </td>
                        <td>(StrOpt) Qpid broker hostname </td>
                    </tr>
                    <tr>
                        <td>qpid_port=5672 </td>
                        <td>(IntOpt) Qpid broker port </td>
                    </tr>
                    <tr>
                        <td>qpid_username= </td>
                        <td>(StrOpt) Username for qpid connection
                        </td>
                    </tr>
                    <tr>
                        <td>qpid_password= </td>
                        <td>(StrOpt) Password for qpid connection
                        </td>
                    </tr>
                    <tr>
                        <td>qpid_sasl_mechanisms= </td>
                        <td>(StrOpt) Space separated list of SASL
                            mechanisms to use for auth </td>
                    </tr>
                    <tr>
                        <td>qpid_reconnect=True </td>
                        <td>(BoolOpt) Automatically reconnect </td>
                    </tr>
                    <tr>
                        <td>qpid_reconnect_timeout=0 </td>
                        <td>(IntOpt) The number of seconds to wait
                            before deciding that a reconnect attempt
                            has failed </td>
                    </tr>
                    <tr>
                        <td>qpid_reconnect_limit=0 </td>
                        <td>(IntOpt) The limit for the number of times
                            to reconnect before considering the
                            connection to be failed. </td>
                    </tr>
                    <tr>
                        <td>qpid_reconnect_interval_min=0 </td>
                        <td>(IntOpt) Minimum seconds between
                            reconnection attempts </td>
                    </tr>
                    <tr>
                        <td>qpid_reconnect_interval_max=0 </td>
                        <td>(IntOpt) Maximum seconds between
                            reconnection attempts </td>
                    </tr>
                    <tr>
                        <td>qpid_reconnect_interval=0 </td>
                        <td>(IntOpt) Equivalent to setting max and min
                            to the same value </td>
                    </tr>
                    <tr>
                        <td>qpid_heartbeat=60 </td>
                        <td>(IntOpt) Seconds between connection
                            keepalive heartbeats </td>
                    </tr>
                    <tr>
                        <td>qpid_protocol=tcp </td>
                        <td>(StrOpt) Transport to use, either 'tcp' or
                            'ssl' </td>
                    </tr>
                    <tr>
                        <td>qpid_tcp_nodelay=True </td>
                        <td>(BoolOpt) Disable Nagle algorithm </td>
                    </tr>
                </tbody>
            </table>
            <table rules="all">
                <caption>Notification Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            notification_driver=quantum.openstack.common.notifier.list_notifier </td>
                        <td>(MultiStrOpt) Driver or drivers to handle
                            sending notifications. The default is set
                            as notifier as the DHCP agent makes use of
                            the notifications. </td>
                    </tr>
                    <tr>
                        <td>default_notification_level=INFO </td>
                        <td>(StrOpt) Default notification level for
                            outgoing notifications </td>
                    </tr>
                    <tr>
                        <td>default_publisher_id=$host </td>
                        <td>(StrOpt) Default publisher_id for outgoing
                            notifications </td>
                    </tr>
                    <tr>
                        <td>
                            list_notifier_drivers='quantum.openstack.common.notifier.no_op_notifier' </td>
                        <td>(MultiStrOpt) List of drivers to send
                            notifications </td>
                    </tr>
                    <tr>
                        <td>notification_topics='notifications' </td>
                        <td>(ListOpt) AMQP topic used for openstack
                            notifications </td>
                    </tr>
                </tbody>
            </table>
        
            <table rules="all">
                <caption>Quota Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>quota_driver=quantum.quota.ConfDriver </td>
                        <td>(StrOpt) Default driver to use for quota
                            checks. If the default driver is used then
                            the configuration values below are in
                            effect. To limit quotas per tenant then
                            use:
                            quantum.extensions._quotav2_driver.DbQuotaDriver
                        </td>
                    </tr>
                    <tr>
                        <td>quota_items=network,subnet,port </td>
                        <td>(ListOpt) Resource names that are
                            supported by the Quotas feature. </td>
                    </tr>
                    <tr>
                        <td>default_quota=-1 </td>
                        <td>(IntOpt) Default number of resources
                            allowed per tenant, minus for unlimited
                        </td>
                    </tr>
                    <tr>
                        <td>quota_network=10 </td>
                        <td>(IntOpt) Number of networks allowed per
                            tenant, and minus means unlimited </td>
                    </tr>
                    <tr>
                        <td>quota_subnet=10 </td>
                        <td>(IntOpt) Number of subnets allowed per
                            tenant, and minus means unlimited </td>
                    </tr>
                    <tr>
                        <td>quota_port=50 </td>
                        <td>(IntOpt) Number of ports allowed per
                            tenant, and minus means unlimited </td>
                    </tr>
                </tbody>
            </table>
    </section>
    <section xml:id="ovs_quantum_plugin">
        <title>ovs_quantum_plugin.ini:</title>
        <para>For information about the Open vSwitch plugin configurations,
            see <link
                xlink:href="http://wiki.openstack.org/ConfigureOpenvswitch"
                >http://wiki.openstack.org/ConfigureOpenvswitch</link>. </para>
        <para><table rules="all">
                <caption>Database Access by Plugin</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>sql_connection=sqlite:// </td>
                        <td><para>(StrOpt) The details of the database
                                connection. For example
                                mysql://root:nova@127.0.0.1:3306/ovs_quantum.
                                Replace 127.0.0.1 above with the IP
                                address of the database used by the
                                main quantum server. (Leave it as is
                                if the database runs on this
                                host.).</para>
                            <note>
                                <para> This line must be changed to
                                   ensure that the database values are
                                   persistent. The sqlite is used for
                                   testing. </para>
                            </note></td>
                    </tr>
                    <tr>
                        <td>sql_max_retries=10 </td>
                        <td>(IntOpt) Database re-connection retry
                            times. This is in the event connectivity
                            is lost with the database. -1 implies an
                            infinite retry count. </td>
                    </tr>
                    <tr>
                        <td>reconnect_interval=2 </td>
                        <td>(IntOpt) Database reconnection interval in
                            seconds - in event connectivity is lost.
                        </td>
                    </tr>
                </tbody>
            </table></para>
        <para><emphasis role="bold">OVS Options</emphasis> (This is in
            the section OVS)</para>
        <para>This section deals with the specific OVS options common
            to the plugin and agent.</para>
        <para>
            <table rules="all">
                <caption>OVS Options Common to Plugin and
                    Agent</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>network_vlan_ranges=default:2000:3999 </td>
                        <td>(ListOpt) Comma-separated list of 
                            &lt;physical_network&gt;:&lt;vlan_min&gt;:&lt;vlan_max&gt;
                            tuples enumerating ranges of VLAN IDs on
                            named physical networks that are available
                            for allocation. </td>
                    </tr>
                    <tr>
                        <td>tunnel_id_ranges= </td>
                        <td>(ListOpt) Comma-separated list of
                            &lt;tun_min&gt;:&lt;tun_max&gt; tuples
                            enumerating ranges of GRE tunnel IDs that
                            are available for allocation. </td>
                    </tr>
                    <tr>
                        <td>integration_bridge=br-int </td>
                        <td>(StrOpt) This is the name of the OVS
                            integration bridge. There is one per
                            hypervisor. The integration bridge acts as
                            a virtual "patch port". All VM VIFs are
                            attached to this bridge and then "patched"
                            according to their network connectivity.
                            Do not change this parameter unless you
                            have a good reason to. </td>
                    </tr>
                    <tr>
                        <td>tunnel_bridge=br-tun </td>
                        <td>(StrOpt) Specifies the name of the OVS
                            tunnel bridge used by the agent for GRE
                            tunnels. Only used if tunnel_id_ranges is
                            not empty. </td>
                    </tr>
                    <tr>
                        <td>bridge_mappings=default:br-eth1 </td>
                        <td>(ListOpt) Comma-separated list of
                            &lt;physical_network&gt;:&lt;bridge&gt;
                            tuples mapping physical network names to
                            agent's node-specific OVS bridge names.
                            Each bridge must exist, and should have
                            physical network # interface configured as
                            a port. </td>
                    </tr>
                    <tr>
                        <td>local_ip=10.0.0.3 </td>
                        <td>(StrOpt) Set local-ip to be the local IP
                            address of this hypervisor. This is used
                            only when tunnel_id_ranges are used. </td>
                    </tr>
                    <tr>
                        <td>enable_tunneling=False </td>
                        <td>(BoolOpt) A flag indicating if tunneling
                            is supported. Not all systems that support
                            Open vSwitch support its GRE tunneling
                            feature, that is, it is not supported in
                            the Linux kernel source tree. This applies
                            to both the server and agent </td>
                    </tr>
                </tbody>
            </table></para>
        <para>(This in in the section AGENT)</para>
        <para>
            <table rules="all">
                <caption>Agent Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>rpc=True </td>
                        <td>(BoolOpt) If this is True then the agent
                            will communicate with the plugin via the
                            OpenStack RPC (configured in
                            quantum.conf). If this is False then the
                            agent will poll the database for changes.
                            In the event that this is False then
                            please update the relevant database
                            settings on the agent so that it is able
                            to access the database. </td>
                    </tr>
                    <tr>
                        <td>polling_interval=2 </td>
                        <td>(IntOpt) Agent's polling interval in
                            seconds. </td>
                    </tr>
                    <tr>
                        <td>root_helper=sudo </td>
                        <td>(StrOpt) This enables limiting commands
                            that can be run. Please refer to rootwrap
                            section for more details. </td>
                    </tr>
                </tbody>
            </table>    </para>
    </section>
    <section xml:id="linuxbridge_conf">
        <title>linuxbridge_conf.ini:</title>
        <para><table rules="all">
                <caption>Database Access by Plugin</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>sql_connection=sqlite:// </td>
                        <td><para>(StrOpt) The details of the database
                                connection. For example
                                mysql://root:nova@127.0.0.1:3306/ovs_quantum.
                                Replace 127.0.0.1 above with the IP
                                address of the database used by the
                                main quantum server. (Leave it as is
                                if the database runs on this
                                host.).</para>
                            <note>
                                <para>This line must be changed to
                                   ensure that the database values are
                                   persistent. The sqlite is used for
                                   testing.</para>
                            </note></td>
                    </tr>
                    <tr>
                        <td>sql_max_retries=10 </td>
                        <td>(IntOpt) Database re-connection retry
                            times. This is in the event connectivity
                            is lost with the database. -1 implies an
                            infinite retry count. </td>
                    </tr>
                    <tr>
                        <td>reconnect_interval=2 </td>
                        <td>(IntOpt) Database reconnection interval in
                            seconds - in event connectivity is lost.
                        </td>
                    </tr>
                </tbody>
            </table>
        </para>
        <para>  <table rules="all">
                <caption>VLAN Configurations</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>network_vlan_ranges=default:1000:2999 </td>
                        <td>(ListOpt) Comma-separated list of
                            &lt;physical_network&gt;:&lt;vlan_min&gt;:&lt;vlan_max&gt;
                            tuples enumerating ranges of VLAN IDs on
                            named physical networks that are available
                            for allocation. </td>
                    </tr>
                </tbody>
            </table></para>
        <para>
            <table rules="all">
                <caption>Networking Options on the Agent</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>physical_interface_mappings=default:eth1 </td>
                        <td>(ListOpt) Comma-separated list of
                            &lt;physical_network&gt;:&lt;physical_interface&gt;
                            tuples mapping physical network names to
                            agent's node-specific physical network
                            interfaces. Server uses physical network
                            names for validation but ignores
                            interfaces. </td>
                    </tr>
                </tbody>
            </table></para>
        <para>
            <table rules="all">
                <caption>Agent Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>rpc=True </td>
                        <td>(BoolOpt) If this is True then the agent
                            will communicate with the plugin via the
                            OpenStack RPC (configured in
                            quantum.conf). If this is False then the
                            agent will poll the database for changes.
                            In the event that this is False then
                            please update the relevant database
                            settings on the agent so that it is able
                            to access the database. </td>
                    </tr>
                    <tr>
                        <td>polling_interval=2 </td>
                        <td>(IntOpt) Agent's polling interval in
                            seconds. </td>
                    </tr>
                    <tr>
                        <td>root_helper=sudo </td>
                        <td>(StrOpt) This enables limiting commands
                            that can be run. Please refer to rootwrap
                            section for more details. </td>
                    </tr>
                </tbody>
            </table>  </para>
    </section>
    <section xml:id="dhcp_agent_ini">
        <title>dhcp_agent.ini</title>
        <para>
            <table rules="all">
                <caption>DHCP Specific Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>root_helper=sudo </td>
                        <td>(StrOpt) This enables limiting commands
                            that can be run. Please refer to rootwrap
                            section for more details. </td>
                    </tr>
                    <tr>
                        <td>dhcp_driver=quantum.agent.linux.dhcp.Dnsmasq </td>
                        <td>(StrOpt) The driver used to manage the
                            DHCP server. </td>
                    </tr>
                    <tr>
                        <td>use_namespaces=True </td>
                        <td>(BoolOpt) Allow overlapping IP. (Note: If running
                            multiple agents with different IP addresses on the
                            same host this should be "True" if not you will
                            get routing problems.)</td>
                    </tr>
                </tbody>
            </table>  </para>
        <para>
            <table rules="all">
                <caption>Device Manager Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>admin_user= </td>
                        <td>(StrOpt) Admin Quantum user defined in
                            keystone </td>
                    </tr>
                    <tr>
                        <td>admin_password= </td>
                        <td>(StrOpt) The users password </td>
                    </tr>
                    <tr>
                        <td>admin_tenant_name= </td>
                        <td>(StrOpt) The admin tenant name </td>
                    </tr>
                    <tr>
                        <td>auth_url= </td>
                        <td>(StrOpt) The URL used to validate tokens.
                            `auth_protocol`://`auth_host`:`auth_port`/v2.0
                        </td>
                    </tr>
                    <tr>
                        <td>auth_strategy=keystone </td>
                        <td>(StrOpt) The strategy to use for
                            authentication. Supports noauth or
                            keystone. </td>
                    </tr>
                    <tr>
                        <td>auth_region= </td>
                        <td>(StrOpt) The authentication region </td>
                    </tr>
                    <tr>
                        <td>interface_driver= </td>
                        <td>(StrOpt) The driver used to manage the
                            virtual interface. </td>
                    </tr>
                    <tr>
                        <td>
                            dhcp_lease_relay_socket=$state_path/dhcp/lease_relay </td>
                        <td>(StrOpt) Location to DHCP lease relay UNIX
                            domain socket </td>
                    </tr>
                    <tr>
                        <td>ovs_integration_bridge=br-int </td>
                        <td>(StrOpt) Name of Open vSwitch bridge to
                            use. Only relevant if using Open vSwitch.
                        </td>
                    </tr>
                    <tr>
                        <td>network_device_mtu= </td>
                        <td>(StrOpt) MTU setting for device. Only
                            relevant if using Open vSwitch. </td>
                    </tr>
                    <tr>
                        <td>ryu_api_host=127.0.0.1:8080 </td>
                        <td>(StrOpt) OpenFlow Ryu REST API host:port.
                            Only relevant if using Ryu. </td>
                    </tr>
                    <tr>
                        <td>meta_flavor_driver_mappings= </td>
                        <td>(StrOpt). Mappings between flavors and
                            drivers. Only relevant if using
                            MetaPlugin. </td>
                    </tr>
                    <tr>
                        <td>resync_interval=30 </td>
                        <td>(IntOpt) If there is an exception on the
                            Quantum service then the DHCP agent will
                            ensure that it syncs with the Quantum
                            configuration. The validation about
                            syncing is done every resync_interval
                            seconds. </td>
                    </tr>
                </tbody>
            </table>    </para>
        <para>
            <table rules="all">
                <caption>dnsmasq Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>dhcp_confs=$state_path/dhcp </td>
                        <td>(StrOpt) Location to store DHCP server
                            config files </td>
                    </tr>
                    <tr>
                        <td>dhcp_lease_time=120 </td>
                        <td>(IntOpt) Lifetime of a DHCP lease in
                            seconds </td>
                    </tr>
                    <tr>
                        <td>dhcp_domain=openstacklocal </td>
                        <td>(StrOpt) Domain to use for building the
                            hostnames </td>
                    </tr>
                    <tr>
                        <td>dnsmasq_config_file= </td>
                        <td>(StrOpt) Override the default dnsmasq
                            settings with this file </td>
                    </tr>
                    <tr>
                        <td>dnsmasq_dns_server= </td>
                        <td>(StrOpt) Use another DNS server before any
                            in /etc/resolv.conf. </td>
                    </tr>
                </tbody>
            </table></para>
    </section>
    <section xml:id="l3_agent">
        <title>l3_agent.ini</title>
        <para>
            <table rules="all">
                <caption>L3 Specific Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>root_helper=sudo </td>
                        <td>(StrOpt) This enables limiting commands
                            that can be run. Please refer to rootwrap
                            section for more details. </td>
                    </tr>
                    <tr>
                        <td>external_network_bridge=br-ex </td>
                        <td>(StrOpt) Name of bridge used for external
                            network traffic. </td>
                    </tr>
                    <tr>
                        <td>use_namespaces=True </td>
                        <td>(BoolOpt) Allow overlapping IP. (Note: If running
                            multiple agents with different IP addresses on the
                            same host this should be "True" if not you will
                            get routing problems.)</td>
                    </tr>
                    </tr>
                    <tr>
                        <td>polling_interval=3 </td>
                        <td>(IntOpt) The time in seconds between state
                            poll requests. </td>
                    </tr>
                    <tr>
                        <td>metadata_ip= </td>
                        <td>(StrOpt) IP address used by Nova metadata
                            server. </td>
                    </tr>
                    <tr>
                        <td>metadata_port=8775 </td>
                        <td>(IntOpt) TCP Port used by Nova metadata
                            server. </td>
                    </tr>
                    <tr>
                        <td>router_id= </td>
                        <td>(StrOpt) If namespaces is disabled, the l3
                            agent can only configure a router whose ID
                            matches this parameter. </td>
                    </tr>
                    <tr>
                        <td>handle_internal_only_routers=True </td>
                        <td>(BoolOpt) Agent should implement routers
                            with no gateway. </td>
                    </tr>
                    <tr>
                        <td>gateway_external_network_id= </td>
                        <td>(StrOpt) UUID of external network for routers
                            implemented by the agents. </td>
                    </tr>
                </tbody>
            </table></para>
        <para>
            <table rules="all">
                <caption>Device Manager Options</caption>
                <thead>
                    <tr>
                        <th>Configuration option=Default value</th>
                        <th>(Type) Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>admin_user= </td>
                        <td>(StrOpt) Admin Quantum user defined in
                            keystone </td>
                    </tr>
                    <tr>
                        <td>admin_password= </td>
                        <td>(StrOpt) The users password </td>
                    </tr>
                    <tr>
                        <td>admin_tenant_name= </td>
                        <td>(StrOpt) The admin tenant name </td>
                    </tr>
                    <tr>
                        <td>auth_url= </td>
                        <td>(StrOpt) The URL used to validate tokens.
                            `auth_protocol`://`auth_host`:`auth_port`/v2.0
                        </td>
                    </tr>
                    <tr>
                        <td>auth_strategy=keystone </td>
                        <td>(StrOpt) The strategy to use for
                            authentication. Supports noauth or
                            keystone. </td>
                    </tr>
                    <tr>
                        <td>auth_region= </td>
                        <td>(StrOpt) The authentication region </td>
                    </tr>
                    <tr>
                        <td>interface_driver= </td>
                        <td>(StrOpt) The driver used to manage the
                            virtual interface. </td>
                    </tr>
                </tbody>
            </table></para>
    </section>
</appendix>
