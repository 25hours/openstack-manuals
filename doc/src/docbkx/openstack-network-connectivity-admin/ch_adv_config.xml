<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!-- Some useful entities borrowed from HTML -->
<!ENTITY ndash  "&#x2013;">
<!ENTITY mdash  "&#x2014;">
<!ENTITY hellip "&#x2026;">
<!ENTITY plusmn "&#xB1;">

<!-- Useful for describing APIs -->
<!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
<!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
<!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
<!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

<!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
<imageobject role="fo">
<imagedata fileref="figures/Check_mark_23x20_02.svg"
format="SVG" scale="60"/>
</imageobject>
<imageobject role="html">
<imagedata fileref="../figures/Check_mark_23x20_02.png"
format="PNG" />
</imageobject>
</inlinemediaobject>'>

<!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
<imageobject role="fo">
<imagedata fileref="figures/Arrow_east.svg"
format="SVG" scale="60"/>
</imageobject>
<imageobject role="html">
<imagedata fileref="../figures/Arrow_east.png"
format="PNG" />
</imageobject>
</inlinemediaobject>'>
]>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="ch_adv_config">
    <title>Advanced Configuration Options</title>
    <para>This section describes advanced configurations options for
        various system components (i.e. config options where the
        default is usually ok, but that the user may want to tweak).
        After installing from packages, $QUANTUM_CONF_DIR is
            <filename>/etc/quantum</filename>.</para>
    <section xml:id="quantum_server">
        <title>Quantum Server with Plugin</title>
        <para>This is the Quantum service that runs the Quantum API
            Web Server. It is responsible for loading a plugin and
            passing the API calls to the plugin for processing. The
            quantum-server should receive one of more configuration
            files as it its input, for example:</para>
        <para>
            <screen><computeroutput>quantum-server --config-file &lt;quantum config&gt; --config-file &lt;plugin config&gt;</computeroutput></screen>
        </para>
        <para>The quantum config contains the common quantum
            configuration parameters. The plugin config contains the
            plugin specific flags. The plugin that is run on the
            service is loaded via the configuration parameter
            ‘core_plugin’. In some cases a plugin may have an agent
            that performs the actual networking. Specific
            configuration details can be seen in the Appendix -
            Configuration File Options. </para>
        <para>Most plugins require a SQL database. After
            installing and starting the database server, set a password for
            the root account and delete the anonymous accounts: </para>
        <screen><computeroutput>$&gt; mysql -u root
mysql&gt; update mysql.user set password = password('iamroot') where user = 'root';
mysql&gt; delete from mysql.user where user = '';</computeroutput></screen>
        <para>Create a database and user account specifically for
            plugin:</para>
        <screen><computeroutput>mysql&gt; create database &lt;database-name&gt;;
mysql&gt; create user '&lt;user-name&gt;'@'localhost' identified by '&lt;user-name&gt;';
mysql&gt; create user '&lt;user-name&gt;'@'%' identified by '&lt;user-name&gt;';
mysql&gt; grant all on &lt;database-name&gt;.* to '&lt;user-name&gt;'@'%';</computeroutput></screen>
        <para>Once the above is done you can update the settings in
            the relevant plugin configuration files. The plugin
            specific configuration files can be found at
            $QUANTUM_CONF_DIR/plugins.</para>
        <para>Some plugins have a L2 agent that performs the actual
            networking. That is, the agent will attach the virtual
            machine NIC to the Quantum network. Each node should have
            a Quantum agent running on it. Note that the agent
            receives the following input parameters:</para>
       <screen><computeroutput>quantum-plugin-agent
                --config-file &lt;quantum config&gt; --config-file
                &lt;plugin config&gt;</computeroutput></screen>
        <para>Two things need to be done prior to working with the
            plugin:</para>
       <orderedlist><listitem>
                <para>Ensure that the core plugin is updated.</para>
            </listitem>
            <listitem>
                <para>Ensure that the database connection is correctly
                    set.</para>
            </listitem></orderedlist>
        <para>The table below contains examples for these settings.
            Some linux packages may provide installation utilities
            that configure these. <table rules="all">
                <caption>Settings</caption>
                <thead>
                    <tr>
                        <th></th>
                        <th>OpenvSwitch</th>
                        <th>Linux Bridge</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>core_plugin ($QUANTUM_CONF_DIR/quantum.conf)</td>
                        <td>quantum.plugins.openvswitch.ovs_quantum_plugin.OVSQuantumPluginV2</td>
                        <td>quantum.plugins.linuxbridge.lb_quantum_plugin.LinuxBridgePluginV2</td>
                    </tr>
                    <tr>
                        <td>sql_connection (in the plugin configuration file)</td>
                        <td>mysql://&lt;username&gt;:&lt;password&gt;@localhost/ovs_quantum?charset=utf8</td>
                        <td>mysql://&lt;username&gt;:&lt;password&gt;@localhost/quantum_linux_bridge?charset=utf8</td>
                    </tr>
                    <tr>
                        <td>Plugin Configuration File</td>
                        <td>$QUANTUM_CONF_DIR/plugins/openvswitch/ovs_quantum_plugin.ini</td>
                        <td>$QUANTUM_CONF_DIR/plugins/linuxbridge/linuxbridge_conf.ini</td>
                    </tr>
                    <tr>
                        <td>Agent </td>
                        <td>quantum-openvswitch-agent</td>
                        <td>quantum-linuxbridge-agent</td>
                    </tr>
                </tbody>
            </table></para>
        <para>All of the plugin configuration files options can be
            found in the Appendix - Configuration File Options.
        </para>
    </section>
    <section xml:id="dhcp_agent">
        <title>DHCP Agent</title>
        <para>There is an option to run a DHCP agent that will
            allocate IP addresses to virtual machines running on the
            network. When a Quantum subnet is created, by default, the
            subnet has DHCP enabled. The node that runs the DHCP agent
            should run:</para>
        <screen><computeroutput>quantum-dhcp-agent --config-file &lt;quantum config&gt;
            --config-file &lt;dhcp config&gt;</computeroutput></screen>
        <para>Currently the DHCP agent uses dnsmasq to perform that
            static address assignment. A driver needs to be configured
            that matches the plugin running on the service. <table
                rules="all">
                <caption>DHCP Agent</caption>
                <thead>
                    <tr>
                        <th>  </th>
                        <th>OpenvSwitch </th>
                        <th>Linux Bridge </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>interface_driver
                            ($QUANTUM_CONF_DIR/dhcp_agent.ini)</td>
                        <td>quantum.agent.linux.interface.OVSInterfaceDriver</td>
                        <td>quantum.agent.linux.interface.BridgeInterfaceDriver</td>
                    </tr>
                </tbody>
            </table></para>
        <para>The DHCP agent will need to create a Quantum
            port.</para>
        <note>
            <para>By default the DHCP agent makes use of linux
                namespaces. If the linux installation does not support
                this then this can be disabled by configuring:</para>
        </note>
        <para>use_namespaces = False</para>
        <para>By default this is True</para>
        <para>All of the DHCP agent configuration files options can be
            found in the Appendix - Configuration File Options.</para>
        <para>Note that there may be some drivers for the DHCP agent
            that require keystone authentication, for example the meta
            plugin.</para>
        <para>L3 Agent</para>
        <para>There is an option to run a L3 agent that will give
            enable layer 3 forwarding and floating IP support. The
            node that runs the L3 agent should run:</para>
        <para>quantum-dhcp-agent --config-file &lt;quantum config&gt;
            --config-file &lt;l3 config&gt;</para>
        <para>A driver needs to be configured that matches the plugin
            running on the service. The driver is used to create the
            routing interface.<table rules="all">
                <caption>Drivers</caption>
                <thead>
                    <tr>
                        <th>  </th>
                        <th>OpenvSwitch </th>
                        <th>Linux Bridge </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td> interface_driver ($QUANTUM_CONF_DIR/l3_agent.ini) </td>
                        <td>quantum.agent.linux.interface.OVSInterfaceDriver </td>
                        <td>quantum.agent.linux.interface.BridgeInterfaceDriver</td>
                    </tr>
                    <tr>
                        <td>external_network_bridge ($QUANTUM_CONF_DIR/l3_agent.ini) </td>
                        <td>br-ex </td>
                        <td>This field must be left empty. This is
                            due to the fact that the interface will be
                            created at run time. </td>
                    </tr>
                </tbody>
            </table></para>
        <para>The L3 agent will need to create a Quantum port for each
            router. The following parameters need to be configured in
            order to do this:<orderedlist>
                <listitem>
                    <para>Keystone authentication:</para>
                   <screen><computeroutput>auth_url="$KEYSTONE_SERVICE_PROTOCOL://$KEYSTONE_AUTH_HOST:$KEYSTONE_AUTH_PORT/v2.0"</computeroutput></screen>
                    <para>or</para>
                  <screen><computeroutput>auth_host $KEYSTONE_SERVICE_HOST
auth_port $KEYSTONE_AUTH_PORT
auth_protocol $KEYSTONE_SERVICE_PROTOCOL</computeroutput></screen>
                </listitem>
                <listitem>
                    <para>Admin user details:</para>
                    <screen><computeroutput>admin_tenant_name $SERVICE_TENANT_NAME
admin_user $Q_ADMIN_USERNAME
admin_password $SERVICE_PASSWORD</computeroutput></screen>
                    <note>
                        <para>By default the L3 agent makes use of
                            Linux namespaces. If the linux
                            installation does not support this then
                            this can be disabled by
                            configuring:</para>
                    </note>
                    <screen><computeroutput>use_namespaces = False</computeroutput></screen>
                    <para>By default this is True. If this is set as
                        False then only one router ID can be supported
                        per node. This must be configured via the
                        configuration variable router_id.</para>
                    <para>All of the DHCP agent configuration files
                        options can be found in the Appendix -
                        Configuration File Options.</para>
                </listitem>
            </orderedlist></para>
    </section>
    <section xml:id="l3_agent_detail">
    <title>L3 Agent</title>
    <para>[Content to be added]</para>
    </section>
</chapter>
