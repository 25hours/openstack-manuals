<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!-- Some useful entities borrowed from HTML -->
<!ENTITY ndash  "&#x2013;">
<!ENTITY mdash  "&#x2014;">
<!ENTITY hellip "&#x2026;">
<!ENTITY plusmn "&#xB1;">

<!-- Useful for describing APIs -->
<!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
<!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
<!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
<!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

<!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
<imageobject role="fo">
<imagedata fileref="figures/Check_mark_23x20_02.svg"
format="SVG" scale="60"/>
</imageobject>
<imageobject role="html">
<imagedata fileref="../figures/Check_mark_23x20_02.png"
format="PNG" />
</imageobject>
</inlinemediaobject>'>

<!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
<imageobject role="fo">
<imagedata fileref="figures/Arrow_east.svg"
format="SVG" scale="60"/>
</imageobject>
<imageobject role="html">
<imagedata fileref="../figures/Arrow_east.png"
format="PNG" />
</imageobject>
</inlinemediaobject>'>
]>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="ch_adv_features">
    <title>Advanced Features through API Extensions</title>
    <para>This section discusses two API extensions implemented by
        several plugins.  We include them in this guide as they are
        provide capabilities similar to what was available in
        nova-network and are thus likely to be relevant to a large
        portion of the OpenStack community.  </para>
    <section xml:id="provider_networks">
        <title>Provider Networks</title>
        <para>Provider networks allow cloud administrators to create Quantum
            networks that map directly to physical networks in the
            data center.  This is commonly used to give tenants direct
            access to a "public" network that can be used to reach the
            Internet.  It may also be used to integrate with VLANs in
            the network that already have a defined meaning (e.g.,
            allow a VM from the "marketing" department to be placed on
            the same VLAN as bare-metal marketing hosts in the same
            data center).  </para>
        <para>[Detailed configuration instructions content to be added]</para>
    </section>
    <section xml:id="l3_router_and_nat">
        <title>L3 Routing and NAT</title>
        <para>Just like the core Quantum API provides abstract L2 network
        segments that are decopuled from the technology used to implement
        the L2 network, Quantum includes an API extension that provides
        abstract L3 routers that API users can dynamically provision and
        configure.  These Quantum routers can connect multiple L2 Quantum
        networks, and can also provide a "gateway" that connects one or more
        private L2 networks to a shared "external" network (e.g., a public
        network for access to the Internet).  See <xref linkend="use_cases_single_router"/> and
        <xref linkend="use_cases_tenant_router"/> for details on
        common models of deploying Quantum L3 routers.</para>
        <para>
        The L3 router provides basic NAT capabilities on "gateway" ports
        that uplink the router to external networks.  This router SNATs all
        traffic by default, and supports "Floating IPs", which creates a
        static one-to-one mapping from a public IP on the external network
        to a private IP on one of the other subnets attached to the router.
        This allows a tenant to selectively expose VMs on private networks to
        other hosts on the external network (and often to all hosts on the
        Internet).  Floating IPs can be allocated and then mapped from one
        Quantum port to another, as needed.
        </para>
        <section xml:id="l3_api_abstractions">
            <title>L3 API Abstractions</title>
            <table rules="all">
                <caption>Router</caption>
                <thead>
                    <tr>
                        <th> Attribute name </th>
                        <th> Type </th>
                        <th> Default Value </th>
                        <th> Description </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>id </td>
                        <td>uuid-str </td>
                        <td>generated </td>
                        <td>UUID for the router. </td>
                    </tr>
                    <tr>
                        <td>name </td>
                        <td>String </td>
                        <td>None </td>
                        <td>Human-readable name for the router. Might
                            not be unique. </td>
                    </tr>
                    <tr>
                        <td>admin_state_up </td>
                        <td>Bool </td>
                        <td>True </td>
                        <td>The administrative state of router. If
                            false (down), the router does not forward
                            packets.</td>
                    </tr>
                    <tr>
                        <td>status </td>
                        <td>String </td>
                        <td>N/A </td>
                        <td><para>Indicates whether router is
                                  currently operational. </para></td>
                    </tr>
                    <tr>
                        <td>tenant_id </td>
                        <td>uuid-str </td>
                        <td>N/A </td>
                        <td>Owner of the router. Only admin users can
                            specify a tenant_id other than its own.
                        </td>
                    </tr>
                    <tr>
                        <td>external_gateway_info</td>
                        <td>dict contain 'network_id' key-value pair</td>
                        <td>Null</td>
                        <td>External network that this router connects
                            to for gateway services (e.g., NAT)</td>
                    </tr>
                </tbody>
            </table>
            <table rules="all">
                <caption>Floating IP</caption>
                <thead>
                    <tr>
                        <th> Attribute name </th>
                        <th> Type </th>
                        <th> Default Value </th>
                        <th> Description </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>id </td>
                        <td>uuid-str </td>
                        <td>generated </td>
                        <td>UUID for the floating IP. </td>
                    </tr>
                    <tr>
                        <td>floating_ip_address</td>
                        <td>string (IP address)</td>
                        <td>allocated by Quantum</td>
                        <td>The external network IP address available
                            to be mapped to an internal IP address.</td>
                    </tr>
                    <tr>
                        <td>floating_network_id</td>
                        <td>uuid-str</td>
                        <td>N/A</td>
                        <td><para>The network indicating the set of subnets
                                  from which the floating IP should be
                                  allocated</para></td>
                    </tr>
                    <tr>
                        <td>router_id </td>
                        <td>uuid-str </td>
                        <td>N/A</td>
                        <td>Read-only value indicating the router that
                            connects the external network to the associated
                            internal port, if a port is associated.
                        </td>
                    </tr>
                    <tr>
                        <td>port_id</td>
                        <td>uuid-str</td>
                        <td>Null</td>
                        <td>Indicates the internal Quantum port associated
                            with the external floating IP.</td>
                    </tr>
                    <tr>
                        <td>fixed_ip_address</td>
                        <td>string (IP address)</td>
                        <td>Null</td>
                        <td>Indicates the IP address on the internal port
                            that is mapped to by the floating IP (since
                            a Quantum port might have more than one IP
                            address).</td>
                    </tr>
                    <tr>
                        <td>tenant_id </td>
                        <td>uuid-str </td>
                        <td>N/A </td>
                        <td>Owner of the Floating IP. Only admin users can
                            specify a tenant_id other than its own.
                        </td>
                    </tr>
                </tbody>
            </table>

        </section>
        <section xml:id="l3_workflow">
            <title>Common L3 Workflow</title>
            <para>Create external networks (admin-only) </para>
            <screen><computeroutput>quantum net-create public --router:external=True
quantum subnet-create public 172.16.1.0/24 </computeroutput></screen>
            <para>Viewing external networks: </para>
            <screen><computeroutput>quantum net-list -- --router:external=True</computeroutput></screen>
            <para>Creating routers</para>
            <para>Internal-only router to connect multiple L2 networks
                privately.  </para>
            <screen><computeroutput>quantum net-create net1
quantum subnet-create net1 10.0.0.0/24
quantum net-create net2
quantum subnet-create net2 10.0.1.0/24
quantum router-create router1
quantum router-interface-add router1 &lt;subnet1-uuid&gt;
quantum router-interface-add router1 &lt;subnet2-uuid&gt;</computeroutput></screen>
            <para>The router will get an interface with the gateway_ip
                address of the subnet, and this interface will be
                attached to a port on the L2 Quantum network
                associated with the subnet. The router will also get
                an gateway interface to the specified external
                network.  This will provide SNAT connectivity to the
                external network as well as support for floating IPs
                allocated on that external networks (see below). 
                Commonly an external network maps to a network in the
                provider </para>
            <para>A router can also be connected to an “external
                network”, allowing that router to act as a NAT gateway
                for external connectivity.  </para>
            <screen><computeroutput>quantum router-gateway-set router1 &lt;ext-net-id&gt; </computeroutput></screen>
            <para>Viewing routers:</para>
            <para>List all routers:
                <screen><computeroutput>quantum router-list</computeroutput></screen></para>
            <para>Show a specific router:
                <screen><computeroutput>quantum router-show &lt;router_id&gt;</computeroutput></screen></para>
            <para>Show all internal interfaces for a router:
                <screen><computeroutput>quantum port-list -- --device_id=&lt;router_id&gt;</computeroutput></screen></para>
            <para>Associating / Disassociating Floating IPs: </para>
            <para>First, identify the port-id representing the VM NIC
                that the floating IP should map to: </para>
            <screen><computeroutput>quantum port-list -c id -c fixed_ips -- --device_id=ZZZ</computeroutput></screen>
            <para>This port must be on a Quantum subnet that is
                attached to a router uplinked to the external network
                that will be used to create the floating IP. 
                Conceptually, this is because the router must be able
                to perform the Destination NAT (DNAT) rewriting of
                packets from the Floating IP address (chosen from a
                subnet on the external network) to the internal Fixed
                IP (chosen from a private subnet that is “behind” the
                router).  </para>
            <para>Create floating IP unassociated, then
                associate</para>
            <screen><computeroutput>quantum floatingip-create &lt;ext-net-id&gt;
quantum floatingip-associate &lt;floatingip-id&gt; &lt;internal VM port-id&gt; </computeroutput></screen>
            <para>create floating IP and associate in a single
                step</para>
            <screen><computeroutput>quantum floatingip-create &lt;ext-net-id&gt; --port_id &lt;internal VM port-id&gt; </computeroutput></screen>
            <para>Viewing Floating IP State: </para>
            <para>View all: </para>
            <screen><computeroutput>quantum floatingip-list</computeroutput></screen>
            <para>Find floating IP for a particular VM port: </para>
            <screen><computeroutput>quantum floatingip-list -- --port_id=ZZZ - disassociate</computeroutput></screen>
            <screen><computeroutput>quantum floatingip-associate &lt;floatingip-id&gt;</computeroutput></screen>
            <para>L3 Tear Down</para>
            <para>When;s:</para>
            <screen><computeroutput>quantum floatingip-delete &lt;floatingip-id&gt; </computeroutput></screen>
            <para>Then clear the any gateway: </para>
            <screen><computeroutput>quantum router-gateway-clear router1</computeroutput></screen>
            <para>Then remove the interfaces from the router (deleting
                the network and subnet will do this as well):</para>
            <screen><computeroutput>quantum router-interface-remove router1 &lt;subnet-id&gt; </computeroutput></screen>
            <para>Finally, delete the router: </para>
            <screen><computeroutput>quantum router-delete router1</computeroutput></screen>
        </section>
    </section>
</chapter>
