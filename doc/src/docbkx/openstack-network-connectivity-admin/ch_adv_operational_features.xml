<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!-- Some useful entities borrowed from HTML -->
<!ENTITY ndash  "&#x2013;">
<!ENTITY mdash  "&#x2014;">
<!ENTITY hellip "&#x2026;">
<!ENTITY plusmn "&#xB1;">

<!-- Useful for describing APIs -->
<!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
<!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
<!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
<!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

<!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
<imageobject role="fo">
<imagedata fileref="figures/Check_mark_23x20_02.svg"
format="SVG" scale="60"/>
</imageobject>
<imageobject role="html">
<imagedata fileref="../figures/Check_mark_23x20_02.png"
format="PNG" />
</imageobject>
</inlinemediaobject>'>

<!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
<imageobject role="fo">
<imagedata fileref="figures/Arrow_east.svg"
format="SVG" scale="60"/>
</imageobject>
<imageobject role="html">
<imagedata fileref="../figures/Arrow_east.png"
format="PNG" />
</imageobject>
</inlinemediaobject>'>

]>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="ch_adv_operational_features">
    <title>Advanced Operational Features</title>
    <section xml:id="ch_adv_logging">
        <title>Logging Settings</title>
        <para>Quantum components use Python logging module to do logging.
        Logging configuration can be provided in quantum.conf or as command line options.
        Command options will override ones in quantum.conf.</para>
        <para>Two ways to specify the logging configuration for Quantum components:</para>
        <orderedlist>
            <listitem>
                <para>Provide logging settings in a logging configuration file.</para>
                <para>Please see <link xlink:href="http://docs.python.org/howto/logging.html">Python Logging HOWTO</link> for logging configuration file.</para>
            </listitem>
            <listitem>
                <para>Provide logging setting in quantum.conf</para>
                <screen>
                    <computeroutput>
[DEFAULT]
# Default log level is WARNING
# Show debugging output in logs (sets DEBUG log level output)
# debug = False

# Show more verbose log output (sets INFO log level output) if debug is False
# verbose = False

# log_format = %(asctime)s %(levelname)8s [%(name)s] %(message)s
# log_date_format = %Y-%m-%d %H:%M:%S

# use_syslog = False
# syslog_log_facility = LOG_USER

# if use_syslog is False, we can set log_file and log_dir.
# if use_syslog is False and we do not set log_file,
# the log will be printed to stdout.
# log_file =
# log_dir =</computeroutput>
                </screen>
            </listitem>
        </orderedlist>
    </section>
    <section xml:id="ch_adv_notification">
        <title>Notifications</title>
        <section xml:id="ch_adv_notification_overview">
        <title>Notification Options</title>
        <para>Notifications can be sent when Quantum resources such as network, subnet and port
        are created, updated or deleted. To support DHCP agent, rabbit_notifier driver must be set.
        To set up the notification, edit notification options in quantum.conf:</para>
        <screen>
                    <computeroutput>
# ============ Notification System Options =====================

# Notifications can be sent when network/subnet/port are create, updated or deleted.
# There are three methods of sending notifications: logging (via the
# log_file directive), rpc (via a message queue) and
# noop (no notifications sent, the default)

# Notification_driver can be defined multiple times
# Do nothing driver
# notification_driver = quantum.openstack.common.notifier.no_op_notifier
# Logging driver
# notification_driver = quantum.openstack.common.notifier.log_notifier
# RPC driver
notification_driver = quantum.openstack.common.notifier.rabbit_notifier

# default_notification_level is used to form actual topic names or to set logging level
# default_notification_level = INFO

# default_publisher_id is a part of the notification payload
# host = myhost.com
# default_publisher_id = $host

# Defined in rabbit_notifier for rpc way, can be comma separated values.
# The actual topic names will be %s.%(default_notification_level)s
notification_topics = notifications
                    </computeroutput>
                </screen>
                </section>
                <section xml:id="ch_adv_notification_cases">
                <title>Setting Cases</title>
                <section xml:id="ch_adv_notification_cases_log_rpc">
                <title>Logging and RPC</title>
                <para>The options below will make Quantum server send notifications via logging and RPC.
                The logging options are described in <link linkend="ch_adv_logging">Logging Settings</link>.
                RPC notifications will go to 'notifications.info' queue binded to a topic exchange defined
                by 'control_exchange' in quantum.conf.</para>
        <screen>
                    <computeroutput>
# ============ Notification System Options =====================

# Notifications can be sent when network/subnet/port are create, updated or deleted.
# There are three methods of sending notifications: logging (via the
# log_file directive), rpc (via a message queue) and
# noop (no notifications sent, the default)

# Notification_driver can be defined multiple times
# Do nothing driver
# notification_driver = quantum.openstack.common.notifier.no_op_notifier
# Logging driver
notification_driver = quantum.openstack.common.notifier.log_notifier
# RPC driver
notification_driver = quantum.openstack.common.notifier.rabbit_notifier

# default_notification_level is used to form actual topic names or to set logging level
default_notification_level = INFO

# default_publisher_id is a part of the notification payload
# host = myhost.com
# default_publisher_id = $host

# Defined in rabbit_notifier for rpc way, can be comma separated values.
# The actual topic names will be %s.%(default_notification_level)s
notification_topics = notifications
                    </computeroutput>
                </screen>
                </section>
                <section xml:id="ch_adv_notification_cases_multi_rpc_topics">
                <title>Multiple RPC Topics</title>
                <para>The options below will make Quantum server send notifications to multiple RPC topics.
                RPC notifications will go to 'notifications_one.info' and 'notifications_two.info' queues binded
                to a topic exchange defined by 'control_exchange' in quantum.conf.</para>
        <screen>
                    <computeroutput>
# ============ Notification System Options =====================

# Notifications can be sent when network/subnet/port are create, updated or deleted.
# There are three methods of sending notifications: logging (via the
# log_file directive), rpc (via a message queue) and
# noop (no notifications sent, the default)

# Notification_driver can be defined multiple times
# Do nothing driver
# notification_driver = quantum.openstack.common.notifier.no_op_notifier
# Logging driver
# notification_driver = quantum.openstack.common.notifier.log_notifier
# RPC driver
notification_driver = quantum.openstack.common.notifier.rabbit_notifier

# default_notification_level is used to form actual topic names or to set logging level
default_notification_level = INFO

# default_publisher_id is a part of the notification payload
# host = myhost.com
# default_publisher_id = $host

# Defined in rabbit_notifier for rpc way, can be comma separated values.
# The actual topic names will be %s.%(default_notification_level)s
notification_topics = notifications_one,notifications_two
                    </computeroutput>
                </screen>
                </section>
                </section>
    </section>
    <section xml:id="ch_adv_quotas">
        <title>Quotas</title>
        <para>TBD</para>
    </section>
</chapter>
